/*
 * ${product.name.full} Admin REST API
 * This is a REST API reference for the ${product.name.full} Admin REST API.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package dev.mbo.keycloak.admin.api.dto;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import dev.mbo.keycloak.admin.api.dto.PolicyRepresentationDto;
import dev.mbo.keycloak.admin.api.dto.ResourceRepresentationDto;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;

/**
 * ScopeRepresentationDto
 */
@JsonPropertyOrder({
  ScopeRepresentationDto.JSON_PROPERTY_DISPLAY_NAME,
  ScopeRepresentationDto.JSON_PROPERTY_ICON_URI,
  ScopeRepresentationDto.JSON_PROPERTY_ID,
  ScopeRepresentationDto.JSON_PROPERTY_NAME,
  ScopeRepresentationDto.JSON_PROPERTY_POLICIES,
  ScopeRepresentationDto.JSON_PROPERTY_RESOURCES
})
@JsonTypeName("ScopeRepresentation")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ScopeRepresentationDto {
  public static final String JSON_PROPERTY_DISPLAY_NAME = "displayName";
  private String displayName;

  public static final String JSON_PROPERTY_ICON_URI = "iconUri";
  private String iconUri;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_POLICIES = "policies";
  private List<PolicyRepresentationDto> policies = null;

  public static final String JSON_PROPERTY_RESOURCES = "resources";
  private List<ResourceRepresentationDto> resources = null;

  public ScopeRepresentationDto() {
  }

  public ScopeRepresentationDto displayName(String displayName) {
    
    this.displayName = displayName;
    return this;
  }

   /**
   * Get displayName
   * @return displayName
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDisplayName() {
    return displayName;
  }


  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public ScopeRepresentationDto iconUri(String iconUri) {
    
    this.iconUri = iconUri;
    return this;
  }

   /**
   * Get iconUri
   * @return iconUri
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_ICON_URI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIconUri() {
    return iconUri;
  }


  @JsonProperty(JSON_PROPERTY_ICON_URI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIconUri(String iconUri) {
    this.iconUri = iconUri;
  }


  public ScopeRepresentationDto id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public ScopeRepresentationDto name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public ScopeRepresentationDto policies(List<PolicyRepresentationDto> policies) {
    
    this.policies = policies;
    return this;
  }

  public ScopeRepresentationDto addPoliciesItem(PolicyRepresentationDto policiesItem) {
    if (this.policies == null) {
      this.policies = new ArrayList<>();
    }
    this.policies.add(policiesItem);
    return this;
  }

   /**
   * Get policies
   * @return policies
  **/
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_POLICIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<PolicyRepresentationDto> getPolicies() {
    return policies;
  }


  @JsonProperty(JSON_PROPERTY_POLICIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPolicies(List<PolicyRepresentationDto> policies) {
    this.policies = policies;
  }


  public ScopeRepresentationDto resources(List<ResourceRepresentationDto> resources) {
    
    this.resources = resources;
    return this;
  }

  public ScopeRepresentationDto addResourcesItem(ResourceRepresentationDto resourcesItem) {
    if (this.resources == null) {
      this.resources = new ArrayList<>();
    }
    this.resources.add(resourcesItem);
    return this;
  }

   /**
   * Get resources
   * @return resources
  **/
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_RESOURCES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ResourceRepresentationDto> getResources() {
    return resources;
  }


  @JsonProperty(JSON_PROPERTY_RESOURCES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setResources(List<ResourceRepresentationDto> resources) {
    this.resources = resources;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ScopeRepresentationDto scopeRepresentation = (ScopeRepresentationDto) o;
    return Objects.equals(this.displayName, scopeRepresentation.displayName) &&
        Objects.equals(this.iconUri, scopeRepresentation.iconUri) &&
        Objects.equals(this.id, scopeRepresentation.id) &&
        Objects.equals(this.name, scopeRepresentation.name) &&
        Objects.equals(this.policies, scopeRepresentation.policies) &&
        Objects.equals(this.resources, scopeRepresentation.resources);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, iconUri, id, name, policies, resources);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ScopeRepresentationDto {\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    iconUri: ").append(toIndentedString(iconUri)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    policies: ").append(toIndentedString(policies)).append("\n");
    sb.append("    resources: ").append(toIndentedString(resources)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

