/*
 * ${product.name.full} Admin REST API
 * This is a REST API reference for the ${product.name.full} Admin REST API.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package dev.mbo.keycloak.admin.api.dto;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;

/**
 * RealmEventsConfigRepresentationDto
 */
@JsonPropertyOrder({
  RealmEventsConfigRepresentationDto.JSON_PROPERTY_ADMIN_EVENTS_DETAILS_ENABLED,
  RealmEventsConfigRepresentationDto.JSON_PROPERTY_ADMIN_EVENTS_ENABLED,
  RealmEventsConfigRepresentationDto.JSON_PROPERTY_ENABLED_EVENT_TYPES,
  RealmEventsConfigRepresentationDto.JSON_PROPERTY_EVENTS_ENABLED,
  RealmEventsConfigRepresentationDto.JSON_PROPERTY_EVENTS_EXPIRATION,
  RealmEventsConfigRepresentationDto.JSON_PROPERTY_EVENTS_LISTENERS
})
@JsonTypeName("RealmEventsConfigRepresentation")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class RealmEventsConfigRepresentationDto {
  public static final String JSON_PROPERTY_ADMIN_EVENTS_DETAILS_ENABLED = "adminEventsDetailsEnabled";
  private Boolean adminEventsDetailsEnabled;

  public static final String JSON_PROPERTY_ADMIN_EVENTS_ENABLED = "adminEventsEnabled";
  private Boolean adminEventsEnabled;

  public static final String JSON_PROPERTY_ENABLED_EVENT_TYPES = "enabledEventTypes";
  private List<String> enabledEventTypes = null;

  public static final String JSON_PROPERTY_EVENTS_ENABLED = "eventsEnabled";
  private Boolean eventsEnabled;

  public static final String JSON_PROPERTY_EVENTS_EXPIRATION = "eventsExpiration";
  private Long eventsExpiration;

  public static final String JSON_PROPERTY_EVENTS_LISTENERS = "eventsListeners";
  private List<String> eventsListeners = null;

  public RealmEventsConfigRepresentationDto() {
  }

  public RealmEventsConfigRepresentationDto adminEventsDetailsEnabled(Boolean adminEventsDetailsEnabled) {
    
    this.adminEventsDetailsEnabled = adminEventsDetailsEnabled;
    return this;
  }

   /**
   * Get adminEventsDetailsEnabled
   * @return adminEventsDetailsEnabled
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_ADMIN_EVENTS_DETAILS_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getAdminEventsDetailsEnabled() {
    return adminEventsDetailsEnabled;
  }


  @JsonProperty(JSON_PROPERTY_ADMIN_EVENTS_DETAILS_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAdminEventsDetailsEnabled(Boolean adminEventsDetailsEnabled) {
    this.adminEventsDetailsEnabled = adminEventsDetailsEnabled;
  }


  public RealmEventsConfigRepresentationDto adminEventsEnabled(Boolean adminEventsEnabled) {
    
    this.adminEventsEnabled = adminEventsEnabled;
    return this;
  }

   /**
   * Get adminEventsEnabled
   * @return adminEventsEnabled
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_ADMIN_EVENTS_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getAdminEventsEnabled() {
    return adminEventsEnabled;
  }


  @JsonProperty(JSON_PROPERTY_ADMIN_EVENTS_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAdminEventsEnabled(Boolean adminEventsEnabled) {
    this.adminEventsEnabled = adminEventsEnabled;
  }


  public RealmEventsConfigRepresentationDto enabledEventTypes(List<String> enabledEventTypes) {
    
    this.enabledEventTypes = enabledEventTypes;
    return this;
  }

  public RealmEventsConfigRepresentationDto addEnabledEventTypesItem(String enabledEventTypesItem) {
    if (this.enabledEventTypes == null) {
      this.enabledEventTypes = new ArrayList<>();
    }
    this.enabledEventTypes.add(enabledEventTypesItem);
    return this;
  }

   /**
   * Get enabledEventTypes
   * @return enabledEventTypes
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_ENABLED_EVENT_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getEnabledEventTypes() {
    return enabledEventTypes;
  }


  @JsonProperty(JSON_PROPERTY_ENABLED_EVENT_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnabledEventTypes(List<String> enabledEventTypes) {
    this.enabledEventTypes = enabledEventTypes;
  }


  public RealmEventsConfigRepresentationDto eventsEnabled(Boolean eventsEnabled) {
    
    this.eventsEnabled = eventsEnabled;
    return this;
  }

   /**
   * Get eventsEnabled
   * @return eventsEnabled
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_EVENTS_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getEventsEnabled() {
    return eventsEnabled;
  }


  @JsonProperty(JSON_PROPERTY_EVENTS_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEventsEnabled(Boolean eventsEnabled) {
    this.eventsEnabled = eventsEnabled;
  }


  public RealmEventsConfigRepresentationDto eventsExpiration(Long eventsExpiration) {
    
    this.eventsExpiration = eventsExpiration;
    return this;
  }

   /**
   * Get eventsExpiration
   * @return eventsExpiration
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_EVENTS_EXPIRATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getEventsExpiration() {
    return eventsExpiration;
  }


  @JsonProperty(JSON_PROPERTY_EVENTS_EXPIRATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEventsExpiration(Long eventsExpiration) {
    this.eventsExpiration = eventsExpiration;
  }


  public RealmEventsConfigRepresentationDto eventsListeners(List<String> eventsListeners) {
    
    this.eventsListeners = eventsListeners;
    return this;
  }

  public RealmEventsConfigRepresentationDto addEventsListenersItem(String eventsListenersItem) {
    if (this.eventsListeners == null) {
      this.eventsListeners = new ArrayList<>();
    }
    this.eventsListeners.add(eventsListenersItem);
    return this;
  }

   /**
   * Get eventsListeners
   * @return eventsListeners
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_EVENTS_LISTENERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getEventsListeners() {
    return eventsListeners;
  }


  @JsonProperty(JSON_PROPERTY_EVENTS_LISTENERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEventsListeners(List<String> eventsListeners) {
    this.eventsListeners = eventsListeners;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RealmEventsConfigRepresentationDto realmEventsConfigRepresentation = (RealmEventsConfigRepresentationDto) o;
    return Objects.equals(this.adminEventsDetailsEnabled, realmEventsConfigRepresentation.adminEventsDetailsEnabled) &&
        Objects.equals(this.adminEventsEnabled, realmEventsConfigRepresentation.adminEventsEnabled) &&
        Objects.equals(this.enabledEventTypes, realmEventsConfigRepresentation.enabledEventTypes) &&
        Objects.equals(this.eventsEnabled, realmEventsConfigRepresentation.eventsEnabled) &&
        Objects.equals(this.eventsExpiration, realmEventsConfigRepresentation.eventsExpiration) &&
        Objects.equals(this.eventsListeners, realmEventsConfigRepresentation.eventsListeners);
  }

  @Override
  public int hashCode() {
    return Objects.hash(adminEventsDetailsEnabled, adminEventsEnabled, enabledEventTypes, eventsEnabled, eventsExpiration, eventsListeners);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RealmEventsConfigRepresentationDto {\n");
    sb.append("    adminEventsDetailsEnabled: ").append(toIndentedString(adminEventsDetailsEnabled)).append("\n");
    sb.append("    adminEventsEnabled: ").append(toIndentedString(adminEventsEnabled)).append("\n");
    sb.append("    enabledEventTypes: ").append(toIndentedString(enabledEventTypes)).append("\n");
    sb.append("    eventsEnabled: ").append(toIndentedString(eventsEnabled)).append("\n");
    sb.append("    eventsExpiration: ").append(toIndentedString(eventsExpiration)).append("\n");
    sb.append("    eventsListeners: ").append(toIndentedString(eventsListeners)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

