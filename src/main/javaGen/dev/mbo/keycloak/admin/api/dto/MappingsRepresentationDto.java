/*
 * ${product.name.full} Admin REST API
 * This is a REST API reference for the ${product.name.full} Admin REST API.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package dev.mbo.keycloak.admin.api.dto;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import dev.mbo.keycloak.admin.api.dto.RoleRepresentationDto;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;

/**
 * MappingsRepresentationDto
 */
@JsonPropertyOrder({
  MappingsRepresentationDto.JSON_PROPERTY_CLIENT_MAPPINGS,
  MappingsRepresentationDto.JSON_PROPERTY_REALM_MAPPINGS
})
@JsonTypeName("MappingsRepresentation")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class MappingsRepresentationDto {
  public static final String JSON_PROPERTY_CLIENT_MAPPINGS = "clientMappings";
  private Map<String, Object> clientMappings = null;

  public static final String JSON_PROPERTY_REALM_MAPPINGS = "realmMappings";
  private List<RoleRepresentationDto> realmMappings = null;

  public MappingsRepresentationDto() {
  }

  public MappingsRepresentationDto clientMappings(Map<String, Object> clientMappings) {
    
    this.clientMappings = clientMappings;
    return this;
  }

  public MappingsRepresentationDto putClientMappingsItem(String key, Object clientMappingsItem) {
    if (this.clientMappings == null) {
      this.clientMappings = new HashMap<>();
    }
    this.clientMappings.put(key, clientMappingsItem);
    return this;
  }

   /**
   * Get clientMappings
   * @return clientMappings
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_CLIENT_MAPPINGS)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, Object> getClientMappings() {
    return clientMappings;
  }


  @JsonProperty(JSON_PROPERTY_CLIENT_MAPPINGS)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)
  public void setClientMappings(Map<String, Object> clientMappings) {
    this.clientMappings = clientMappings;
  }


  public MappingsRepresentationDto realmMappings(List<RoleRepresentationDto> realmMappings) {
    
    this.realmMappings = realmMappings;
    return this;
  }

  public MappingsRepresentationDto addRealmMappingsItem(RoleRepresentationDto realmMappingsItem) {
    if (this.realmMappings == null) {
      this.realmMappings = new ArrayList<>();
    }
    this.realmMappings.add(realmMappingsItem);
    return this;
  }

   /**
   * Get realmMappings
   * @return realmMappings
  **/
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_REALM_MAPPINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<RoleRepresentationDto> getRealmMappings() {
    return realmMappings;
  }


  @JsonProperty(JSON_PROPERTY_REALM_MAPPINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRealmMappings(List<RoleRepresentationDto> realmMappings) {
    this.realmMappings = realmMappings;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MappingsRepresentationDto mappingsRepresentation = (MappingsRepresentationDto) o;
    return Objects.equals(this.clientMappings, mappingsRepresentation.clientMappings) &&
        Objects.equals(this.realmMappings, mappingsRepresentation.realmMappings);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clientMappings, realmMappings);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MappingsRepresentationDto {\n");
    sb.append("    clientMappings: ").append(toIndentedString(clientMappings)).append("\n");
    sb.append("    realmMappings: ").append(toIndentedString(realmMappings)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

