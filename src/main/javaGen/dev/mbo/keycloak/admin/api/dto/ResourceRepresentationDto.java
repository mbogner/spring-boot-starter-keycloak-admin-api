/*
 * ${product.name.full} Admin REST API
 * This is a REST API reference for the ${product.name.full} Admin REST API.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package dev.mbo.keycloak.admin.api.dto;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import dev.mbo.keycloak.admin.api.dto.ScopeRepresentationDto;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;

/**
 * ResourceRepresentationDto
 */
@JsonPropertyOrder({
  ResourceRepresentationDto.JSON_PROPERTY_ID,
  ResourceRepresentationDto.JSON_PROPERTY_ATTRIBUTES,
  ResourceRepresentationDto.JSON_PROPERTY_DISPLAY_NAME,
  ResourceRepresentationDto.JSON_PROPERTY_ICON_URI,
  ResourceRepresentationDto.JSON_PROPERTY_NAME,
  ResourceRepresentationDto.JSON_PROPERTY_OWNER_MANAGED_ACCESS,
  ResourceRepresentationDto.JSON_PROPERTY_SCOPES,
  ResourceRepresentationDto.JSON_PROPERTY_TYPE,
  ResourceRepresentationDto.JSON_PROPERTY_URIS
})
@JsonTypeName("ResourceRepresentation")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ResourceRepresentationDto {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_ATTRIBUTES = "attributes";
  private Map<String, Object> attributes = null;

  public static final String JSON_PROPERTY_DISPLAY_NAME = "displayName";
  private String displayName;

  public static final String JSON_PROPERTY_ICON_URI = "icon_uri";
  private String iconUri;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_OWNER_MANAGED_ACCESS = "ownerManagedAccess";
  private Boolean ownerManagedAccess;

  public static final String JSON_PROPERTY_SCOPES = "scopes";
  private List<ScopeRepresentationDto> scopes = null;

  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public static final String JSON_PROPERTY_URIS = "uris";
  private List<String> uris = null;

  public ResourceRepresentationDto() {
  }

  public ResourceRepresentationDto id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public ResourceRepresentationDto attributes(Map<String, Object> attributes) {
    
    this.attributes = attributes;
    return this;
  }

  public ResourceRepresentationDto putAttributesItem(String key, Object attributesItem) {
    if (this.attributes == null) {
      this.attributes = new HashMap<>();
    }
    this.attributes.put(key, attributesItem);
    return this;
  }

   /**
   * Get attributes
   * @return attributes
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_ATTRIBUTES)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, Object> getAttributes() {
    return attributes;
  }


  @JsonProperty(JSON_PROPERTY_ATTRIBUTES)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)
  public void setAttributes(Map<String, Object> attributes) {
    this.attributes = attributes;
  }


  public ResourceRepresentationDto displayName(String displayName) {
    
    this.displayName = displayName;
    return this;
  }

   /**
   * Get displayName
   * @return displayName
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDisplayName() {
    return displayName;
  }


  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public ResourceRepresentationDto iconUri(String iconUri) {
    
    this.iconUri = iconUri;
    return this;
  }

   /**
   * Get iconUri
   * @return iconUri
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_ICON_URI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIconUri() {
    return iconUri;
  }


  @JsonProperty(JSON_PROPERTY_ICON_URI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIconUri(String iconUri) {
    this.iconUri = iconUri;
  }


  public ResourceRepresentationDto name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public ResourceRepresentationDto ownerManagedAccess(Boolean ownerManagedAccess) {
    
    this.ownerManagedAccess = ownerManagedAccess;
    return this;
  }

   /**
   * Get ownerManagedAccess
   * @return ownerManagedAccess
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_OWNER_MANAGED_ACCESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getOwnerManagedAccess() {
    return ownerManagedAccess;
  }


  @JsonProperty(JSON_PROPERTY_OWNER_MANAGED_ACCESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOwnerManagedAccess(Boolean ownerManagedAccess) {
    this.ownerManagedAccess = ownerManagedAccess;
  }


  public ResourceRepresentationDto scopes(List<ScopeRepresentationDto> scopes) {
    
    this.scopes = scopes;
    return this;
  }

  public ResourceRepresentationDto addScopesItem(ScopeRepresentationDto scopesItem) {
    if (this.scopes == null) {
      this.scopes = new ArrayList<>();
    }
    this.scopes.add(scopesItem);
    return this;
  }

   /**
   * Get scopes
   * @return scopes
  **/
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_SCOPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ScopeRepresentationDto> getScopes() {
    return scopes;
  }


  @JsonProperty(JSON_PROPERTY_SCOPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setScopes(List<ScopeRepresentationDto> scopes) {
    this.scopes = scopes;
  }


  public ResourceRepresentationDto type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(String type) {
    this.type = type;
  }


  public ResourceRepresentationDto uris(List<String> uris) {
    
    this.uris = uris;
    return this;
  }

  public ResourceRepresentationDto addUrisItem(String urisItem) {
    if (this.uris == null) {
      this.uris = new ArrayList<>();
    }
    this.uris.add(urisItem);
    return this;
  }

   /**
   * Get uris
   * @return uris
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_URIS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getUris() {
    return uris;
  }


  @JsonProperty(JSON_PROPERTY_URIS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUris(List<String> uris) {
    this.uris = uris;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ResourceRepresentationDto resourceRepresentation = (ResourceRepresentationDto) o;
    return Objects.equals(this.id, resourceRepresentation.id) &&
        Objects.equals(this.attributes, resourceRepresentation.attributes) &&
        Objects.equals(this.displayName, resourceRepresentation.displayName) &&
        Objects.equals(this.iconUri, resourceRepresentation.iconUri) &&
        Objects.equals(this.name, resourceRepresentation.name) &&
        Objects.equals(this.ownerManagedAccess, resourceRepresentation.ownerManagedAccess) &&
        Objects.equals(this.scopes, resourceRepresentation.scopes) &&
        Objects.equals(this.type, resourceRepresentation.type) &&
        Objects.equals(this.uris, resourceRepresentation.uris);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, attributes, displayName, iconUri, name, ownerManagedAccess, scopes, type, uris);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResourceRepresentationDto {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    iconUri: ").append(toIndentedString(iconUri)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    ownerManagedAccess: ").append(toIndentedString(ownerManagedAccess)).append("\n");
    sb.append("    scopes: ").append(toIndentedString(scopes)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    uris: ").append(toIndentedString(uris)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

