/*
 * ${product.name.full} Admin REST API
 * This is a REST API reference for the ${product.name.full} Admin REST API.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package dev.mbo.keycloak.admin.api.dto;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.HashMap;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;

/**
 * ManagementPermissionReferenceDto
 */
@JsonPropertyOrder({
  ManagementPermissionReferenceDto.JSON_PROPERTY_ENABLED,
  ManagementPermissionReferenceDto.JSON_PROPERTY_RESOURCE,
  ManagementPermissionReferenceDto.JSON_PROPERTY_SCOPE_PERMISSIONS
})
@JsonTypeName("ManagementPermissionReference")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ManagementPermissionReferenceDto {
  public static final String JSON_PROPERTY_ENABLED = "enabled";
  private Boolean enabled;

  public static final String JSON_PROPERTY_RESOURCE = "resource";
  private String resource;

  public static final String JSON_PROPERTY_SCOPE_PERMISSIONS = "scopePermissions";
  private Map<String, Object> scopePermissions = null;

  public ManagementPermissionReferenceDto() {
  }

  public ManagementPermissionReferenceDto enabled(Boolean enabled) {
    
    this.enabled = enabled;
    return this;
  }

   /**
   * Get enabled
   * @return enabled
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getEnabled() {
    return enabled;
  }


  @JsonProperty(JSON_PROPERTY_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  public ManagementPermissionReferenceDto resource(String resource) {
    
    this.resource = resource;
    return this;
  }

   /**
   * Get resource
   * @return resource
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_RESOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getResource() {
    return resource;
  }


  @JsonProperty(JSON_PROPERTY_RESOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setResource(String resource) {
    this.resource = resource;
  }


  public ManagementPermissionReferenceDto scopePermissions(Map<String, Object> scopePermissions) {
    
    this.scopePermissions = scopePermissions;
    return this;
  }

  public ManagementPermissionReferenceDto putScopePermissionsItem(String key, Object scopePermissionsItem) {
    if (this.scopePermissions == null) {
      this.scopePermissions = new HashMap<>();
    }
    this.scopePermissions.put(key, scopePermissionsItem);
    return this;
  }

   /**
   * Get scopePermissions
   * @return scopePermissions
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_SCOPE_PERMISSIONS)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, Object> getScopePermissions() {
    return scopePermissions;
  }


  @JsonProperty(JSON_PROPERTY_SCOPE_PERMISSIONS)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)
  public void setScopePermissions(Map<String, Object> scopePermissions) {
    this.scopePermissions = scopePermissions;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ManagementPermissionReferenceDto managementPermissionReference = (ManagementPermissionReferenceDto) o;
    return Objects.equals(this.enabled, managementPermissionReference.enabled) &&
        Objects.equals(this.resource, managementPermissionReference.resource) &&
        Objects.equals(this.scopePermissions, managementPermissionReference.scopePermissions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(enabled, resource, scopePermissions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ManagementPermissionReferenceDto {\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    resource: ").append(toIndentedString(resource)).append("\n");
    sb.append("    scopePermissions: ").append(toIndentedString(scopePermissions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

