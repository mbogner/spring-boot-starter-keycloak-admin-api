/*
 * ${product.name.full} Admin REST API
 * This is a REST API reference for the ${product.name.full} Admin REST API.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package dev.mbo.keycloak.admin.api.dto;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import dev.mbo.keycloak.admin.api.dto.ProtocolMapperRepresentationDto;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;

/**
 * ClientScopeRepresentationDto
 */
@JsonPropertyOrder({
  ClientScopeRepresentationDto.JSON_PROPERTY_ATTRIBUTES,
  ClientScopeRepresentationDto.JSON_PROPERTY_DESCRIPTION,
  ClientScopeRepresentationDto.JSON_PROPERTY_ID,
  ClientScopeRepresentationDto.JSON_PROPERTY_NAME,
  ClientScopeRepresentationDto.JSON_PROPERTY_PROTOCOL,
  ClientScopeRepresentationDto.JSON_PROPERTY_PROTOCOL_MAPPERS
})
@JsonTypeName("ClientScopeRepresentation")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ClientScopeRepresentationDto {
  public static final String JSON_PROPERTY_ATTRIBUTES = "attributes";
  private Map<String, Object> attributes = null;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_PROTOCOL = "protocol";
  private String protocol;

  public static final String JSON_PROPERTY_PROTOCOL_MAPPERS = "protocolMappers";
  private List<ProtocolMapperRepresentationDto> protocolMappers = null;

  public ClientScopeRepresentationDto() {
  }

  public ClientScopeRepresentationDto attributes(Map<String, Object> attributes) {
    
    this.attributes = attributes;
    return this;
  }

  public ClientScopeRepresentationDto putAttributesItem(String key, Object attributesItem) {
    if (this.attributes == null) {
      this.attributes = new HashMap<>();
    }
    this.attributes.put(key, attributesItem);
    return this;
  }

   /**
   * Get attributes
   * @return attributes
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_ATTRIBUTES)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, Object> getAttributes() {
    return attributes;
  }


  @JsonProperty(JSON_PROPERTY_ATTRIBUTES)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)
  public void setAttributes(Map<String, Object> attributes) {
    this.attributes = attributes;
  }


  public ClientScopeRepresentationDto description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public ClientScopeRepresentationDto id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public ClientScopeRepresentationDto name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public ClientScopeRepresentationDto protocol(String protocol) {
    
    this.protocol = protocol;
    return this;
  }

   /**
   * Get protocol
   * @return protocol
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_PROTOCOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProtocol() {
    return protocol;
  }


  @JsonProperty(JSON_PROPERTY_PROTOCOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProtocol(String protocol) {
    this.protocol = protocol;
  }


  public ClientScopeRepresentationDto protocolMappers(List<ProtocolMapperRepresentationDto> protocolMappers) {
    
    this.protocolMappers = protocolMappers;
    return this;
  }

  public ClientScopeRepresentationDto addProtocolMappersItem(ProtocolMapperRepresentationDto protocolMappersItem) {
    if (this.protocolMappers == null) {
      this.protocolMappers = new ArrayList<>();
    }
    this.protocolMappers.add(protocolMappersItem);
    return this;
  }

   /**
   * Get protocolMappers
   * @return protocolMappers
  **/
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_PROTOCOL_MAPPERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ProtocolMapperRepresentationDto> getProtocolMappers() {
    return protocolMappers;
  }


  @JsonProperty(JSON_PROPERTY_PROTOCOL_MAPPERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProtocolMappers(List<ProtocolMapperRepresentationDto> protocolMappers) {
    this.protocolMappers = protocolMappers;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ClientScopeRepresentationDto clientScopeRepresentation = (ClientScopeRepresentationDto) o;
    return Objects.equals(this.attributes, clientScopeRepresentation.attributes) &&
        Objects.equals(this.description, clientScopeRepresentation.description) &&
        Objects.equals(this.id, clientScopeRepresentation.id) &&
        Objects.equals(this.name, clientScopeRepresentation.name) &&
        Objects.equals(this.protocol, clientScopeRepresentation.protocol) &&
        Objects.equals(this.protocolMappers, clientScopeRepresentation.protocolMappers);
  }

  @Override
  public int hashCode() {
    return Objects.hash(attributes, description, id, name, protocol, protocolMappers);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ClientScopeRepresentationDto {\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    protocol: ").append(toIndentedString(protocol)).append("\n");
    sb.append("    protocolMappers: ").append(toIndentedString(protocolMappers)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

