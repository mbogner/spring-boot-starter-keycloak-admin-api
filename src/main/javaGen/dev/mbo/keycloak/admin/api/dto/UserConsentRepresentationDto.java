/*
 * ${product.name.full} Admin REST API
 * This is a REST API reference for the ${product.name.full} Admin REST API.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package dev.mbo.keycloak.admin.api.dto;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;

/**
 * UserConsentRepresentationDto
 */
@JsonPropertyOrder({
  UserConsentRepresentationDto.JSON_PROPERTY_CLIENT_ID,
  UserConsentRepresentationDto.JSON_PROPERTY_CREATED_DATE,
  UserConsentRepresentationDto.JSON_PROPERTY_GRANTED_CLIENT_SCOPES,
  UserConsentRepresentationDto.JSON_PROPERTY_LAST_UPDATED_DATE
})
@JsonTypeName("UserConsentRepresentation")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class UserConsentRepresentationDto {
  public static final String JSON_PROPERTY_CLIENT_ID = "clientId";
  private String clientId;

  public static final String JSON_PROPERTY_CREATED_DATE = "createdDate";
  private Long createdDate;

  public static final String JSON_PROPERTY_GRANTED_CLIENT_SCOPES = "grantedClientScopes";
  private List<String> grantedClientScopes = null;

  public static final String JSON_PROPERTY_LAST_UPDATED_DATE = "lastUpdatedDate";
  private Long lastUpdatedDate;

  public UserConsentRepresentationDto() {
  }

  public UserConsentRepresentationDto clientId(String clientId) {
    
    this.clientId = clientId;
    return this;
  }

   /**
   * Get clientId
   * @return clientId
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_CLIENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getClientId() {
    return clientId;
  }


  @JsonProperty(JSON_PROPERTY_CLIENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setClientId(String clientId) {
    this.clientId = clientId;
  }


  public UserConsentRepresentationDto createdDate(Long createdDate) {
    
    this.createdDate = createdDate;
    return this;
  }

   /**
   * Get createdDate
   * @return createdDate
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_CREATED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getCreatedDate() {
    return createdDate;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreatedDate(Long createdDate) {
    this.createdDate = createdDate;
  }


  public UserConsentRepresentationDto grantedClientScopes(List<String> grantedClientScopes) {
    
    this.grantedClientScopes = grantedClientScopes;
    return this;
  }

  public UserConsentRepresentationDto addGrantedClientScopesItem(String grantedClientScopesItem) {
    if (this.grantedClientScopes == null) {
      this.grantedClientScopes = new ArrayList<>();
    }
    this.grantedClientScopes.add(grantedClientScopesItem);
    return this;
  }

   /**
   * Get grantedClientScopes
   * @return grantedClientScopes
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_GRANTED_CLIENT_SCOPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getGrantedClientScopes() {
    return grantedClientScopes;
  }


  @JsonProperty(JSON_PROPERTY_GRANTED_CLIENT_SCOPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGrantedClientScopes(List<String> grantedClientScopes) {
    this.grantedClientScopes = grantedClientScopes;
  }


  public UserConsentRepresentationDto lastUpdatedDate(Long lastUpdatedDate) {
    
    this.lastUpdatedDate = lastUpdatedDate;
    return this;
  }

   /**
   * Get lastUpdatedDate
   * @return lastUpdatedDate
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_LAST_UPDATED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getLastUpdatedDate() {
    return lastUpdatedDate;
  }


  @JsonProperty(JSON_PROPERTY_LAST_UPDATED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastUpdatedDate(Long lastUpdatedDate) {
    this.lastUpdatedDate = lastUpdatedDate;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserConsentRepresentationDto userConsentRepresentation = (UserConsentRepresentationDto) o;
    return Objects.equals(this.clientId, userConsentRepresentation.clientId) &&
        Objects.equals(this.createdDate, userConsentRepresentation.createdDate) &&
        Objects.equals(this.grantedClientScopes, userConsentRepresentation.grantedClientScopes) &&
        Objects.equals(this.lastUpdatedDate, userConsentRepresentation.lastUpdatedDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clientId, createdDate, grantedClientScopes, lastUpdatedDate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserConsentRepresentationDto {\n");
    sb.append("    clientId: ").append(toIndentedString(clientId)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    grantedClientScopes: ").append(toIndentedString(grantedClientScopes)).append("\n");
    sb.append("    lastUpdatedDate: ").append(toIndentedString(lastUpdatedDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

