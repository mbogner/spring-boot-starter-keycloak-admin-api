/*
 * ${product.name.full} Admin REST API
 * This is a REST API reference for the ${product.name.full} Admin REST API.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package dev.mbo.keycloak.admin.api.dto;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;

/**
 * GroupRepresentationDto
 */
@JsonPropertyOrder({
  GroupRepresentationDto.JSON_PROPERTY_ACCESS,
  GroupRepresentationDto.JSON_PROPERTY_ATTRIBUTES,
  GroupRepresentationDto.JSON_PROPERTY_CLIENT_ROLES,
  GroupRepresentationDto.JSON_PROPERTY_ID,
  GroupRepresentationDto.JSON_PROPERTY_NAME,
  GroupRepresentationDto.JSON_PROPERTY_PATH,
  GroupRepresentationDto.JSON_PROPERTY_REALM_ROLES,
  GroupRepresentationDto.JSON_PROPERTY_SUB_GROUPS
})
@JsonTypeName("GroupRepresentation")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class GroupRepresentationDto {
  public static final String JSON_PROPERTY_ACCESS = "access";
  private Map<String, Object> access = null;

  public static final String JSON_PROPERTY_ATTRIBUTES = "attributes";
  private Map<String, Object> attributes = null;

  public static final String JSON_PROPERTY_CLIENT_ROLES = "clientRoles";
  private Map<String, Object> clientRoles = null;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_PATH = "path";
  private String path;

  public static final String JSON_PROPERTY_REALM_ROLES = "realmRoles";
  private List<String> realmRoles = null;

  public static final String JSON_PROPERTY_SUB_GROUPS = "subGroups";
  private List<GroupRepresentationDto> subGroups = null;

  public GroupRepresentationDto() {
  }

  public GroupRepresentationDto access(Map<String, Object> access) {
    
    this.access = access;
    return this;
  }

  public GroupRepresentationDto putAccessItem(String key, Object accessItem) {
    if (this.access == null) {
      this.access = new HashMap<>();
    }
    this.access.put(key, accessItem);
    return this;
  }

   /**
   * Get access
   * @return access
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_ACCESS)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, Object> getAccess() {
    return access;
  }


  @JsonProperty(JSON_PROPERTY_ACCESS)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccess(Map<String, Object> access) {
    this.access = access;
  }


  public GroupRepresentationDto attributes(Map<String, Object> attributes) {
    
    this.attributes = attributes;
    return this;
  }

  public GroupRepresentationDto putAttributesItem(String key, Object attributesItem) {
    if (this.attributes == null) {
      this.attributes = new HashMap<>();
    }
    this.attributes.put(key, attributesItem);
    return this;
  }

   /**
   * Get attributes
   * @return attributes
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_ATTRIBUTES)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, Object> getAttributes() {
    return attributes;
  }


  @JsonProperty(JSON_PROPERTY_ATTRIBUTES)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)
  public void setAttributes(Map<String, Object> attributes) {
    this.attributes = attributes;
  }


  public GroupRepresentationDto clientRoles(Map<String, Object> clientRoles) {
    
    this.clientRoles = clientRoles;
    return this;
  }

  public GroupRepresentationDto putClientRolesItem(String key, Object clientRolesItem) {
    if (this.clientRoles == null) {
      this.clientRoles = new HashMap<>();
    }
    this.clientRoles.put(key, clientRolesItem);
    return this;
  }

   /**
   * Get clientRoles
   * @return clientRoles
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_CLIENT_ROLES)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, Object> getClientRoles() {
    return clientRoles;
  }


  @JsonProperty(JSON_PROPERTY_CLIENT_ROLES)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)
  public void setClientRoles(Map<String, Object> clientRoles) {
    this.clientRoles = clientRoles;
  }


  public GroupRepresentationDto id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public GroupRepresentationDto name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public GroupRepresentationDto path(String path) {
    
    this.path = path;
    return this;
  }

   /**
   * Get path
   * @return path
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPath() {
    return path;
  }


  @JsonProperty(JSON_PROPERTY_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPath(String path) {
    this.path = path;
  }


  public GroupRepresentationDto realmRoles(List<String> realmRoles) {
    
    this.realmRoles = realmRoles;
    return this;
  }

  public GroupRepresentationDto addRealmRolesItem(String realmRolesItem) {
    if (this.realmRoles == null) {
      this.realmRoles = new ArrayList<>();
    }
    this.realmRoles.add(realmRolesItem);
    return this;
  }

   /**
   * Get realmRoles
   * @return realmRoles
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_REALM_ROLES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getRealmRoles() {
    return realmRoles;
  }


  @JsonProperty(JSON_PROPERTY_REALM_ROLES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRealmRoles(List<String> realmRoles) {
    this.realmRoles = realmRoles;
  }


  public GroupRepresentationDto subGroups(List<GroupRepresentationDto> subGroups) {
    
    this.subGroups = subGroups;
    return this;
  }

  public GroupRepresentationDto addSubGroupsItem(GroupRepresentationDto subGroupsItem) {
    if (this.subGroups == null) {
      this.subGroups = new ArrayList<>();
    }
    this.subGroups.add(subGroupsItem);
    return this;
  }

   /**
   * Get subGroups
   * @return subGroups
  **/
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_SUB_GROUPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<GroupRepresentationDto> getSubGroups() {
    return subGroups;
  }


  @JsonProperty(JSON_PROPERTY_SUB_GROUPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubGroups(List<GroupRepresentationDto> subGroups) {
    this.subGroups = subGroups;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GroupRepresentationDto groupRepresentation = (GroupRepresentationDto) o;
    return Objects.equals(this.access, groupRepresentation.access) &&
        Objects.equals(this.attributes, groupRepresentation.attributes) &&
        Objects.equals(this.clientRoles, groupRepresentation.clientRoles) &&
        Objects.equals(this.id, groupRepresentation.id) &&
        Objects.equals(this.name, groupRepresentation.name) &&
        Objects.equals(this.path, groupRepresentation.path) &&
        Objects.equals(this.realmRoles, groupRepresentation.realmRoles) &&
        Objects.equals(this.subGroups, groupRepresentation.subGroups);
  }

  @Override
  public int hashCode() {
    return Objects.hash(access, attributes, clientRoles, id, name, path, realmRoles, subGroups);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GroupRepresentationDto {\n");
    sb.append("    access: ").append(toIndentedString(access)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    clientRoles: ").append(toIndentedString(clientRoles)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("    realmRoles: ").append(toIndentedString(realmRoles)).append("\n");
    sb.append("    subGroups: ").append(toIndentedString(subGroups)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

