/*
 * ${product.name.full} Admin REST API
 * This is a REST API reference for the ${product.name.full} Admin REST API.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package dev.mbo.keycloak.admin.api.dto;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import dev.mbo.keycloak.admin.api.dto.AuthenticationFlowRepresentationDto;
import dev.mbo.keycloak.admin.api.dto.AuthenticatorConfigRepresentationDto;
import dev.mbo.keycloak.admin.api.dto.ClientRepresentationDto;
import dev.mbo.keycloak.admin.api.dto.ClientScopeRepresentationDto;
import dev.mbo.keycloak.admin.api.dto.GroupRepresentationDto;
import dev.mbo.keycloak.admin.api.dto.IdentityProviderMapperRepresentationDto;
import dev.mbo.keycloak.admin.api.dto.IdentityProviderRepresentationDto;
import dev.mbo.keycloak.admin.api.dto.JsonNodeDto;
import dev.mbo.keycloak.admin.api.dto.MultivaluedHashMapDto;
import dev.mbo.keycloak.admin.api.dto.ProtocolMapperRepresentationDto;
import dev.mbo.keycloak.admin.api.dto.RequiredActionProviderRepresentationDto;
import dev.mbo.keycloak.admin.api.dto.RoleRepresentationDto;
import dev.mbo.keycloak.admin.api.dto.RolesRepresentationDto;
import dev.mbo.keycloak.admin.api.dto.ScopeMappingRepresentationDto;
import dev.mbo.keycloak.admin.api.dto.UserFederationMapperRepresentationDto;
import dev.mbo.keycloak.admin.api.dto.UserFederationProviderRepresentationDto;
import dev.mbo.keycloak.admin.api.dto.UserRepresentationDto;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;

/**
 * RealmRepresentationDto
 */
@JsonPropertyOrder({
  RealmRepresentationDto.JSON_PROPERTY_ACCESS_CODE_LIFESPAN,
  RealmRepresentationDto.JSON_PROPERTY_ACCESS_CODE_LIFESPAN_LOGIN,
  RealmRepresentationDto.JSON_PROPERTY_ACCESS_CODE_LIFESPAN_USER_ACTION,
  RealmRepresentationDto.JSON_PROPERTY_ACCESS_TOKEN_LIFESPAN,
  RealmRepresentationDto.JSON_PROPERTY_ACCESS_TOKEN_LIFESPAN_FOR_IMPLICIT_FLOW,
  RealmRepresentationDto.JSON_PROPERTY_ACCOUNT_THEME,
  RealmRepresentationDto.JSON_PROPERTY_ACTION_TOKEN_GENERATED_BY_ADMIN_LIFESPAN,
  RealmRepresentationDto.JSON_PROPERTY_ACTION_TOKEN_GENERATED_BY_USER_LIFESPAN,
  RealmRepresentationDto.JSON_PROPERTY_ADMIN_EVENTS_DETAILS_ENABLED,
  RealmRepresentationDto.JSON_PROPERTY_ADMIN_EVENTS_ENABLED,
  RealmRepresentationDto.JSON_PROPERTY_ADMIN_THEME,
  RealmRepresentationDto.JSON_PROPERTY_ATTRIBUTES,
  RealmRepresentationDto.JSON_PROPERTY_AUTHENTICATION_FLOWS,
  RealmRepresentationDto.JSON_PROPERTY_AUTHENTICATOR_CONFIG,
  RealmRepresentationDto.JSON_PROPERTY_BROWSER_FLOW,
  RealmRepresentationDto.JSON_PROPERTY_BROWSER_SECURITY_HEADERS,
  RealmRepresentationDto.JSON_PROPERTY_BRUTE_FORCE_PROTECTED,
  RealmRepresentationDto.JSON_PROPERTY_CLIENT_AUTHENTICATION_FLOW,
  RealmRepresentationDto.JSON_PROPERTY_CLIENT_OFFLINE_SESSION_IDLE_TIMEOUT,
  RealmRepresentationDto.JSON_PROPERTY_CLIENT_OFFLINE_SESSION_MAX_LIFESPAN,
  RealmRepresentationDto.JSON_PROPERTY_CLIENT_POLICIES,
  RealmRepresentationDto.JSON_PROPERTY_CLIENT_PROFILES,
  RealmRepresentationDto.JSON_PROPERTY_CLIENT_SCOPE_MAPPINGS,
  RealmRepresentationDto.JSON_PROPERTY_CLIENT_SCOPES,
  RealmRepresentationDto.JSON_PROPERTY_CLIENT_SESSION_IDLE_TIMEOUT,
  RealmRepresentationDto.JSON_PROPERTY_CLIENT_SESSION_MAX_LIFESPAN,
  RealmRepresentationDto.JSON_PROPERTY_CLIENTS,
  RealmRepresentationDto.JSON_PROPERTY_COMPONENTS,
  RealmRepresentationDto.JSON_PROPERTY_DEFAULT_DEFAULT_CLIENT_SCOPES,
  RealmRepresentationDto.JSON_PROPERTY_DEFAULT_GROUPS,
  RealmRepresentationDto.JSON_PROPERTY_DEFAULT_LOCALE,
  RealmRepresentationDto.JSON_PROPERTY_DEFAULT_OPTIONAL_CLIENT_SCOPES,
  RealmRepresentationDto.JSON_PROPERTY_DEFAULT_ROLE,
  RealmRepresentationDto.JSON_PROPERTY_DEFAULT_SIGNATURE_ALGORITHM,
  RealmRepresentationDto.JSON_PROPERTY_DIRECT_GRANT_FLOW,
  RealmRepresentationDto.JSON_PROPERTY_DISPLAY_NAME,
  RealmRepresentationDto.JSON_PROPERTY_DISPLAY_NAME_HTML,
  RealmRepresentationDto.JSON_PROPERTY_DOCKER_AUTHENTICATION_FLOW,
  RealmRepresentationDto.JSON_PROPERTY_DUPLICATE_EMAILS_ALLOWED,
  RealmRepresentationDto.JSON_PROPERTY_EDIT_USERNAME_ALLOWED,
  RealmRepresentationDto.JSON_PROPERTY_EMAIL_THEME,
  RealmRepresentationDto.JSON_PROPERTY_ENABLED,
  RealmRepresentationDto.JSON_PROPERTY_ENABLED_EVENT_TYPES,
  RealmRepresentationDto.JSON_PROPERTY_EVENTS_ENABLED,
  RealmRepresentationDto.JSON_PROPERTY_EVENTS_EXPIRATION,
  RealmRepresentationDto.JSON_PROPERTY_EVENTS_LISTENERS,
  RealmRepresentationDto.JSON_PROPERTY_FAILURE_FACTOR,
  RealmRepresentationDto.JSON_PROPERTY_FEDERATED_USERS,
  RealmRepresentationDto.JSON_PROPERTY_GROUPS,
  RealmRepresentationDto.JSON_PROPERTY_ID,
  RealmRepresentationDto.JSON_PROPERTY_IDENTITY_PROVIDER_MAPPERS,
  RealmRepresentationDto.JSON_PROPERTY_IDENTITY_PROVIDERS,
  RealmRepresentationDto.JSON_PROPERTY_INTERNATIONALIZATION_ENABLED,
  RealmRepresentationDto.JSON_PROPERTY_KEYCLOAK_VERSION,
  RealmRepresentationDto.JSON_PROPERTY_LOGIN_THEME,
  RealmRepresentationDto.JSON_PROPERTY_LOGIN_WITH_EMAIL_ALLOWED,
  RealmRepresentationDto.JSON_PROPERTY_MAX_DELTA_TIME_SECONDS,
  RealmRepresentationDto.JSON_PROPERTY_MAX_FAILURE_WAIT_SECONDS,
  RealmRepresentationDto.JSON_PROPERTY_MINIMUM_QUICK_LOGIN_WAIT_SECONDS,
  RealmRepresentationDto.JSON_PROPERTY_NOT_BEFORE,
  RealmRepresentationDto.JSON_PROPERTY_O_AUTH2_DEVICE_CODE_LIFESPAN,
  RealmRepresentationDto.JSON_PROPERTY_O_AUTH2_DEVICE_POLLING_INTERVAL,
  RealmRepresentationDto.JSON_PROPERTY_OAUTH2_DEVICE_CODE_LIFESPAN,
  RealmRepresentationDto.JSON_PROPERTY_OAUTH2_DEVICE_POLLING_INTERVAL,
  RealmRepresentationDto.JSON_PROPERTY_OFFLINE_SESSION_IDLE_TIMEOUT,
  RealmRepresentationDto.JSON_PROPERTY_OFFLINE_SESSION_MAX_LIFESPAN,
  RealmRepresentationDto.JSON_PROPERTY_OFFLINE_SESSION_MAX_LIFESPAN_ENABLED,
  RealmRepresentationDto.JSON_PROPERTY_OTP_POLICY_ALGORITHM,
  RealmRepresentationDto.JSON_PROPERTY_OTP_POLICY_CODE_REUSABLE,
  RealmRepresentationDto.JSON_PROPERTY_OTP_POLICY_DIGITS,
  RealmRepresentationDto.JSON_PROPERTY_OTP_POLICY_INITIAL_COUNTER,
  RealmRepresentationDto.JSON_PROPERTY_OTP_POLICY_LOOK_AHEAD_WINDOW,
  RealmRepresentationDto.JSON_PROPERTY_OTP_POLICY_PERIOD,
  RealmRepresentationDto.JSON_PROPERTY_OTP_POLICY_TYPE,
  RealmRepresentationDto.JSON_PROPERTY_OTP_SUPPORTED_APPLICATIONS,
  RealmRepresentationDto.JSON_PROPERTY_PASSWORD_POLICY,
  RealmRepresentationDto.JSON_PROPERTY_PERMANENT_LOCKOUT,
  RealmRepresentationDto.JSON_PROPERTY_PROTOCOL_MAPPERS,
  RealmRepresentationDto.JSON_PROPERTY_QUICK_LOGIN_CHECK_MILLI_SECONDS,
  RealmRepresentationDto.JSON_PROPERTY_REALM,
  RealmRepresentationDto.JSON_PROPERTY_REFRESH_TOKEN_MAX_REUSE,
  RealmRepresentationDto.JSON_PROPERTY_REGISTRATION_ALLOWED,
  RealmRepresentationDto.JSON_PROPERTY_REGISTRATION_EMAIL_AS_USERNAME,
  RealmRepresentationDto.JSON_PROPERTY_REGISTRATION_FLOW,
  RealmRepresentationDto.JSON_PROPERTY_REMEMBER_ME,
  RealmRepresentationDto.JSON_PROPERTY_REQUIRED_ACTIONS,
  RealmRepresentationDto.JSON_PROPERTY_RESET_CREDENTIALS_FLOW,
  RealmRepresentationDto.JSON_PROPERTY_RESET_PASSWORD_ALLOWED,
  RealmRepresentationDto.JSON_PROPERTY_REVOKE_REFRESH_TOKEN,
  RealmRepresentationDto.JSON_PROPERTY_ROLES,
  RealmRepresentationDto.JSON_PROPERTY_SCOPE_MAPPINGS,
  RealmRepresentationDto.JSON_PROPERTY_SMTP_SERVER,
  RealmRepresentationDto.JSON_PROPERTY_SSL_REQUIRED,
  RealmRepresentationDto.JSON_PROPERTY_SSO_SESSION_IDLE_TIMEOUT,
  RealmRepresentationDto.JSON_PROPERTY_SSO_SESSION_IDLE_TIMEOUT_REMEMBER_ME,
  RealmRepresentationDto.JSON_PROPERTY_SSO_SESSION_MAX_LIFESPAN,
  RealmRepresentationDto.JSON_PROPERTY_SSO_SESSION_MAX_LIFESPAN_REMEMBER_ME,
  RealmRepresentationDto.JSON_PROPERTY_SUPPORTED_LOCALES,
  RealmRepresentationDto.JSON_PROPERTY_USER_FEDERATION_MAPPERS,
  RealmRepresentationDto.JSON_PROPERTY_USER_FEDERATION_PROVIDERS,
  RealmRepresentationDto.JSON_PROPERTY_USER_MANAGED_ACCESS_ALLOWED,
  RealmRepresentationDto.JSON_PROPERTY_USERS,
  RealmRepresentationDto.JSON_PROPERTY_VERIFY_EMAIL,
  RealmRepresentationDto.JSON_PROPERTY_WAIT_INCREMENT_SECONDS,
  RealmRepresentationDto.JSON_PROPERTY_WEB_AUTHN_POLICY_ACCEPTABLE_AAGUIDS,
  RealmRepresentationDto.JSON_PROPERTY_WEB_AUTHN_POLICY_ATTESTATION_CONVEYANCE_PREFERENCE,
  RealmRepresentationDto.JSON_PROPERTY_WEB_AUTHN_POLICY_AUTHENTICATOR_ATTACHMENT,
  RealmRepresentationDto.JSON_PROPERTY_WEB_AUTHN_POLICY_AVOID_SAME_AUTHENTICATOR_REGISTER,
  RealmRepresentationDto.JSON_PROPERTY_WEB_AUTHN_POLICY_CREATE_TIMEOUT,
  RealmRepresentationDto.JSON_PROPERTY_WEB_AUTHN_POLICY_PASSWORDLESS_ACCEPTABLE_AAGUIDS,
  RealmRepresentationDto.JSON_PROPERTY_WEB_AUTHN_POLICY_PASSWORDLESS_ATTESTATION_CONVEYANCE_PREFERENCE,
  RealmRepresentationDto.JSON_PROPERTY_WEB_AUTHN_POLICY_PASSWORDLESS_AUTHENTICATOR_ATTACHMENT,
  RealmRepresentationDto.JSON_PROPERTY_WEB_AUTHN_POLICY_PASSWORDLESS_AVOID_SAME_AUTHENTICATOR_REGISTER,
  RealmRepresentationDto.JSON_PROPERTY_WEB_AUTHN_POLICY_PASSWORDLESS_CREATE_TIMEOUT,
  RealmRepresentationDto.JSON_PROPERTY_WEB_AUTHN_POLICY_PASSWORDLESS_REQUIRE_RESIDENT_KEY,
  RealmRepresentationDto.JSON_PROPERTY_WEB_AUTHN_POLICY_PASSWORDLESS_RP_ENTITY_NAME,
  RealmRepresentationDto.JSON_PROPERTY_WEB_AUTHN_POLICY_PASSWORDLESS_RP_ID,
  RealmRepresentationDto.JSON_PROPERTY_WEB_AUTHN_POLICY_PASSWORDLESS_SIGNATURE_ALGORITHMS,
  RealmRepresentationDto.JSON_PROPERTY_WEB_AUTHN_POLICY_PASSWORDLESS_USER_VERIFICATION_REQUIREMENT,
  RealmRepresentationDto.JSON_PROPERTY_WEB_AUTHN_POLICY_REQUIRE_RESIDENT_KEY,
  RealmRepresentationDto.JSON_PROPERTY_WEB_AUTHN_POLICY_RP_ENTITY_NAME,
  RealmRepresentationDto.JSON_PROPERTY_WEB_AUTHN_POLICY_RP_ID,
  RealmRepresentationDto.JSON_PROPERTY_WEB_AUTHN_POLICY_SIGNATURE_ALGORITHMS,
  RealmRepresentationDto.JSON_PROPERTY_WEB_AUTHN_POLICY_USER_VERIFICATION_REQUIREMENT
})
@JsonTypeName("RealmRepresentation")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class RealmRepresentationDto {
  public static final String JSON_PROPERTY_ACCESS_CODE_LIFESPAN = "accessCodeLifespan";
  private Integer accessCodeLifespan;

  public static final String JSON_PROPERTY_ACCESS_CODE_LIFESPAN_LOGIN = "accessCodeLifespanLogin";
  private Integer accessCodeLifespanLogin;

  public static final String JSON_PROPERTY_ACCESS_CODE_LIFESPAN_USER_ACTION = "accessCodeLifespanUserAction";
  private Integer accessCodeLifespanUserAction;

  public static final String JSON_PROPERTY_ACCESS_TOKEN_LIFESPAN = "accessTokenLifespan";
  private Integer accessTokenLifespan;

  public static final String JSON_PROPERTY_ACCESS_TOKEN_LIFESPAN_FOR_IMPLICIT_FLOW = "accessTokenLifespanForImplicitFlow";
  private Integer accessTokenLifespanForImplicitFlow;

  public static final String JSON_PROPERTY_ACCOUNT_THEME = "accountTheme";
  private String accountTheme;

  public static final String JSON_PROPERTY_ACTION_TOKEN_GENERATED_BY_ADMIN_LIFESPAN = "actionTokenGeneratedByAdminLifespan";
  private Integer actionTokenGeneratedByAdminLifespan;

  public static final String JSON_PROPERTY_ACTION_TOKEN_GENERATED_BY_USER_LIFESPAN = "actionTokenGeneratedByUserLifespan";
  private Integer actionTokenGeneratedByUserLifespan;

  public static final String JSON_PROPERTY_ADMIN_EVENTS_DETAILS_ENABLED = "adminEventsDetailsEnabled";
  private Boolean adminEventsDetailsEnabled;

  public static final String JSON_PROPERTY_ADMIN_EVENTS_ENABLED = "adminEventsEnabled";
  private Boolean adminEventsEnabled;

  public static final String JSON_PROPERTY_ADMIN_THEME = "adminTheme";
  private String adminTheme;

  public static final String JSON_PROPERTY_ATTRIBUTES = "attributes";
  private Map<String, Object> attributes = null;

  public static final String JSON_PROPERTY_AUTHENTICATION_FLOWS = "authenticationFlows";
  private List<AuthenticationFlowRepresentationDto> authenticationFlows = null;

  public static final String JSON_PROPERTY_AUTHENTICATOR_CONFIG = "authenticatorConfig";
  private List<AuthenticatorConfigRepresentationDto> authenticatorConfig = null;

  public static final String JSON_PROPERTY_BROWSER_FLOW = "browserFlow";
  private String browserFlow;

  public static final String JSON_PROPERTY_BROWSER_SECURITY_HEADERS = "browserSecurityHeaders";
  private Map<String, Object> browserSecurityHeaders = null;

  public static final String JSON_PROPERTY_BRUTE_FORCE_PROTECTED = "bruteForceProtected";
  private Boolean bruteForceProtected;

  public static final String JSON_PROPERTY_CLIENT_AUTHENTICATION_FLOW = "clientAuthenticationFlow";
  private String clientAuthenticationFlow;

  public static final String JSON_PROPERTY_CLIENT_OFFLINE_SESSION_IDLE_TIMEOUT = "clientOfflineSessionIdleTimeout";
  private Integer clientOfflineSessionIdleTimeout;

  public static final String JSON_PROPERTY_CLIENT_OFFLINE_SESSION_MAX_LIFESPAN = "clientOfflineSessionMaxLifespan";
  private Integer clientOfflineSessionMaxLifespan;

  public static final String JSON_PROPERTY_CLIENT_POLICIES = "clientPolicies";
  private JsonNodeDto clientPolicies;

  public static final String JSON_PROPERTY_CLIENT_PROFILES = "clientProfiles";
  private JsonNodeDto clientProfiles;

  public static final String JSON_PROPERTY_CLIENT_SCOPE_MAPPINGS = "clientScopeMappings";
  private Map<String, Object> clientScopeMappings = null;

  public static final String JSON_PROPERTY_CLIENT_SCOPES = "clientScopes";
  private List<ClientScopeRepresentationDto> clientScopes = null;

  public static final String JSON_PROPERTY_CLIENT_SESSION_IDLE_TIMEOUT = "clientSessionIdleTimeout";
  private Integer clientSessionIdleTimeout;

  public static final String JSON_PROPERTY_CLIENT_SESSION_MAX_LIFESPAN = "clientSessionMaxLifespan";
  private Integer clientSessionMaxLifespan;

  public static final String JSON_PROPERTY_CLIENTS = "clients";
  private List<ClientRepresentationDto> clients = null;

  public static final String JSON_PROPERTY_COMPONENTS = "components";
  private MultivaluedHashMapDto components;

  public static final String JSON_PROPERTY_DEFAULT_DEFAULT_CLIENT_SCOPES = "defaultDefaultClientScopes";
  private List<String> defaultDefaultClientScopes = null;

  public static final String JSON_PROPERTY_DEFAULT_GROUPS = "defaultGroups";
  private List<String> defaultGroups = null;

  public static final String JSON_PROPERTY_DEFAULT_LOCALE = "defaultLocale";
  private String defaultLocale;

  public static final String JSON_PROPERTY_DEFAULT_OPTIONAL_CLIENT_SCOPES = "defaultOptionalClientScopes";
  private List<String> defaultOptionalClientScopes = null;

  public static final String JSON_PROPERTY_DEFAULT_ROLE = "defaultRole";
  private RoleRepresentationDto defaultRole;

  public static final String JSON_PROPERTY_DEFAULT_SIGNATURE_ALGORITHM = "defaultSignatureAlgorithm";
  private String defaultSignatureAlgorithm;

  public static final String JSON_PROPERTY_DIRECT_GRANT_FLOW = "directGrantFlow";
  private String directGrantFlow;

  public static final String JSON_PROPERTY_DISPLAY_NAME = "displayName";
  private String displayName;

  public static final String JSON_PROPERTY_DISPLAY_NAME_HTML = "displayNameHtml";
  private String displayNameHtml;

  public static final String JSON_PROPERTY_DOCKER_AUTHENTICATION_FLOW = "dockerAuthenticationFlow";
  private String dockerAuthenticationFlow;

  public static final String JSON_PROPERTY_DUPLICATE_EMAILS_ALLOWED = "duplicateEmailsAllowed";
  private Boolean duplicateEmailsAllowed;

  public static final String JSON_PROPERTY_EDIT_USERNAME_ALLOWED = "editUsernameAllowed";
  private Boolean editUsernameAllowed;

  public static final String JSON_PROPERTY_EMAIL_THEME = "emailTheme";
  private String emailTheme;

  public static final String JSON_PROPERTY_ENABLED = "enabled";
  private Boolean enabled;

  public static final String JSON_PROPERTY_ENABLED_EVENT_TYPES = "enabledEventTypes";
  private List<String> enabledEventTypes = null;

  public static final String JSON_PROPERTY_EVENTS_ENABLED = "eventsEnabled";
  private Boolean eventsEnabled;

  public static final String JSON_PROPERTY_EVENTS_EXPIRATION = "eventsExpiration";
  private Long eventsExpiration;

  public static final String JSON_PROPERTY_EVENTS_LISTENERS = "eventsListeners";
  private List<String> eventsListeners = null;

  public static final String JSON_PROPERTY_FAILURE_FACTOR = "failureFactor";
  private Integer failureFactor;

  public static final String JSON_PROPERTY_FEDERATED_USERS = "federatedUsers";
  private List<UserRepresentationDto> federatedUsers = null;

  public static final String JSON_PROPERTY_GROUPS = "groups";
  private List<GroupRepresentationDto> groups = null;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_IDENTITY_PROVIDER_MAPPERS = "identityProviderMappers";
  private List<IdentityProviderMapperRepresentationDto> identityProviderMappers = null;

  public static final String JSON_PROPERTY_IDENTITY_PROVIDERS = "identityProviders";
  private List<IdentityProviderRepresentationDto> identityProviders = null;

  public static final String JSON_PROPERTY_INTERNATIONALIZATION_ENABLED = "internationalizationEnabled";
  private Boolean internationalizationEnabled;

  public static final String JSON_PROPERTY_KEYCLOAK_VERSION = "keycloakVersion";
  private String keycloakVersion;

  public static final String JSON_PROPERTY_LOGIN_THEME = "loginTheme";
  private String loginTheme;

  public static final String JSON_PROPERTY_LOGIN_WITH_EMAIL_ALLOWED = "loginWithEmailAllowed";
  private Boolean loginWithEmailAllowed;

  public static final String JSON_PROPERTY_MAX_DELTA_TIME_SECONDS = "maxDeltaTimeSeconds";
  private Integer maxDeltaTimeSeconds;

  public static final String JSON_PROPERTY_MAX_FAILURE_WAIT_SECONDS = "maxFailureWaitSeconds";
  private Integer maxFailureWaitSeconds;

  public static final String JSON_PROPERTY_MINIMUM_QUICK_LOGIN_WAIT_SECONDS = "minimumQuickLoginWaitSeconds";
  private Integer minimumQuickLoginWaitSeconds;

  public static final String JSON_PROPERTY_NOT_BEFORE = "notBefore";
  private Integer notBefore;

  public static final String JSON_PROPERTY_O_AUTH2_DEVICE_CODE_LIFESPAN = "oAuth2DeviceCodeLifespan";
  private Integer oAuth2DeviceCodeLifespan;

  public static final String JSON_PROPERTY_O_AUTH2_DEVICE_POLLING_INTERVAL = "oAuth2DevicePollingInterval";
  private Integer oAuth2DevicePollingInterval;

  public static final String JSON_PROPERTY_OAUTH2_DEVICE_CODE_LIFESPAN = "oauth2DeviceCodeLifespan";
  private Integer oauth2DeviceCodeLifespan;

  public static final String JSON_PROPERTY_OAUTH2_DEVICE_POLLING_INTERVAL = "oauth2DevicePollingInterval";
  private Integer oauth2DevicePollingInterval;

  public static final String JSON_PROPERTY_OFFLINE_SESSION_IDLE_TIMEOUT = "offlineSessionIdleTimeout";
  private Integer offlineSessionIdleTimeout;

  public static final String JSON_PROPERTY_OFFLINE_SESSION_MAX_LIFESPAN = "offlineSessionMaxLifespan";
  private Integer offlineSessionMaxLifespan;

  public static final String JSON_PROPERTY_OFFLINE_SESSION_MAX_LIFESPAN_ENABLED = "offlineSessionMaxLifespanEnabled";
  private Boolean offlineSessionMaxLifespanEnabled;

  public static final String JSON_PROPERTY_OTP_POLICY_ALGORITHM = "otpPolicyAlgorithm";
  private String otpPolicyAlgorithm;

  public static final String JSON_PROPERTY_OTP_POLICY_CODE_REUSABLE = "otpPolicyCodeReusable";
  private Boolean otpPolicyCodeReusable;

  public static final String JSON_PROPERTY_OTP_POLICY_DIGITS = "otpPolicyDigits";
  private Integer otpPolicyDigits;

  public static final String JSON_PROPERTY_OTP_POLICY_INITIAL_COUNTER = "otpPolicyInitialCounter";
  private Integer otpPolicyInitialCounter;

  public static final String JSON_PROPERTY_OTP_POLICY_LOOK_AHEAD_WINDOW = "otpPolicyLookAheadWindow";
  private Integer otpPolicyLookAheadWindow;

  public static final String JSON_PROPERTY_OTP_POLICY_PERIOD = "otpPolicyPeriod";
  private Integer otpPolicyPeriod;

  public static final String JSON_PROPERTY_OTP_POLICY_TYPE = "otpPolicyType";
  private String otpPolicyType;

  public static final String JSON_PROPERTY_OTP_SUPPORTED_APPLICATIONS = "otpSupportedApplications";
  private List<String> otpSupportedApplications = null;

  public static final String JSON_PROPERTY_PASSWORD_POLICY = "passwordPolicy";
  private String passwordPolicy;

  public static final String JSON_PROPERTY_PERMANENT_LOCKOUT = "permanentLockout";
  private Boolean permanentLockout;

  public static final String JSON_PROPERTY_PROTOCOL_MAPPERS = "protocolMappers";
  private List<ProtocolMapperRepresentationDto> protocolMappers = null;

  public static final String JSON_PROPERTY_QUICK_LOGIN_CHECK_MILLI_SECONDS = "quickLoginCheckMilliSeconds";
  private Long quickLoginCheckMilliSeconds;

  public static final String JSON_PROPERTY_REALM = "realm";
  private String realm;

  public static final String JSON_PROPERTY_REFRESH_TOKEN_MAX_REUSE = "refreshTokenMaxReuse";
  private Integer refreshTokenMaxReuse;

  public static final String JSON_PROPERTY_REGISTRATION_ALLOWED = "registrationAllowed";
  private Boolean registrationAllowed;

  public static final String JSON_PROPERTY_REGISTRATION_EMAIL_AS_USERNAME = "registrationEmailAsUsername";
  private Boolean registrationEmailAsUsername;

  public static final String JSON_PROPERTY_REGISTRATION_FLOW = "registrationFlow";
  private String registrationFlow;

  public static final String JSON_PROPERTY_REMEMBER_ME = "rememberMe";
  private Boolean rememberMe;

  public static final String JSON_PROPERTY_REQUIRED_ACTIONS = "requiredActions";
  private List<RequiredActionProviderRepresentationDto> requiredActions = null;

  public static final String JSON_PROPERTY_RESET_CREDENTIALS_FLOW = "resetCredentialsFlow";
  private String resetCredentialsFlow;

  public static final String JSON_PROPERTY_RESET_PASSWORD_ALLOWED = "resetPasswordAllowed";
  private Boolean resetPasswordAllowed;

  public static final String JSON_PROPERTY_REVOKE_REFRESH_TOKEN = "revokeRefreshToken";
  private Boolean revokeRefreshToken;

  public static final String JSON_PROPERTY_ROLES = "roles";
  private RolesRepresentationDto roles;

  public static final String JSON_PROPERTY_SCOPE_MAPPINGS = "scopeMappings";
  private List<ScopeMappingRepresentationDto> scopeMappings = null;

  public static final String JSON_PROPERTY_SMTP_SERVER = "smtpServer";
  private Map<String, Object> smtpServer = null;

  public static final String JSON_PROPERTY_SSL_REQUIRED = "sslRequired";
  private String sslRequired;

  public static final String JSON_PROPERTY_SSO_SESSION_IDLE_TIMEOUT = "ssoSessionIdleTimeout";
  private Integer ssoSessionIdleTimeout;

  public static final String JSON_PROPERTY_SSO_SESSION_IDLE_TIMEOUT_REMEMBER_ME = "ssoSessionIdleTimeoutRememberMe";
  private Integer ssoSessionIdleTimeoutRememberMe;

  public static final String JSON_PROPERTY_SSO_SESSION_MAX_LIFESPAN = "ssoSessionMaxLifespan";
  private Integer ssoSessionMaxLifespan;

  public static final String JSON_PROPERTY_SSO_SESSION_MAX_LIFESPAN_REMEMBER_ME = "ssoSessionMaxLifespanRememberMe";
  private Integer ssoSessionMaxLifespanRememberMe;

  public static final String JSON_PROPERTY_SUPPORTED_LOCALES = "supportedLocales";
  private List<String> supportedLocales = null;

  public static final String JSON_PROPERTY_USER_FEDERATION_MAPPERS = "userFederationMappers";
  private List<UserFederationMapperRepresentationDto> userFederationMappers = null;

  public static final String JSON_PROPERTY_USER_FEDERATION_PROVIDERS = "userFederationProviders";
  private List<UserFederationProviderRepresentationDto> userFederationProviders = null;

  public static final String JSON_PROPERTY_USER_MANAGED_ACCESS_ALLOWED = "userManagedAccessAllowed";
  private Boolean userManagedAccessAllowed;

  public static final String JSON_PROPERTY_USERS = "users";
  private List<UserRepresentationDto> users = null;

  public static final String JSON_PROPERTY_VERIFY_EMAIL = "verifyEmail";
  private Boolean verifyEmail;

  public static final String JSON_PROPERTY_WAIT_INCREMENT_SECONDS = "waitIncrementSeconds";
  private Integer waitIncrementSeconds;

  public static final String JSON_PROPERTY_WEB_AUTHN_POLICY_ACCEPTABLE_AAGUIDS = "webAuthnPolicyAcceptableAaguids";
  private List<String> webAuthnPolicyAcceptableAaguids = null;

  public static final String JSON_PROPERTY_WEB_AUTHN_POLICY_ATTESTATION_CONVEYANCE_PREFERENCE = "webAuthnPolicyAttestationConveyancePreference";
  private String webAuthnPolicyAttestationConveyancePreference;

  public static final String JSON_PROPERTY_WEB_AUTHN_POLICY_AUTHENTICATOR_ATTACHMENT = "webAuthnPolicyAuthenticatorAttachment";
  private String webAuthnPolicyAuthenticatorAttachment;

  public static final String JSON_PROPERTY_WEB_AUTHN_POLICY_AVOID_SAME_AUTHENTICATOR_REGISTER = "webAuthnPolicyAvoidSameAuthenticatorRegister";
  private Boolean webAuthnPolicyAvoidSameAuthenticatorRegister;

  public static final String JSON_PROPERTY_WEB_AUTHN_POLICY_CREATE_TIMEOUT = "webAuthnPolicyCreateTimeout";
  private Integer webAuthnPolicyCreateTimeout;

  public static final String JSON_PROPERTY_WEB_AUTHN_POLICY_PASSWORDLESS_ACCEPTABLE_AAGUIDS = "webAuthnPolicyPasswordlessAcceptableAaguids";
  private List<String> webAuthnPolicyPasswordlessAcceptableAaguids = null;

  public static final String JSON_PROPERTY_WEB_AUTHN_POLICY_PASSWORDLESS_ATTESTATION_CONVEYANCE_PREFERENCE = "webAuthnPolicyPasswordlessAttestationConveyancePreference";
  private String webAuthnPolicyPasswordlessAttestationConveyancePreference;

  public static final String JSON_PROPERTY_WEB_AUTHN_POLICY_PASSWORDLESS_AUTHENTICATOR_ATTACHMENT = "webAuthnPolicyPasswordlessAuthenticatorAttachment";
  private String webAuthnPolicyPasswordlessAuthenticatorAttachment;

  public static final String JSON_PROPERTY_WEB_AUTHN_POLICY_PASSWORDLESS_AVOID_SAME_AUTHENTICATOR_REGISTER = "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister";
  private Boolean webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister;

  public static final String JSON_PROPERTY_WEB_AUTHN_POLICY_PASSWORDLESS_CREATE_TIMEOUT = "webAuthnPolicyPasswordlessCreateTimeout";
  private Integer webAuthnPolicyPasswordlessCreateTimeout;

  public static final String JSON_PROPERTY_WEB_AUTHN_POLICY_PASSWORDLESS_REQUIRE_RESIDENT_KEY = "webAuthnPolicyPasswordlessRequireResidentKey";
  private String webAuthnPolicyPasswordlessRequireResidentKey;

  public static final String JSON_PROPERTY_WEB_AUTHN_POLICY_PASSWORDLESS_RP_ENTITY_NAME = "webAuthnPolicyPasswordlessRpEntityName";
  private String webAuthnPolicyPasswordlessRpEntityName;

  public static final String JSON_PROPERTY_WEB_AUTHN_POLICY_PASSWORDLESS_RP_ID = "webAuthnPolicyPasswordlessRpId";
  private String webAuthnPolicyPasswordlessRpId;

  public static final String JSON_PROPERTY_WEB_AUTHN_POLICY_PASSWORDLESS_SIGNATURE_ALGORITHMS = "webAuthnPolicyPasswordlessSignatureAlgorithms";
  private List<String> webAuthnPolicyPasswordlessSignatureAlgorithms = null;

  public static final String JSON_PROPERTY_WEB_AUTHN_POLICY_PASSWORDLESS_USER_VERIFICATION_REQUIREMENT = "webAuthnPolicyPasswordlessUserVerificationRequirement";
  private String webAuthnPolicyPasswordlessUserVerificationRequirement;

  public static final String JSON_PROPERTY_WEB_AUTHN_POLICY_REQUIRE_RESIDENT_KEY = "webAuthnPolicyRequireResidentKey";
  private String webAuthnPolicyRequireResidentKey;

  public static final String JSON_PROPERTY_WEB_AUTHN_POLICY_RP_ENTITY_NAME = "webAuthnPolicyRpEntityName";
  private String webAuthnPolicyRpEntityName;

  public static final String JSON_PROPERTY_WEB_AUTHN_POLICY_RP_ID = "webAuthnPolicyRpId";
  private String webAuthnPolicyRpId;

  public static final String JSON_PROPERTY_WEB_AUTHN_POLICY_SIGNATURE_ALGORITHMS = "webAuthnPolicySignatureAlgorithms";
  private List<String> webAuthnPolicySignatureAlgorithms = null;

  public static final String JSON_PROPERTY_WEB_AUTHN_POLICY_USER_VERIFICATION_REQUIREMENT = "webAuthnPolicyUserVerificationRequirement";
  private String webAuthnPolicyUserVerificationRequirement;

  public RealmRepresentationDto() {
  }

  public RealmRepresentationDto accessCodeLifespan(Integer accessCodeLifespan) {
    
    this.accessCodeLifespan = accessCodeLifespan;
    return this;
  }

   /**
   * Get accessCodeLifespan
   * @return accessCodeLifespan
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_ACCESS_CODE_LIFESPAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getAccessCodeLifespan() {
    return accessCodeLifespan;
  }


  @JsonProperty(JSON_PROPERTY_ACCESS_CODE_LIFESPAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccessCodeLifespan(Integer accessCodeLifespan) {
    this.accessCodeLifespan = accessCodeLifespan;
  }


  public RealmRepresentationDto accessCodeLifespanLogin(Integer accessCodeLifespanLogin) {
    
    this.accessCodeLifespanLogin = accessCodeLifespanLogin;
    return this;
  }

   /**
   * Get accessCodeLifespanLogin
   * @return accessCodeLifespanLogin
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_ACCESS_CODE_LIFESPAN_LOGIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getAccessCodeLifespanLogin() {
    return accessCodeLifespanLogin;
  }


  @JsonProperty(JSON_PROPERTY_ACCESS_CODE_LIFESPAN_LOGIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccessCodeLifespanLogin(Integer accessCodeLifespanLogin) {
    this.accessCodeLifespanLogin = accessCodeLifespanLogin;
  }


  public RealmRepresentationDto accessCodeLifespanUserAction(Integer accessCodeLifespanUserAction) {
    
    this.accessCodeLifespanUserAction = accessCodeLifespanUserAction;
    return this;
  }

   /**
   * Get accessCodeLifespanUserAction
   * @return accessCodeLifespanUserAction
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_ACCESS_CODE_LIFESPAN_USER_ACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getAccessCodeLifespanUserAction() {
    return accessCodeLifespanUserAction;
  }


  @JsonProperty(JSON_PROPERTY_ACCESS_CODE_LIFESPAN_USER_ACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccessCodeLifespanUserAction(Integer accessCodeLifespanUserAction) {
    this.accessCodeLifespanUserAction = accessCodeLifespanUserAction;
  }


  public RealmRepresentationDto accessTokenLifespan(Integer accessTokenLifespan) {
    
    this.accessTokenLifespan = accessTokenLifespan;
    return this;
  }

   /**
   * Get accessTokenLifespan
   * @return accessTokenLifespan
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_ACCESS_TOKEN_LIFESPAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getAccessTokenLifespan() {
    return accessTokenLifespan;
  }


  @JsonProperty(JSON_PROPERTY_ACCESS_TOKEN_LIFESPAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccessTokenLifespan(Integer accessTokenLifespan) {
    this.accessTokenLifespan = accessTokenLifespan;
  }


  public RealmRepresentationDto accessTokenLifespanForImplicitFlow(Integer accessTokenLifespanForImplicitFlow) {
    
    this.accessTokenLifespanForImplicitFlow = accessTokenLifespanForImplicitFlow;
    return this;
  }

   /**
   * Get accessTokenLifespanForImplicitFlow
   * @return accessTokenLifespanForImplicitFlow
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_ACCESS_TOKEN_LIFESPAN_FOR_IMPLICIT_FLOW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getAccessTokenLifespanForImplicitFlow() {
    return accessTokenLifespanForImplicitFlow;
  }


  @JsonProperty(JSON_PROPERTY_ACCESS_TOKEN_LIFESPAN_FOR_IMPLICIT_FLOW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccessTokenLifespanForImplicitFlow(Integer accessTokenLifespanForImplicitFlow) {
    this.accessTokenLifespanForImplicitFlow = accessTokenLifespanForImplicitFlow;
  }


  public RealmRepresentationDto accountTheme(String accountTheme) {
    
    this.accountTheme = accountTheme;
    return this;
  }

   /**
   * Get accountTheme
   * @return accountTheme
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_ACCOUNT_THEME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAccountTheme() {
    return accountTheme;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNT_THEME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccountTheme(String accountTheme) {
    this.accountTheme = accountTheme;
  }


  public RealmRepresentationDto actionTokenGeneratedByAdminLifespan(Integer actionTokenGeneratedByAdminLifespan) {
    
    this.actionTokenGeneratedByAdminLifespan = actionTokenGeneratedByAdminLifespan;
    return this;
  }

   /**
   * Get actionTokenGeneratedByAdminLifespan
   * @return actionTokenGeneratedByAdminLifespan
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_ACTION_TOKEN_GENERATED_BY_ADMIN_LIFESPAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getActionTokenGeneratedByAdminLifespan() {
    return actionTokenGeneratedByAdminLifespan;
  }


  @JsonProperty(JSON_PROPERTY_ACTION_TOKEN_GENERATED_BY_ADMIN_LIFESPAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setActionTokenGeneratedByAdminLifespan(Integer actionTokenGeneratedByAdminLifespan) {
    this.actionTokenGeneratedByAdminLifespan = actionTokenGeneratedByAdminLifespan;
  }


  public RealmRepresentationDto actionTokenGeneratedByUserLifespan(Integer actionTokenGeneratedByUserLifespan) {
    
    this.actionTokenGeneratedByUserLifespan = actionTokenGeneratedByUserLifespan;
    return this;
  }

   /**
   * Get actionTokenGeneratedByUserLifespan
   * @return actionTokenGeneratedByUserLifespan
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_ACTION_TOKEN_GENERATED_BY_USER_LIFESPAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getActionTokenGeneratedByUserLifespan() {
    return actionTokenGeneratedByUserLifespan;
  }


  @JsonProperty(JSON_PROPERTY_ACTION_TOKEN_GENERATED_BY_USER_LIFESPAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setActionTokenGeneratedByUserLifespan(Integer actionTokenGeneratedByUserLifespan) {
    this.actionTokenGeneratedByUserLifespan = actionTokenGeneratedByUserLifespan;
  }


  public RealmRepresentationDto adminEventsDetailsEnabled(Boolean adminEventsDetailsEnabled) {
    
    this.adminEventsDetailsEnabled = adminEventsDetailsEnabled;
    return this;
  }

   /**
   * Get adminEventsDetailsEnabled
   * @return adminEventsDetailsEnabled
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_ADMIN_EVENTS_DETAILS_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getAdminEventsDetailsEnabled() {
    return adminEventsDetailsEnabled;
  }


  @JsonProperty(JSON_PROPERTY_ADMIN_EVENTS_DETAILS_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAdminEventsDetailsEnabled(Boolean adminEventsDetailsEnabled) {
    this.adminEventsDetailsEnabled = adminEventsDetailsEnabled;
  }


  public RealmRepresentationDto adminEventsEnabled(Boolean adminEventsEnabled) {
    
    this.adminEventsEnabled = adminEventsEnabled;
    return this;
  }

   /**
   * Get adminEventsEnabled
   * @return adminEventsEnabled
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_ADMIN_EVENTS_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getAdminEventsEnabled() {
    return adminEventsEnabled;
  }


  @JsonProperty(JSON_PROPERTY_ADMIN_EVENTS_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAdminEventsEnabled(Boolean adminEventsEnabled) {
    this.adminEventsEnabled = adminEventsEnabled;
  }


  public RealmRepresentationDto adminTheme(String adminTheme) {
    
    this.adminTheme = adminTheme;
    return this;
  }

   /**
   * Get adminTheme
   * @return adminTheme
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_ADMIN_THEME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAdminTheme() {
    return adminTheme;
  }


  @JsonProperty(JSON_PROPERTY_ADMIN_THEME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAdminTheme(String adminTheme) {
    this.adminTheme = adminTheme;
  }


  public RealmRepresentationDto attributes(Map<String, Object> attributes) {
    
    this.attributes = attributes;
    return this;
  }

  public RealmRepresentationDto putAttributesItem(String key, Object attributesItem) {
    if (this.attributes == null) {
      this.attributes = new HashMap<>();
    }
    this.attributes.put(key, attributesItem);
    return this;
  }

   /**
   * Get attributes
   * @return attributes
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_ATTRIBUTES)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, Object> getAttributes() {
    return attributes;
  }


  @JsonProperty(JSON_PROPERTY_ATTRIBUTES)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)
  public void setAttributes(Map<String, Object> attributes) {
    this.attributes = attributes;
  }


  public RealmRepresentationDto authenticationFlows(List<AuthenticationFlowRepresentationDto> authenticationFlows) {
    
    this.authenticationFlows = authenticationFlows;
    return this;
  }

  public RealmRepresentationDto addAuthenticationFlowsItem(AuthenticationFlowRepresentationDto authenticationFlowsItem) {
    if (this.authenticationFlows == null) {
      this.authenticationFlows = new ArrayList<>();
    }
    this.authenticationFlows.add(authenticationFlowsItem);
    return this;
  }

   /**
   * Get authenticationFlows
   * @return authenticationFlows
  **/
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_AUTHENTICATION_FLOWS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<AuthenticationFlowRepresentationDto> getAuthenticationFlows() {
    return authenticationFlows;
  }


  @JsonProperty(JSON_PROPERTY_AUTHENTICATION_FLOWS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAuthenticationFlows(List<AuthenticationFlowRepresentationDto> authenticationFlows) {
    this.authenticationFlows = authenticationFlows;
  }


  public RealmRepresentationDto authenticatorConfig(List<AuthenticatorConfigRepresentationDto> authenticatorConfig) {
    
    this.authenticatorConfig = authenticatorConfig;
    return this;
  }

  public RealmRepresentationDto addAuthenticatorConfigItem(AuthenticatorConfigRepresentationDto authenticatorConfigItem) {
    if (this.authenticatorConfig == null) {
      this.authenticatorConfig = new ArrayList<>();
    }
    this.authenticatorConfig.add(authenticatorConfigItem);
    return this;
  }

   /**
   * Get authenticatorConfig
   * @return authenticatorConfig
  **/
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_AUTHENTICATOR_CONFIG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<AuthenticatorConfigRepresentationDto> getAuthenticatorConfig() {
    return authenticatorConfig;
  }


  @JsonProperty(JSON_PROPERTY_AUTHENTICATOR_CONFIG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAuthenticatorConfig(List<AuthenticatorConfigRepresentationDto> authenticatorConfig) {
    this.authenticatorConfig = authenticatorConfig;
  }


  public RealmRepresentationDto browserFlow(String browserFlow) {
    
    this.browserFlow = browserFlow;
    return this;
  }

   /**
   * Get browserFlow
   * @return browserFlow
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_BROWSER_FLOW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBrowserFlow() {
    return browserFlow;
  }


  @JsonProperty(JSON_PROPERTY_BROWSER_FLOW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBrowserFlow(String browserFlow) {
    this.browserFlow = browserFlow;
  }


  public RealmRepresentationDto browserSecurityHeaders(Map<String, Object> browserSecurityHeaders) {
    
    this.browserSecurityHeaders = browserSecurityHeaders;
    return this;
  }

  public RealmRepresentationDto putBrowserSecurityHeadersItem(String key, Object browserSecurityHeadersItem) {
    if (this.browserSecurityHeaders == null) {
      this.browserSecurityHeaders = new HashMap<>();
    }
    this.browserSecurityHeaders.put(key, browserSecurityHeadersItem);
    return this;
  }

   /**
   * Get browserSecurityHeaders
   * @return browserSecurityHeaders
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_BROWSER_SECURITY_HEADERS)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, Object> getBrowserSecurityHeaders() {
    return browserSecurityHeaders;
  }


  @JsonProperty(JSON_PROPERTY_BROWSER_SECURITY_HEADERS)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)
  public void setBrowserSecurityHeaders(Map<String, Object> browserSecurityHeaders) {
    this.browserSecurityHeaders = browserSecurityHeaders;
  }


  public RealmRepresentationDto bruteForceProtected(Boolean bruteForceProtected) {
    
    this.bruteForceProtected = bruteForceProtected;
    return this;
  }

   /**
   * Get bruteForceProtected
   * @return bruteForceProtected
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_BRUTE_FORCE_PROTECTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getBruteForceProtected() {
    return bruteForceProtected;
  }


  @JsonProperty(JSON_PROPERTY_BRUTE_FORCE_PROTECTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBruteForceProtected(Boolean bruteForceProtected) {
    this.bruteForceProtected = bruteForceProtected;
  }


  public RealmRepresentationDto clientAuthenticationFlow(String clientAuthenticationFlow) {
    
    this.clientAuthenticationFlow = clientAuthenticationFlow;
    return this;
  }

   /**
   * Get clientAuthenticationFlow
   * @return clientAuthenticationFlow
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_CLIENT_AUTHENTICATION_FLOW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getClientAuthenticationFlow() {
    return clientAuthenticationFlow;
  }


  @JsonProperty(JSON_PROPERTY_CLIENT_AUTHENTICATION_FLOW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setClientAuthenticationFlow(String clientAuthenticationFlow) {
    this.clientAuthenticationFlow = clientAuthenticationFlow;
  }


  public RealmRepresentationDto clientOfflineSessionIdleTimeout(Integer clientOfflineSessionIdleTimeout) {
    
    this.clientOfflineSessionIdleTimeout = clientOfflineSessionIdleTimeout;
    return this;
  }

   /**
   * Get clientOfflineSessionIdleTimeout
   * @return clientOfflineSessionIdleTimeout
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_CLIENT_OFFLINE_SESSION_IDLE_TIMEOUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getClientOfflineSessionIdleTimeout() {
    return clientOfflineSessionIdleTimeout;
  }


  @JsonProperty(JSON_PROPERTY_CLIENT_OFFLINE_SESSION_IDLE_TIMEOUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setClientOfflineSessionIdleTimeout(Integer clientOfflineSessionIdleTimeout) {
    this.clientOfflineSessionIdleTimeout = clientOfflineSessionIdleTimeout;
  }


  public RealmRepresentationDto clientOfflineSessionMaxLifespan(Integer clientOfflineSessionMaxLifespan) {
    
    this.clientOfflineSessionMaxLifespan = clientOfflineSessionMaxLifespan;
    return this;
  }

   /**
   * Get clientOfflineSessionMaxLifespan
   * @return clientOfflineSessionMaxLifespan
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_CLIENT_OFFLINE_SESSION_MAX_LIFESPAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getClientOfflineSessionMaxLifespan() {
    return clientOfflineSessionMaxLifespan;
  }


  @JsonProperty(JSON_PROPERTY_CLIENT_OFFLINE_SESSION_MAX_LIFESPAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setClientOfflineSessionMaxLifespan(Integer clientOfflineSessionMaxLifespan) {
    this.clientOfflineSessionMaxLifespan = clientOfflineSessionMaxLifespan;
  }


  public RealmRepresentationDto clientPolicies(JsonNodeDto clientPolicies) {
    
    this.clientPolicies = clientPolicies;
    return this;
  }

   /**
   * Get clientPolicies
   * @return clientPolicies
  **/
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_CLIENT_POLICIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNodeDto getClientPolicies() {
    return clientPolicies;
  }


  @JsonProperty(JSON_PROPERTY_CLIENT_POLICIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setClientPolicies(JsonNodeDto clientPolicies) {
    this.clientPolicies = clientPolicies;
  }


  public RealmRepresentationDto clientProfiles(JsonNodeDto clientProfiles) {
    
    this.clientProfiles = clientProfiles;
    return this;
  }

   /**
   * Get clientProfiles
   * @return clientProfiles
  **/
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_CLIENT_PROFILES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNodeDto getClientProfiles() {
    return clientProfiles;
  }


  @JsonProperty(JSON_PROPERTY_CLIENT_PROFILES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setClientProfiles(JsonNodeDto clientProfiles) {
    this.clientProfiles = clientProfiles;
  }


  public RealmRepresentationDto clientScopeMappings(Map<String, Object> clientScopeMappings) {
    
    this.clientScopeMappings = clientScopeMappings;
    return this;
  }

  public RealmRepresentationDto putClientScopeMappingsItem(String key, Object clientScopeMappingsItem) {
    if (this.clientScopeMappings == null) {
      this.clientScopeMappings = new HashMap<>();
    }
    this.clientScopeMappings.put(key, clientScopeMappingsItem);
    return this;
  }

   /**
   * Get clientScopeMappings
   * @return clientScopeMappings
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_CLIENT_SCOPE_MAPPINGS)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, Object> getClientScopeMappings() {
    return clientScopeMappings;
  }


  @JsonProperty(JSON_PROPERTY_CLIENT_SCOPE_MAPPINGS)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)
  public void setClientScopeMappings(Map<String, Object> clientScopeMappings) {
    this.clientScopeMappings = clientScopeMappings;
  }


  public RealmRepresentationDto clientScopes(List<ClientScopeRepresentationDto> clientScopes) {
    
    this.clientScopes = clientScopes;
    return this;
  }

  public RealmRepresentationDto addClientScopesItem(ClientScopeRepresentationDto clientScopesItem) {
    if (this.clientScopes == null) {
      this.clientScopes = new ArrayList<>();
    }
    this.clientScopes.add(clientScopesItem);
    return this;
  }

   /**
   * Get clientScopes
   * @return clientScopes
  **/
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_CLIENT_SCOPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ClientScopeRepresentationDto> getClientScopes() {
    return clientScopes;
  }


  @JsonProperty(JSON_PROPERTY_CLIENT_SCOPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setClientScopes(List<ClientScopeRepresentationDto> clientScopes) {
    this.clientScopes = clientScopes;
  }


  public RealmRepresentationDto clientSessionIdleTimeout(Integer clientSessionIdleTimeout) {
    
    this.clientSessionIdleTimeout = clientSessionIdleTimeout;
    return this;
  }

   /**
   * Get clientSessionIdleTimeout
   * @return clientSessionIdleTimeout
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_CLIENT_SESSION_IDLE_TIMEOUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getClientSessionIdleTimeout() {
    return clientSessionIdleTimeout;
  }


  @JsonProperty(JSON_PROPERTY_CLIENT_SESSION_IDLE_TIMEOUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setClientSessionIdleTimeout(Integer clientSessionIdleTimeout) {
    this.clientSessionIdleTimeout = clientSessionIdleTimeout;
  }


  public RealmRepresentationDto clientSessionMaxLifespan(Integer clientSessionMaxLifespan) {
    
    this.clientSessionMaxLifespan = clientSessionMaxLifespan;
    return this;
  }

   /**
   * Get clientSessionMaxLifespan
   * @return clientSessionMaxLifespan
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_CLIENT_SESSION_MAX_LIFESPAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getClientSessionMaxLifespan() {
    return clientSessionMaxLifespan;
  }


  @JsonProperty(JSON_PROPERTY_CLIENT_SESSION_MAX_LIFESPAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setClientSessionMaxLifespan(Integer clientSessionMaxLifespan) {
    this.clientSessionMaxLifespan = clientSessionMaxLifespan;
  }


  public RealmRepresentationDto clients(List<ClientRepresentationDto> clients) {
    
    this.clients = clients;
    return this;
  }

  public RealmRepresentationDto addClientsItem(ClientRepresentationDto clientsItem) {
    if (this.clients == null) {
      this.clients = new ArrayList<>();
    }
    this.clients.add(clientsItem);
    return this;
  }

   /**
   * Get clients
   * @return clients
  **/
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_CLIENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ClientRepresentationDto> getClients() {
    return clients;
  }


  @JsonProperty(JSON_PROPERTY_CLIENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setClients(List<ClientRepresentationDto> clients) {
    this.clients = clients;
  }


  public RealmRepresentationDto components(MultivaluedHashMapDto components) {
    
    this.components = components;
    return this;
  }

   /**
   * Get components
   * @return components
  **/
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_COMPONENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public MultivaluedHashMapDto getComponents() {
    return components;
  }


  @JsonProperty(JSON_PROPERTY_COMPONENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setComponents(MultivaluedHashMapDto components) {
    this.components = components;
  }


  public RealmRepresentationDto defaultDefaultClientScopes(List<String> defaultDefaultClientScopes) {
    
    this.defaultDefaultClientScopes = defaultDefaultClientScopes;
    return this;
  }

  public RealmRepresentationDto addDefaultDefaultClientScopesItem(String defaultDefaultClientScopesItem) {
    if (this.defaultDefaultClientScopes == null) {
      this.defaultDefaultClientScopes = new ArrayList<>();
    }
    this.defaultDefaultClientScopes.add(defaultDefaultClientScopesItem);
    return this;
  }

   /**
   * Get defaultDefaultClientScopes
   * @return defaultDefaultClientScopes
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_DEFAULT_DEFAULT_CLIENT_SCOPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getDefaultDefaultClientScopes() {
    return defaultDefaultClientScopes;
  }


  @JsonProperty(JSON_PROPERTY_DEFAULT_DEFAULT_CLIENT_SCOPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDefaultDefaultClientScopes(List<String> defaultDefaultClientScopes) {
    this.defaultDefaultClientScopes = defaultDefaultClientScopes;
  }


  public RealmRepresentationDto defaultGroups(List<String> defaultGroups) {
    
    this.defaultGroups = defaultGroups;
    return this;
  }

  public RealmRepresentationDto addDefaultGroupsItem(String defaultGroupsItem) {
    if (this.defaultGroups == null) {
      this.defaultGroups = new ArrayList<>();
    }
    this.defaultGroups.add(defaultGroupsItem);
    return this;
  }

   /**
   * Get defaultGroups
   * @return defaultGroups
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_DEFAULT_GROUPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getDefaultGroups() {
    return defaultGroups;
  }


  @JsonProperty(JSON_PROPERTY_DEFAULT_GROUPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDefaultGroups(List<String> defaultGroups) {
    this.defaultGroups = defaultGroups;
  }


  public RealmRepresentationDto defaultLocale(String defaultLocale) {
    
    this.defaultLocale = defaultLocale;
    return this;
  }

   /**
   * Get defaultLocale
   * @return defaultLocale
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_DEFAULT_LOCALE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDefaultLocale() {
    return defaultLocale;
  }


  @JsonProperty(JSON_PROPERTY_DEFAULT_LOCALE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDefaultLocale(String defaultLocale) {
    this.defaultLocale = defaultLocale;
  }


  public RealmRepresentationDto defaultOptionalClientScopes(List<String> defaultOptionalClientScopes) {
    
    this.defaultOptionalClientScopes = defaultOptionalClientScopes;
    return this;
  }

  public RealmRepresentationDto addDefaultOptionalClientScopesItem(String defaultOptionalClientScopesItem) {
    if (this.defaultOptionalClientScopes == null) {
      this.defaultOptionalClientScopes = new ArrayList<>();
    }
    this.defaultOptionalClientScopes.add(defaultOptionalClientScopesItem);
    return this;
  }

   /**
   * Get defaultOptionalClientScopes
   * @return defaultOptionalClientScopes
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_DEFAULT_OPTIONAL_CLIENT_SCOPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getDefaultOptionalClientScopes() {
    return defaultOptionalClientScopes;
  }


  @JsonProperty(JSON_PROPERTY_DEFAULT_OPTIONAL_CLIENT_SCOPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDefaultOptionalClientScopes(List<String> defaultOptionalClientScopes) {
    this.defaultOptionalClientScopes = defaultOptionalClientScopes;
  }


  public RealmRepresentationDto defaultRole(RoleRepresentationDto defaultRole) {
    
    this.defaultRole = defaultRole;
    return this;
  }

   /**
   * Get defaultRole
   * @return defaultRole
  **/
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_DEFAULT_ROLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RoleRepresentationDto getDefaultRole() {
    return defaultRole;
  }


  @JsonProperty(JSON_PROPERTY_DEFAULT_ROLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDefaultRole(RoleRepresentationDto defaultRole) {
    this.defaultRole = defaultRole;
  }


  public RealmRepresentationDto defaultSignatureAlgorithm(String defaultSignatureAlgorithm) {
    
    this.defaultSignatureAlgorithm = defaultSignatureAlgorithm;
    return this;
  }

   /**
   * Get defaultSignatureAlgorithm
   * @return defaultSignatureAlgorithm
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_DEFAULT_SIGNATURE_ALGORITHM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDefaultSignatureAlgorithm() {
    return defaultSignatureAlgorithm;
  }


  @JsonProperty(JSON_PROPERTY_DEFAULT_SIGNATURE_ALGORITHM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDefaultSignatureAlgorithm(String defaultSignatureAlgorithm) {
    this.defaultSignatureAlgorithm = defaultSignatureAlgorithm;
  }


  public RealmRepresentationDto directGrantFlow(String directGrantFlow) {
    
    this.directGrantFlow = directGrantFlow;
    return this;
  }

   /**
   * Get directGrantFlow
   * @return directGrantFlow
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_DIRECT_GRANT_FLOW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDirectGrantFlow() {
    return directGrantFlow;
  }


  @JsonProperty(JSON_PROPERTY_DIRECT_GRANT_FLOW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDirectGrantFlow(String directGrantFlow) {
    this.directGrantFlow = directGrantFlow;
  }


  public RealmRepresentationDto displayName(String displayName) {
    
    this.displayName = displayName;
    return this;
  }

   /**
   * Get displayName
   * @return displayName
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDisplayName() {
    return displayName;
  }


  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public RealmRepresentationDto displayNameHtml(String displayNameHtml) {
    
    this.displayNameHtml = displayNameHtml;
    return this;
  }

   /**
   * Get displayNameHtml
   * @return displayNameHtml
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME_HTML)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDisplayNameHtml() {
    return displayNameHtml;
  }


  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME_HTML)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDisplayNameHtml(String displayNameHtml) {
    this.displayNameHtml = displayNameHtml;
  }


  public RealmRepresentationDto dockerAuthenticationFlow(String dockerAuthenticationFlow) {
    
    this.dockerAuthenticationFlow = dockerAuthenticationFlow;
    return this;
  }

   /**
   * Get dockerAuthenticationFlow
   * @return dockerAuthenticationFlow
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_DOCKER_AUTHENTICATION_FLOW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDockerAuthenticationFlow() {
    return dockerAuthenticationFlow;
  }


  @JsonProperty(JSON_PROPERTY_DOCKER_AUTHENTICATION_FLOW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDockerAuthenticationFlow(String dockerAuthenticationFlow) {
    this.dockerAuthenticationFlow = dockerAuthenticationFlow;
  }


  public RealmRepresentationDto duplicateEmailsAllowed(Boolean duplicateEmailsAllowed) {
    
    this.duplicateEmailsAllowed = duplicateEmailsAllowed;
    return this;
  }

   /**
   * Get duplicateEmailsAllowed
   * @return duplicateEmailsAllowed
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_DUPLICATE_EMAILS_ALLOWED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDuplicateEmailsAllowed() {
    return duplicateEmailsAllowed;
  }


  @JsonProperty(JSON_PROPERTY_DUPLICATE_EMAILS_ALLOWED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDuplicateEmailsAllowed(Boolean duplicateEmailsAllowed) {
    this.duplicateEmailsAllowed = duplicateEmailsAllowed;
  }


  public RealmRepresentationDto editUsernameAllowed(Boolean editUsernameAllowed) {
    
    this.editUsernameAllowed = editUsernameAllowed;
    return this;
  }

   /**
   * Get editUsernameAllowed
   * @return editUsernameAllowed
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_EDIT_USERNAME_ALLOWED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getEditUsernameAllowed() {
    return editUsernameAllowed;
  }


  @JsonProperty(JSON_PROPERTY_EDIT_USERNAME_ALLOWED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEditUsernameAllowed(Boolean editUsernameAllowed) {
    this.editUsernameAllowed = editUsernameAllowed;
  }


  public RealmRepresentationDto emailTheme(String emailTheme) {
    
    this.emailTheme = emailTheme;
    return this;
  }

   /**
   * Get emailTheme
   * @return emailTheme
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_EMAIL_THEME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEmailTheme() {
    return emailTheme;
  }


  @JsonProperty(JSON_PROPERTY_EMAIL_THEME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEmailTheme(String emailTheme) {
    this.emailTheme = emailTheme;
  }


  public RealmRepresentationDto enabled(Boolean enabled) {
    
    this.enabled = enabled;
    return this;
  }

   /**
   * Get enabled
   * @return enabled
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getEnabled() {
    return enabled;
  }


  @JsonProperty(JSON_PROPERTY_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  public RealmRepresentationDto enabledEventTypes(List<String> enabledEventTypes) {
    
    this.enabledEventTypes = enabledEventTypes;
    return this;
  }

  public RealmRepresentationDto addEnabledEventTypesItem(String enabledEventTypesItem) {
    if (this.enabledEventTypes == null) {
      this.enabledEventTypes = new ArrayList<>();
    }
    this.enabledEventTypes.add(enabledEventTypesItem);
    return this;
  }

   /**
   * Get enabledEventTypes
   * @return enabledEventTypes
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_ENABLED_EVENT_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getEnabledEventTypes() {
    return enabledEventTypes;
  }


  @JsonProperty(JSON_PROPERTY_ENABLED_EVENT_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnabledEventTypes(List<String> enabledEventTypes) {
    this.enabledEventTypes = enabledEventTypes;
  }


  public RealmRepresentationDto eventsEnabled(Boolean eventsEnabled) {
    
    this.eventsEnabled = eventsEnabled;
    return this;
  }

   /**
   * Get eventsEnabled
   * @return eventsEnabled
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_EVENTS_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getEventsEnabled() {
    return eventsEnabled;
  }


  @JsonProperty(JSON_PROPERTY_EVENTS_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEventsEnabled(Boolean eventsEnabled) {
    this.eventsEnabled = eventsEnabled;
  }


  public RealmRepresentationDto eventsExpiration(Long eventsExpiration) {
    
    this.eventsExpiration = eventsExpiration;
    return this;
  }

   /**
   * Get eventsExpiration
   * @return eventsExpiration
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_EVENTS_EXPIRATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getEventsExpiration() {
    return eventsExpiration;
  }


  @JsonProperty(JSON_PROPERTY_EVENTS_EXPIRATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEventsExpiration(Long eventsExpiration) {
    this.eventsExpiration = eventsExpiration;
  }


  public RealmRepresentationDto eventsListeners(List<String> eventsListeners) {
    
    this.eventsListeners = eventsListeners;
    return this;
  }

  public RealmRepresentationDto addEventsListenersItem(String eventsListenersItem) {
    if (this.eventsListeners == null) {
      this.eventsListeners = new ArrayList<>();
    }
    this.eventsListeners.add(eventsListenersItem);
    return this;
  }

   /**
   * Get eventsListeners
   * @return eventsListeners
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_EVENTS_LISTENERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getEventsListeners() {
    return eventsListeners;
  }


  @JsonProperty(JSON_PROPERTY_EVENTS_LISTENERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEventsListeners(List<String> eventsListeners) {
    this.eventsListeners = eventsListeners;
  }


  public RealmRepresentationDto failureFactor(Integer failureFactor) {
    
    this.failureFactor = failureFactor;
    return this;
  }

   /**
   * Get failureFactor
   * @return failureFactor
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_FAILURE_FACTOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getFailureFactor() {
    return failureFactor;
  }


  @JsonProperty(JSON_PROPERTY_FAILURE_FACTOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFailureFactor(Integer failureFactor) {
    this.failureFactor = failureFactor;
  }


  public RealmRepresentationDto federatedUsers(List<UserRepresentationDto> federatedUsers) {
    
    this.federatedUsers = federatedUsers;
    return this;
  }

  public RealmRepresentationDto addFederatedUsersItem(UserRepresentationDto federatedUsersItem) {
    if (this.federatedUsers == null) {
      this.federatedUsers = new ArrayList<>();
    }
    this.federatedUsers.add(federatedUsersItem);
    return this;
  }

   /**
   * Get federatedUsers
   * @return federatedUsers
  **/
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_FEDERATED_USERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UserRepresentationDto> getFederatedUsers() {
    return federatedUsers;
  }


  @JsonProperty(JSON_PROPERTY_FEDERATED_USERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFederatedUsers(List<UserRepresentationDto> federatedUsers) {
    this.federatedUsers = federatedUsers;
  }


  public RealmRepresentationDto groups(List<GroupRepresentationDto> groups) {
    
    this.groups = groups;
    return this;
  }

  public RealmRepresentationDto addGroupsItem(GroupRepresentationDto groupsItem) {
    if (this.groups == null) {
      this.groups = new ArrayList<>();
    }
    this.groups.add(groupsItem);
    return this;
  }

   /**
   * Get groups
   * @return groups
  **/
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_GROUPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<GroupRepresentationDto> getGroups() {
    return groups;
  }


  @JsonProperty(JSON_PROPERTY_GROUPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGroups(List<GroupRepresentationDto> groups) {
    this.groups = groups;
  }


  public RealmRepresentationDto id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public RealmRepresentationDto identityProviderMappers(List<IdentityProviderMapperRepresentationDto> identityProviderMappers) {
    
    this.identityProviderMappers = identityProviderMappers;
    return this;
  }

  public RealmRepresentationDto addIdentityProviderMappersItem(IdentityProviderMapperRepresentationDto identityProviderMappersItem) {
    if (this.identityProviderMappers == null) {
      this.identityProviderMappers = new ArrayList<>();
    }
    this.identityProviderMappers.add(identityProviderMappersItem);
    return this;
  }

   /**
   * Get identityProviderMappers
   * @return identityProviderMappers
  **/
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_IDENTITY_PROVIDER_MAPPERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<IdentityProviderMapperRepresentationDto> getIdentityProviderMappers() {
    return identityProviderMappers;
  }


  @JsonProperty(JSON_PROPERTY_IDENTITY_PROVIDER_MAPPERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIdentityProviderMappers(List<IdentityProviderMapperRepresentationDto> identityProviderMappers) {
    this.identityProviderMappers = identityProviderMappers;
  }


  public RealmRepresentationDto identityProviders(List<IdentityProviderRepresentationDto> identityProviders) {
    
    this.identityProviders = identityProviders;
    return this;
  }

  public RealmRepresentationDto addIdentityProvidersItem(IdentityProviderRepresentationDto identityProvidersItem) {
    if (this.identityProviders == null) {
      this.identityProviders = new ArrayList<>();
    }
    this.identityProviders.add(identityProvidersItem);
    return this;
  }

   /**
   * Get identityProviders
   * @return identityProviders
  **/
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_IDENTITY_PROVIDERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<IdentityProviderRepresentationDto> getIdentityProviders() {
    return identityProviders;
  }


  @JsonProperty(JSON_PROPERTY_IDENTITY_PROVIDERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIdentityProviders(List<IdentityProviderRepresentationDto> identityProviders) {
    this.identityProviders = identityProviders;
  }


  public RealmRepresentationDto internationalizationEnabled(Boolean internationalizationEnabled) {
    
    this.internationalizationEnabled = internationalizationEnabled;
    return this;
  }

   /**
   * Get internationalizationEnabled
   * @return internationalizationEnabled
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_INTERNATIONALIZATION_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getInternationalizationEnabled() {
    return internationalizationEnabled;
  }


  @JsonProperty(JSON_PROPERTY_INTERNATIONALIZATION_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInternationalizationEnabled(Boolean internationalizationEnabled) {
    this.internationalizationEnabled = internationalizationEnabled;
  }


  public RealmRepresentationDto keycloakVersion(String keycloakVersion) {
    
    this.keycloakVersion = keycloakVersion;
    return this;
  }

   /**
   * Get keycloakVersion
   * @return keycloakVersion
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_KEYCLOAK_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getKeycloakVersion() {
    return keycloakVersion;
  }


  @JsonProperty(JSON_PROPERTY_KEYCLOAK_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setKeycloakVersion(String keycloakVersion) {
    this.keycloakVersion = keycloakVersion;
  }


  public RealmRepresentationDto loginTheme(String loginTheme) {
    
    this.loginTheme = loginTheme;
    return this;
  }

   /**
   * Get loginTheme
   * @return loginTheme
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_LOGIN_THEME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLoginTheme() {
    return loginTheme;
  }


  @JsonProperty(JSON_PROPERTY_LOGIN_THEME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLoginTheme(String loginTheme) {
    this.loginTheme = loginTheme;
  }


  public RealmRepresentationDto loginWithEmailAllowed(Boolean loginWithEmailAllowed) {
    
    this.loginWithEmailAllowed = loginWithEmailAllowed;
    return this;
  }

   /**
   * Get loginWithEmailAllowed
   * @return loginWithEmailAllowed
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_LOGIN_WITH_EMAIL_ALLOWED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getLoginWithEmailAllowed() {
    return loginWithEmailAllowed;
  }


  @JsonProperty(JSON_PROPERTY_LOGIN_WITH_EMAIL_ALLOWED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLoginWithEmailAllowed(Boolean loginWithEmailAllowed) {
    this.loginWithEmailAllowed = loginWithEmailAllowed;
  }


  public RealmRepresentationDto maxDeltaTimeSeconds(Integer maxDeltaTimeSeconds) {
    
    this.maxDeltaTimeSeconds = maxDeltaTimeSeconds;
    return this;
  }

   /**
   * Get maxDeltaTimeSeconds
   * @return maxDeltaTimeSeconds
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_MAX_DELTA_TIME_SECONDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getMaxDeltaTimeSeconds() {
    return maxDeltaTimeSeconds;
  }


  @JsonProperty(JSON_PROPERTY_MAX_DELTA_TIME_SECONDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMaxDeltaTimeSeconds(Integer maxDeltaTimeSeconds) {
    this.maxDeltaTimeSeconds = maxDeltaTimeSeconds;
  }


  public RealmRepresentationDto maxFailureWaitSeconds(Integer maxFailureWaitSeconds) {
    
    this.maxFailureWaitSeconds = maxFailureWaitSeconds;
    return this;
  }

   /**
   * Get maxFailureWaitSeconds
   * @return maxFailureWaitSeconds
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_MAX_FAILURE_WAIT_SECONDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getMaxFailureWaitSeconds() {
    return maxFailureWaitSeconds;
  }


  @JsonProperty(JSON_PROPERTY_MAX_FAILURE_WAIT_SECONDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMaxFailureWaitSeconds(Integer maxFailureWaitSeconds) {
    this.maxFailureWaitSeconds = maxFailureWaitSeconds;
  }


  public RealmRepresentationDto minimumQuickLoginWaitSeconds(Integer minimumQuickLoginWaitSeconds) {
    
    this.minimumQuickLoginWaitSeconds = minimumQuickLoginWaitSeconds;
    return this;
  }

   /**
   * Get minimumQuickLoginWaitSeconds
   * @return minimumQuickLoginWaitSeconds
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_MINIMUM_QUICK_LOGIN_WAIT_SECONDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getMinimumQuickLoginWaitSeconds() {
    return minimumQuickLoginWaitSeconds;
  }


  @JsonProperty(JSON_PROPERTY_MINIMUM_QUICK_LOGIN_WAIT_SECONDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMinimumQuickLoginWaitSeconds(Integer minimumQuickLoginWaitSeconds) {
    this.minimumQuickLoginWaitSeconds = minimumQuickLoginWaitSeconds;
  }


  public RealmRepresentationDto notBefore(Integer notBefore) {
    
    this.notBefore = notBefore;
    return this;
  }

   /**
   * Get notBefore
   * @return notBefore
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_NOT_BEFORE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getNotBefore() {
    return notBefore;
  }


  @JsonProperty(JSON_PROPERTY_NOT_BEFORE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNotBefore(Integer notBefore) {
    this.notBefore = notBefore;
  }


  public RealmRepresentationDto oAuth2DeviceCodeLifespan(Integer oAuth2DeviceCodeLifespan) {
    
    this.oAuth2DeviceCodeLifespan = oAuth2DeviceCodeLifespan;
    return this;
  }

   /**
   * Get oAuth2DeviceCodeLifespan
   * @return oAuth2DeviceCodeLifespan
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_O_AUTH2_DEVICE_CODE_LIFESPAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getoAuth2DeviceCodeLifespan() {
    return oAuth2DeviceCodeLifespan;
  }


  @JsonProperty(JSON_PROPERTY_O_AUTH2_DEVICE_CODE_LIFESPAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setoAuth2DeviceCodeLifespan(Integer oAuth2DeviceCodeLifespan) {
    this.oAuth2DeviceCodeLifespan = oAuth2DeviceCodeLifespan;
  }


  public RealmRepresentationDto oAuth2DevicePollingInterval(Integer oAuth2DevicePollingInterval) {
    
    this.oAuth2DevicePollingInterval = oAuth2DevicePollingInterval;
    return this;
  }

   /**
   * Get oAuth2DevicePollingInterval
   * @return oAuth2DevicePollingInterval
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_O_AUTH2_DEVICE_POLLING_INTERVAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getoAuth2DevicePollingInterval() {
    return oAuth2DevicePollingInterval;
  }


  @JsonProperty(JSON_PROPERTY_O_AUTH2_DEVICE_POLLING_INTERVAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setoAuth2DevicePollingInterval(Integer oAuth2DevicePollingInterval) {
    this.oAuth2DevicePollingInterval = oAuth2DevicePollingInterval;
  }


  public RealmRepresentationDto oauth2DeviceCodeLifespan(Integer oauth2DeviceCodeLifespan) {
    
    this.oauth2DeviceCodeLifespan = oauth2DeviceCodeLifespan;
    return this;
  }

   /**
   * Get oauth2DeviceCodeLifespan
   * @return oauth2DeviceCodeLifespan
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_OAUTH2_DEVICE_CODE_LIFESPAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getOauth2DeviceCodeLifespan() {
    return oauth2DeviceCodeLifespan;
  }


  @JsonProperty(JSON_PROPERTY_OAUTH2_DEVICE_CODE_LIFESPAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOauth2DeviceCodeLifespan(Integer oauth2DeviceCodeLifespan) {
    this.oauth2DeviceCodeLifespan = oauth2DeviceCodeLifespan;
  }


  public RealmRepresentationDto oauth2DevicePollingInterval(Integer oauth2DevicePollingInterval) {
    
    this.oauth2DevicePollingInterval = oauth2DevicePollingInterval;
    return this;
  }

   /**
   * Get oauth2DevicePollingInterval
   * @return oauth2DevicePollingInterval
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_OAUTH2_DEVICE_POLLING_INTERVAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getOauth2DevicePollingInterval() {
    return oauth2DevicePollingInterval;
  }


  @JsonProperty(JSON_PROPERTY_OAUTH2_DEVICE_POLLING_INTERVAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOauth2DevicePollingInterval(Integer oauth2DevicePollingInterval) {
    this.oauth2DevicePollingInterval = oauth2DevicePollingInterval;
  }


  public RealmRepresentationDto offlineSessionIdleTimeout(Integer offlineSessionIdleTimeout) {
    
    this.offlineSessionIdleTimeout = offlineSessionIdleTimeout;
    return this;
  }

   /**
   * Get offlineSessionIdleTimeout
   * @return offlineSessionIdleTimeout
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_OFFLINE_SESSION_IDLE_TIMEOUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getOfflineSessionIdleTimeout() {
    return offlineSessionIdleTimeout;
  }


  @JsonProperty(JSON_PROPERTY_OFFLINE_SESSION_IDLE_TIMEOUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOfflineSessionIdleTimeout(Integer offlineSessionIdleTimeout) {
    this.offlineSessionIdleTimeout = offlineSessionIdleTimeout;
  }


  public RealmRepresentationDto offlineSessionMaxLifespan(Integer offlineSessionMaxLifespan) {
    
    this.offlineSessionMaxLifespan = offlineSessionMaxLifespan;
    return this;
  }

   /**
   * Get offlineSessionMaxLifespan
   * @return offlineSessionMaxLifespan
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_OFFLINE_SESSION_MAX_LIFESPAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getOfflineSessionMaxLifespan() {
    return offlineSessionMaxLifespan;
  }


  @JsonProperty(JSON_PROPERTY_OFFLINE_SESSION_MAX_LIFESPAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOfflineSessionMaxLifespan(Integer offlineSessionMaxLifespan) {
    this.offlineSessionMaxLifespan = offlineSessionMaxLifespan;
  }


  public RealmRepresentationDto offlineSessionMaxLifespanEnabled(Boolean offlineSessionMaxLifespanEnabled) {
    
    this.offlineSessionMaxLifespanEnabled = offlineSessionMaxLifespanEnabled;
    return this;
  }

   /**
   * Get offlineSessionMaxLifespanEnabled
   * @return offlineSessionMaxLifespanEnabled
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_OFFLINE_SESSION_MAX_LIFESPAN_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getOfflineSessionMaxLifespanEnabled() {
    return offlineSessionMaxLifespanEnabled;
  }


  @JsonProperty(JSON_PROPERTY_OFFLINE_SESSION_MAX_LIFESPAN_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOfflineSessionMaxLifespanEnabled(Boolean offlineSessionMaxLifespanEnabled) {
    this.offlineSessionMaxLifespanEnabled = offlineSessionMaxLifespanEnabled;
  }


  public RealmRepresentationDto otpPolicyAlgorithm(String otpPolicyAlgorithm) {
    
    this.otpPolicyAlgorithm = otpPolicyAlgorithm;
    return this;
  }

   /**
   * Get otpPolicyAlgorithm
   * @return otpPolicyAlgorithm
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_OTP_POLICY_ALGORITHM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOtpPolicyAlgorithm() {
    return otpPolicyAlgorithm;
  }


  @JsonProperty(JSON_PROPERTY_OTP_POLICY_ALGORITHM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOtpPolicyAlgorithm(String otpPolicyAlgorithm) {
    this.otpPolicyAlgorithm = otpPolicyAlgorithm;
  }


  public RealmRepresentationDto otpPolicyCodeReusable(Boolean otpPolicyCodeReusable) {
    
    this.otpPolicyCodeReusable = otpPolicyCodeReusable;
    return this;
  }

   /**
   * Get otpPolicyCodeReusable
   * @return otpPolicyCodeReusable
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_OTP_POLICY_CODE_REUSABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getOtpPolicyCodeReusable() {
    return otpPolicyCodeReusable;
  }


  @JsonProperty(JSON_PROPERTY_OTP_POLICY_CODE_REUSABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOtpPolicyCodeReusable(Boolean otpPolicyCodeReusable) {
    this.otpPolicyCodeReusable = otpPolicyCodeReusable;
  }


  public RealmRepresentationDto otpPolicyDigits(Integer otpPolicyDigits) {
    
    this.otpPolicyDigits = otpPolicyDigits;
    return this;
  }

   /**
   * Get otpPolicyDigits
   * @return otpPolicyDigits
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_OTP_POLICY_DIGITS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getOtpPolicyDigits() {
    return otpPolicyDigits;
  }


  @JsonProperty(JSON_PROPERTY_OTP_POLICY_DIGITS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOtpPolicyDigits(Integer otpPolicyDigits) {
    this.otpPolicyDigits = otpPolicyDigits;
  }


  public RealmRepresentationDto otpPolicyInitialCounter(Integer otpPolicyInitialCounter) {
    
    this.otpPolicyInitialCounter = otpPolicyInitialCounter;
    return this;
  }

   /**
   * Get otpPolicyInitialCounter
   * @return otpPolicyInitialCounter
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_OTP_POLICY_INITIAL_COUNTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getOtpPolicyInitialCounter() {
    return otpPolicyInitialCounter;
  }


  @JsonProperty(JSON_PROPERTY_OTP_POLICY_INITIAL_COUNTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOtpPolicyInitialCounter(Integer otpPolicyInitialCounter) {
    this.otpPolicyInitialCounter = otpPolicyInitialCounter;
  }


  public RealmRepresentationDto otpPolicyLookAheadWindow(Integer otpPolicyLookAheadWindow) {
    
    this.otpPolicyLookAheadWindow = otpPolicyLookAheadWindow;
    return this;
  }

   /**
   * Get otpPolicyLookAheadWindow
   * @return otpPolicyLookAheadWindow
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_OTP_POLICY_LOOK_AHEAD_WINDOW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getOtpPolicyLookAheadWindow() {
    return otpPolicyLookAheadWindow;
  }


  @JsonProperty(JSON_PROPERTY_OTP_POLICY_LOOK_AHEAD_WINDOW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOtpPolicyLookAheadWindow(Integer otpPolicyLookAheadWindow) {
    this.otpPolicyLookAheadWindow = otpPolicyLookAheadWindow;
  }


  public RealmRepresentationDto otpPolicyPeriod(Integer otpPolicyPeriod) {
    
    this.otpPolicyPeriod = otpPolicyPeriod;
    return this;
  }

   /**
   * Get otpPolicyPeriod
   * @return otpPolicyPeriod
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_OTP_POLICY_PERIOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getOtpPolicyPeriod() {
    return otpPolicyPeriod;
  }


  @JsonProperty(JSON_PROPERTY_OTP_POLICY_PERIOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOtpPolicyPeriod(Integer otpPolicyPeriod) {
    this.otpPolicyPeriod = otpPolicyPeriod;
  }


  public RealmRepresentationDto otpPolicyType(String otpPolicyType) {
    
    this.otpPolicyType = otpPolicyType;
    return this;
  }

   /**
   * Get otpPolicyType
   * @return otpPolicyType
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_OTP_POLICY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOtpPolicyType() {
    return otpPolicyType;
  }


  @JsonProperty(JSON_PROPERTY_OTP_POLICY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOtpPolicyType(String otpPolicyType) {
    this.otpPolicyType = otpPolicyType;
  }


  public RealmRepresentationDto otpSupportedApplications(List<String> otpSupportedApplications) {
    
    this.otpSupportedApplications = otpSupportedApplications;
    return this;
  }

  public RealmRepresentationDto addOtpSupportedApplicationsItem(String otpSupportedApplicationsItem) {
    if (this.otpSupportedApplications == null) {
      this.otpSupportedApplications = new ArrayList<>();
    }
    this.otpSupportedApplications.add(otpSupportedApplicationsItem);
    return this;
  }

   /**
   * Get otpSupportedApplications
   * @return otpSupportedApplications
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_OTP_SUPPORTED_APPLICATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getOtpSupportedApplications() {
    return otpSupportedApplications;
  }


  @JsonProperty(JSON_PROPERTY_OTP_SUPPORTED_APPLICATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOtpSupportedApplications(List<String> otpSupportedApplications) {
    this.otpSupportedApplications = otpSupportedApplications;
  }


  public RealmRepresentationDto passwordPolicy(String passwordPolicy) {
    
    this.passwordPolicy = passwordPolicy;
    return this;
  }

   /**
   * Get passwordPolicy
   * @return passwordPolicy
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_PASSWORD_POLICY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPasswordPolicy() {
    return passwordPolicy;
  }


  @JsonProperty(JSON_PROPERTY_PASSWORD_POLICY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPasswordPolicy(String passwordPolicy) {
    this.passwordPolicy = passwordPolicy;
  }


  public RealmRepresentationDto permanentLockout(Boolean permanentLockout) {
    
    this.permanentLockout = permanentLockout;
    return this;
  }

   /**
   * Get permanentLockout
   * @return permanentLockout
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_PERMANENT_LOCKOUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getPermanentLockout() {
    return permanentLockout;
  }


  @JsonProperty(JSON_PROPERTY_PERMANENT_LOCKOUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPermanentLockout(Boolean permanentLockout) {
    this.permanentLockout = permanentLockout;
  }


  public RealmRepresentationDto protocolMappers(List<ProtocolMapperRepresentationDto> protocolMappers) {
    
    this.protocolMappers = protocolMappers;
    return this;
  }

  public RealmRepresentationDto addProtocolMappersItem(ProtocolMapperRepresentationDto protocolMappersItem) {
    if (this.protocolMappers == null) {
      this.protocolMappers = new ArrayList<>();
    }
    this.protocolMappers.add(protocolMappersItem);
    return this;
  }

   /**
   * Get protocolMappers
   * @return protocolMappers
  **/
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_PROTOCOL_MAPPERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ProtocolMapperRepresentationDto> getProtocolMappers() {
    return protocolMappers;
  }


  @JsonProperty(JSON_PROPERTY_PROTOCOL_MAPPERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProtocolMappers(List<ProtocolMapperRepresentationDto> protocolMappers) {
    this.protocolMappers = protocolMappers;
  }


  public RealmRepresentationDto quickLoginCheckMilliSeconds(Long quickLoginCheckMilliSeconds) {
    
    this.quickLoginCheckMilliSeconds = quickLoginCheckMilliSeconds;
    return this;
  }

   /**
   * Get quickLoginCheckMilliSeconds
   * @return quickLoginCheckMilliSeconds
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_QUICK_LOGIN_CHECK_MILLI_SECONDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getQuickLoginCheckMilliSeconds() {
    return quickLoginCheckMilliSeconds;
  }


  @JsonProperty(JSON_PROPERTY_QUICK_LOGIN_CHECK_MILLI_SECONDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setQuickLoginCheckMilliSeconds(Long quickLoginCheckMilliSeconds) {
    this.quickLoginCheckMilliSeconds = quickLoginCheckMilliSeconds;
  }


  public RealmRepresentationDto realm(String realm) {
    
    this.realm = realm;
    return this;
  }

   /**
   * Get realm
   * @return realm
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_REALM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRealm() {
    return realm;
  }


  @JsonProperty(JSON_PROPERTY_REALM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRealm(String realm) {
    this.realm = realm;
  }


  public RealmRepresentationDto refreshTokenMaxReuse(Integer refreshTokenMaxReuse) {
    
    this.refreshTokenMaxReuse = refreshTokenMaxReuse;
    return this;
  }

   /**
   * Get refreshTokenMaxReuse
   * @return refreshTokenMaxReuse
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_REFRESH_TOKEN_MAX_REUSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getRefreshTokenMaxReuse() {
    return refreshTokenMaxReuse;
  }


  @JsonProperty(JSON_PROPERTY_REFRESH_TOKEN_MAX_REUSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRefreshTokenMaxReuse(Integer refreshTokenMaxReuse) {
    this.refreshTokenMaxReuse = refreshTokenMaxReuse;
  }


  public RealmRepresentationDto registrationAllowed(Boolean registrationAllowed) {
    
    this.registrationAllowed = registrationAllowed;
    return this;
  }

   /**
   * Get registrationAllowed
   * @return registrationAllowed
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_REGISTRATION_ALLOWED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getRegistrationAllowed() {
    return registrationAllowed;
  }


  @JsonProperty(JSON_PROPERTY_REGISTRATION_ALLOWED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRegistrationAllowed(Boolean registrationAllowed) {
    this.registrationAllowed = registrationAllowed;
  }


  public RealmRepresentationDto registrationEmailAsUsername(Boolean registrationEmailAsUsername) {
    
    this.registrationEmailAsUsername = registrationEmailAsUsername;
    return this;
  }

   /**
   * Get registrationEmailAsUsername
   * @return registrationEmailAsUsername
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_REGISTRATION_EMAIL_AS_USERNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getRegistrationEmailAsUsername() {
    return registrationEmailAsUsername;
  }


  @JsonProperty(JSON_PROPERTY_REGISTRATION_EMAIL_AS_USERNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRegistrationEmailAsUsername(Boolean registrationEmailAsUsername) {
    this.registrationEmailAsUsername = registrationEmailAsUsername;
  }


  public RealmRepresentationDto registrationFlow(String registrationFlow) {
    
    this.registrationFlow = registrationFlow;
    return this;
  }

   /**
   * Get registrationFlow
   * @return registrationFlow
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_REGISTRATION_FLOW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRegistrationFlow() {
    return registrationFlow;
  }


  @JsonProperty(JSON_PROPERTY_REGISTRATION_FLOW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRegistrationFlow(String registrationFlow) {
    this.registrationFlow = registrationFlow;
  }


  public RealmRepresentationDto rememberMe(Boolean rememberMe) {
    
    this.rememberMe = rememberMe;
    return this;
  }

   /**
   * Get rememberMe
   * @return rememberMe
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_REMEMBER_ME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getRememberMe() {
    return rememberMe;
  }


  @JsonProperty(JSON_PROPERTY_REMEMBER_ME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRememberMe(Boolean rememberMe) {
    this.rememberMe = rememberMe;
  }


  public RealmRepresentationDto requiredActions(List<RequiredActionProviderRepresentationDto> requiredActions) {
    
    this.requiredActions = requiredActions;
    return this;
  }

  public RealmRepresentationDto addRequiredActionsItem(RequiredActionProviderRepresentationDto requiredActionsItem) {
    if (this.requiredActions == null) {
      this.requiredActions = new ArrayList<>();
    }
    this.requiredActions.add(requiredActionsItem);
    return this;
  }

   /**
   * Get requiredActions
   * @return requiredActions
  **/
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_REQUIRED_ACTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<RequiredActionProviderRepresentationDto> getRequiredActions() {
    return requiredActions;
  }


  @JsonProperty(JSON_PROPERTY_REQUIRED_ACTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRequiredActions(List<RequiredActionProviderRepresentationDto> requiredActions) {
    this.requiredActions = requiredActions;
  }


  public RealmRepresentationDto resetCredentialsFlow(String resetCredentialsFlow) {
    
    this.resetCredentialsFlow = resetCredentialsFlow;
    return this;
  }

   /**
   * Get resetCredentialsFlow
   * @return resetCredentialsFlow
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_RESET_CREDENTIALS_FLOW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getResetCredentialsFlow() {
    return resetCredentialsFlow;
  }


  @JsonProperty(JSON_PROPERTY_RESET_CREDENTIALS_FLOW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setResetCredentialsFlow(String resetCredentialsFlow) {
    this.resetCredentialsFlow = resetCredentialsFlow;
  }


  public RealmRepresentationDto resetPasswordAllowed(Boolean resetPasswordAllowed) {
    
    this.resetPasswordAllowed = resetPasswordAllowed;
    return this;
  }

   /**
   * Get resetPasswordAllowed
   * @return resetPasswordAllowed
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_RESET_PASSWORD_ALLOWED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getResetPasswordAllowed() {
    return resetPasswordAllowed;
  }


  @JsonProperty(JSON_PROPERTY_RESET_PASSWORD_ALLOWED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setResetPasswordAllowed(Boolean resetPasswordAllowed) {
    this.resetPasswordAllowed = resetPasswordAllowed;
  }


  public RealmRepresentationDto revokeRefreshToken(Boolean revokeRefreshToken) {
    
    this.revokeRefreshToken = revokeRefreshToken;
    return this;
  }

   /**
   * Get revokeRefreshToken
   * @return revokeRefreshToken
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_REVOKE_REFRESH_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getRevokeRefreshToken() {
    return revokeRefreshToken;
  }


  @JsonProperty(JSON_PROPERTY_REVOKE_REFRESH_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRevokeRefreshToken(Boolean revokeRefreshToken) {
    this.revokeRefreshToken = revokeRefreshToken;
  }


  public RealmRepresentationDto roles(RolesRepresentationDto roles) {
    
    this.roles = roles;
    return this;
  }

   /**
   * Get roles
   * @return roles
  **/
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_ROLES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RolesRepresentationDto getRoles() {
    return roles;
  }


  @JsonProperty(JSON_PROPERTY_ROLES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRoles(RolesRepresentationDto roles) {
    this.roles = roles;
  }


  public RealmRepresentationDto scopeMappings(List<ScopeMappingRepresentationDto> scopeMappings) {
    
    this.scopeMappings = scopeMappings;
    return this;
  }

  public RealmRepresentationDto addScopeMappingsItem(ScopeMappingRepresentationDto scopeMappingsItem) {
    if (this.scopeMappings == null) {
      this.scopeMappings = new ArrayList<>();
    }
    this.scopeMappings.add(scopeMappingsItem);
    return this;
  }

   /**
   * Get scopeMappings
   * @return scopeMappings
  **/
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_SCOPE_MAPPINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ScopeMappingRepresentationDto> getScopeMappings() {
    return scopeMappings;
  }


  @JsonProperty(JSON_PROPERTY_SCOPE_MAPPINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setScopeMappings(List<ScopeMappingRepresentationDto> scopeMappings) {
    this.scopeMappings = scopeMappings;
  }


  public RealmRepresentationDto smtpServer(Map<String, Object> smtpServer) {
    
    this.smtpServer = smtpServer;
    return this;
  }

  public RealmRepresentationDto putSmtpServerItem(String key, Object smtpServerItem) {
    if (this.smtpServer == null) {
      this.smtpServer = new HashMap<>();
    }
    this.smtpServer.put(key, smtpServerItem);
    return this;
  }

   /**
   * Get smtpServer
   * @return smtpServer
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_SMTP_SERVER)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, Object> getSmtpServer() {
    return smtpServer;
  }


  @JsonProperty(JSON_PROPERTY_SMTP_SERVER)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)
  public void setSmtpServer(Map<String, Object> smtpServer) {
    this.smtpServer = smtpServer;
  }


  public RealmRepresentationDto sslRequired(String sslRequired) {
    
    this.sslRequired = sslRequired;
    return this;
  }

   /**
   * Get sslRequired
   * @return sslRequired
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_SSL_REQUIRED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSslRequired() {
    return sslRequired;
  }


  @JsonProperty(JSON_PROPERTY_SSL_REQUIRED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSslRequired(String sslRequired) {
    this.sslRequired = sslRequired;
  }


  public RealmRepresentationDto ssoSessionIdleTimeout(Integer ssoSessionIdleTimeout) {
    
    this.ssoSessionIdleTimeout = ssoSessionIdleTimeout;
    return this;
  }

   /**
   * Get ssoSessionIdleTimeout
   * @return ssoSessionIdleTimeout
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_SSO_SESSION_IDLE_TIMEOUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getSsoSessionIdleTimeout() {
    return ssoSessionIdleTimeout;
  }


  @JsonProperty(JSON_PROPERTY_SSO_SESSION_IDLE_TIMEOUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSsoSessionIdleTimeout(Integer ssoSessionIdleTimeout) {
    this.ssoSessionIdleTimeout = ssoSessionIdleTimeout;
  }


  public RealmRepresentationDto ssoSessionIdleTimeoutRememberMe(Integer ssoSessionIdleTimeoutRememberMe) {
    
    this.ssoSessionIdleTimeoutRememberMe = ssoSessionIdleTimeoutRememberMe;
    return this;
  }

   /**
   * Get ssoSessionIdleTimeoutRememberMe
   * @return ssoSessionIdleTimeoutRememberMe
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_SSO_SESSION_IDLE_TIMEOUT_REMEMBER_ME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getSsoSessionIdleTimeoutRememberMe() {
    return ssoSessionIdleTimeoutRememberMe;
  }


  @JsonProperty(JSON_PROPERTY_SSO_SESSION_IDLE_TIMEOUT_REMEMBER_ME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSsoSessionIdleTimeoutRememberMe(Integer ssoSessionIdleTimeoutRememberMe) {
    this.ssoSessionIdleTimeoutRememberMe = ssoSessionIdleTimeoutRememberMe;
  }


  public RealmRepresentationDto ssoSessionMaxLifespan(Integer ssoSessionMaxLifespan) {
    
    this.ssoSessionMaxLifespan = ssoSessionMaxLifespan;
    return this;
  }

   /**
   * Get ssoSessionMaxLifespan
   * @return ssoSessionMaxLifespan
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_SSO_SESSION_MAX_LIFESPAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getSsoSessionMaxLifespan() {
    return ssoSessionMaxLifespan;
  }


  @JsonProperty(JSON_PROPERTY_SSO_SESSION_MAX_LIFESPAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSsoSessionMaxLifespan(Integer ssoSessionMaxLifespan) {
    this.ssoSessionMaxLifespan = ssoSessionMaxLifespan;
  }


  public RealmRepresentationDto ssoSessionMaxLifespanRememberMe(Integer ssoSessionMaxLifespanRememberMe) {
    
    this.ssoSessionMaxLifespanRememberMe = ssoSessionMaxLifespanRememberMe;
    return this;
  }

   /**
   * Get ssoSessionMaxLifespanRememberMe
   * @return ssoSessionMaxLifespanRememberMe
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_SSO_SESSION_MAX_LIFESPAN_REMEMBER_ME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getSsoSessionMaxLifespanRememberMe() {
    return ssoSessionMaxLifespanRememberMe;
  }


  @JsonProperty(JSON_PROPERTY_SSO_SESSION_MAX_LIFESPAN_REMEMBER_ME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSsoSessionMaxLifespanRememberMe(Integer ssoSessionMaxLifespanRememberMe) {
    this.ssoSessionMaxLifespanRememberMe = ssoSessionMaxLifespanRememberMe;
  }


  public RealmRepresentationDto supportedLocales(List<String> supportedLocales) {
    
    this.supportedLocales = supportedLocales;
    return this;
  }

  public RealmRepresentationDto addSupportedLocalesItem(String supportedLocalesItem) {
    if (this.supportedLocales == null) {
      this.supportedLocales = new ArrayList<>();
    }
    this.supportedLocales.add(supportedLocalesItem);
    return this;
  }

   /**
   * Get supportedLocales
   * @return supportedLocales
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_SUPPORTED_LOCALES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getSupportedLocales() {
    return supportedLocales;
  }


  @JsonProperty(JSON_PROPERTY_SUPPORTED_LOCALES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSupportedLocales(List<String> supportedLocales) {
    this.supportedLocales = supportedLocales;
  }


  public RealmRepresentationDto userFederationMappers(List<UserFederationMapperRepresentationDto> userFederationMappers) {
    
    this.userFederationMappers = userFederationMappers;
    return this;
  }

  public RealmRepresentationDto addUserFederationMappersItem(UserFederationMapperRepresentationDto userFederationMappersItem) {
    if (this.userFederationMappers == null) {
      this.userFederationMappers = new ArrayList<>();
    }
    this.userFederationMappers.add(userFederationMappersItem);
    return this;
  }

   /**
   * Get userFederationMappers
   * @return userFederationMappers
  **/
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_USER_FEDERATION_MAPPERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UserFederationMapperRepresentationDto> getUserFederationMappers() {
    return userFederationMappers;
  }


  @JsonProperty(JSON_PROPERTY_USER_FEDERATION_MAPPERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserFederationMappers(List<UserFederationMapperRepresentationDto> userFederationMappers) {
    this.userFederationMappers = userFederationMappers;
  }


  public RealmRepresentationDto userFederationProviders(List<UserFederationProviderRepresentationDto> userFederationProviders) {
    
    this.userFederationProviders = userFederationProviders;
    return this;
  }

  public RealmRepresentationDto addUserFederationProvidersItem(UserFederationProviderRepresentationDto userFederationProvidersItem) {
    if (this.userFederationProviders == null) {
      this.userFederationProviders = new ArrayList<>();
    }
    this.userFederationProviders.add(userFederationProvidersItem);
    return this;
  }

   /**
   * Get userFederationProviders
   * @return userFederationProviders
  **/
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_USER_FEDERATION_PROVIDERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UserFederationProviderRepresentationDto> getUserFederationProviders() {
    return userFederationProviders;
  }


  @JsonProperty(JSON_PROPERTY_USER_FEDERATION_PROVIDERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserFederationProviders(List<UserFederationProviderRepresentationDto> userFederationProviders) {
    this.userFederationProviders = userFederationProviders;
  }


  public RealmRepresentationDto userManagedAccessAllowed(Boolean userManagedAccessAllowed) {
    
    this.userManagedAccessAllowed = userManagedAccessAllowed;
    return this;
  }

   /**
   * Get userManagedAccessAllowed
   * @return userManagedAccessAllowed
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_USER_MANAGED_ACCESS_ALLOWED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getUserManagedAccessAllowed() {
    return userManagedAccessAllowed;
  }


  @JsonProperty(JSON_PROPERTY_USER_MANAGED_ACCESS_ALLOWED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserManagedAccessAllowed(Boolean userManagedAccessAllowed) {
    this.userManagedAccessAllowed = userManagedAccessAllowed;
  }


  public RealmRepresentationDto users(List<UserRepresentationDto> users) {
    
    this.users = users;
    return this;
  }

  public RealmRepresentationDto addUsersItem(UserRepresentationDto usersItem) {
    if (this.users == null) {
      this.users = new ArrayList<>();
    }
    this.users.add(usersItem);
    return this;
  }

   /**
   * Get users
   * @return users
  **/
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_USERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UserRepresentationDto> getUsers() {
    return users;
  }


  @JsonProperty(JSON_PROPERTY_USERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUsers(List<UserRepresentationDto> users) {
    this.users = users;
  }


  public RealmRepresentationDto verifyEmail(Boolean verifyEmail) {
    
    this.verifyEmail = verifyEmail;
    return this;
  }

   /**
   * Get verifyEmail
   * @return verifyEmail
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_VERIFY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getVerifyEmail() {
    return verifyEmail;
  }


  @JsonProperty(JSON_PROPERTY_VERIFY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVerifyEmail(Boolean verifyEmail) {
    this.verifyEmail = verifyEmail;
  }


  public RealmRepresentationDto waitIncrementSeconds(Integer waitIncrementSeconds) {
    
    this.waitIncrementSeconds = waitIncrementSeconds;
    return this;
  }

   /**
   * Get waitIncrementSeconds
   * @return waitIncrementSeconds
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_WAIT_INCREMENT_SECONDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getWaitIncrementSeconds() {
    return waitIncrementSeconds;
  }


  @JsonProperty(JSON_PROPERTY_WAIT_INCREMENT_SECONDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWaitIncrementSeconds(Integer waitIncrementSeconds) {
    this.waitIncrementSeconds = waitIncrementSeconds;
  }


  public RealmRepresentationDto webAuthnPolicyAcceptableAaguids(List<String> webAuthnPolicyAcceptableAaguids) {
    
    this.webAuthnPolicyAcceptableAaguids = webAuthnPolicyAcceptableAaguids;
    return this;
  }

  public RealmRepresentationDto addWebAuthnPolicyAcceptableAaguidsItem(String webAuthnPolicyAcceptableAaguidsItem) {
    if (this.webAuthnPolicyAcceptableAaguids == null) {
      this.webAuthnPolicyAcceptableAaguids = new ArrayList<>();
    }
    this.webAuthnPolicyAcceptableAaguids.add(webAuthnPolicyAcceptableAaguidsItem);
    return this;
  }

   /**
   * Get webAuthnPolicyAcceptableAaguids
   * @return webAuthnPolicyAcceptableAaguids
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_WEB_AUTHN_POLICY_ACCEPTABLE_AAGUIDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getWebAuthnPolicyAcceptableAaguids() {
    return webAuthnPolicyAcceptableAaguids;
  }


  @JsonProperty(JSON_PROPERTY_WEB_AUTHN_POLICY_ACCEPTABLE_AAGUIDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWebAuthnPolicyAcceptableAaguids(List<String> webAuthnPolicyAcceptableAaguids) {
    this.webAuthnPolicyAcceptableAaguids = webAuthnPolicyAcceptableAaguids;
  }


  public RealmRepresentationDto webAuthnPolicyAttestationConveyancePreference(String webAuthnPolicyAttestationConveyancePreference) {
    
    this.webAuthnPolicyAttestationConveyancePreference = webAuthnPolicyAttestationConveyancePreference;
    return this;
  }

   /**
   * Get webAuthnPolicyAttestationConveyancePreference
   * @return webAuthnPolicyAttestationConveyancePreference
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_WEB_AUTHN_POLICY_ATTESTATION_CONVEYANCE_PREFERENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getWebAuthnPolicyAttestationConveyancePreference() {
    return webAuthnPolicyAttestationConveyancePreference;
  }


  @JsonProperty(JSON_PROPERTY_WEB_AUTHN_POLICY_ATTESTATION_CONVEYANCE_PREFERENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWebAuthnPolicyAttestationConveyancePreference(String webAuthnPolicyAttestationConveyancePreference) {
    this.webAuthnPolicyAttestationConveyancePreference = webAuthnPolicyAttestationConveyancePreference;
  }


  public RealmRepresentationDto webAuthnPolicyAuthenticatorAttachment(String webAuthnPolicyAuthenticatorAttachment) {
    
    this.webAuthnPolicyAuthenticatorAttachment = webAuthnPolicyAuthenticatorAttachment;
    return this;
  }

   /**
   * Get webAuthnPolicyAuthenticatorAttachment
   * @return webAuthnPolicyAuthenticatorAttachment
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_WEB_AUTHN_POLICY_AUTHENTICATOR_ATTACHMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getWebAuthnPolicyAuthenticatorAttachment() {
    return webAuthnPolicyAuthenticatorAttachment;
  }


  @JsonProperty(JSON_PROPERTY_WEB_AUTHN_POLICY_AUTHENTICATOR_ATTACHMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWebAuthnPolicyAuthenticatorAttachment(String webAuthnPolicyAuthenticatorAttachment) {
    this.webAuthnPolicyAuthenticatorAttachment = webAuthnPolicyAuthenticatorAttachment;
  }


  public RealmRepresentationDto webAuthnPolicyAvoidSameAuthenticatorRegister(Boolean webAuthnPolicyAvoidSameAuthenticatorRegister) {
    
    this.webAuthnPolicyAvoidSameAuthenticatorRegister = webAuthnPolicyAvoidSameAuthenticatorRegister;
    return this;
  }

   /**
   * Get webAuthnPolicyAvoidSameAuthenticatorRegister
   * @return webAuthnPolicyAvoidSameAuthenticatorRegister
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_WEB_AUTHN_POLICY_AVOID_SAME_AUTHENTICATOR_REGISTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getWebAuthnPolicyAvoidSameAuthenticatorRegister() {
    return webAuthnPolicyAvoidSameAuthenticatorRegister;
  }


  @JsonProperty(JSON_PROPERTY_WEB_AUTHN_POLICY_AVOID_SAME_AUTHENTICATOR_REGISTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWebAuthnPolicyAvoidSameAuthenticatorRegister(Boolean webAuthnPolicyAvoidSameAuthenticatorRegister) {
    this.webAuthnPolicyAvoidSameAuthenticatorRegister = webAuthnPolicyAvoidSameAuthenticatorRegister;
  }


  public RealmRepresentationDto webAuthnPolicyCreateTimeout(Integer webAuthnPolicyCreateTimeout) {
    
    this.webAuthnPolicyCreateTimeout = webAuthnPolicyCreateTimeout;
    return this;
  }

   /**
   * Get webAuthnPolicyCreateTimeout
   * @return webAuthnPolicyCreateTimeout
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_WEB_AUTHN_POLICY_CREATE_TIMEOUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getWebAuthnPolicyCreateTimeout() {
    return webAuthnPolicyCreateTimeout;
  }


  @JsonProperty(JSON_PROPERTY_WEB_AUTHN_POLICY_CREATE_TIMEOUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWebAuthnPolicyCreateTimeout(Integer webAuthnPolicyCreateTimeout) {
    this.webAuthnPolicyCreateTimeout = webAuthnPolicyCreateTimeout;
  }


  public RealmRepresentationDto webAuthnPolicyPasswordlessAcceptableAaguids(List<String> webAuthnPolicyPasswordlessAcceptableAaguids) {
    
    this.webAuthnPolicyPasswordlessAcceptableAaguids = webAuthnPolicyPasswordlessAcceptableAaguids;
    return this;
  }

  public RealmRepresentationDto addWebAuthnPolicyPasswordlessAcceptableAaguidsItem(String webAuthnPolicyPasswordlessAcceptableAaguidsItem) {
    if (this.webAuthnPolicyPasswordlessAcceptableAaguids == null) {
      this.webAuthnPolicyPasswordlessAcceptableAaguids = new ArrayList<>();
    }
    this.webAuthnPolicyPasswordlessAcceptableAaguids.add(webAuthnPolicyPasswordlessAcceptableAaguidsItem);
    return this;
  }

   /**
   * Get webAuthnPolicyPasswordlessAcceptableAaguids
   * @return webAuthnPolicyPasswordlessAcceptableAaguids
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_WEB_AUTHN_POLICY_PASSWORDLESS_ACCEPTABLE_AAGUIDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getWebAuthnPolicyPasswordlessAcceptableAaguids() {
    return webAuthnPolicyPasswordlessAcceptableAaguids;
  }


  @JsonProperty(JSON_PROPERTY_WEB_AUTHN_POLICY_PASSWORDLESS_ACCEPTABLE_AAGUIDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWebAuthnPolicyPasswordlessAcceptableAaguids(List<String> webAuthnPolicyPasswordlessAcceptableAaguids) {
    this.webAuthnPolicyPasswordlessAcceptableAaguids = webAuthnPolicyPasswordlessAcceptableAaguids;
  }


  public RealmRepresentationDto webAuthnPolicyPasswordlessAttestationConveyancePreference(String webAuthnPolicyPasswordlessAttestationConveyancePreference) {
    
    this.webAuthnPolicyPasswordlessAttestationConveyancePreference = webAuthnPolicyPasswordlessAttestationConveyancePreference;
    return this;
  }

   /**
   * Get webAuthnPolicyPasswordlessAttestationConveyancePreference
   * @return webAuthnPolicyPasswordlessAttestationConveyancePreference
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_WEB_AUTHN_POLICY_PASSWORDLESS_ATTESTATION_CONVEYANCE_PREFERENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getWebAuthnPolicyPasswordlessAttestationConveyancePreference() {
    return webAuthnPolicyPasswordlessAttestationConveyancePreference;
  }


  @JsonProperty(JSON_PROPERTY_WEB_AUTHN_POLICY_PASSWORDLESS_ATTESTATION_CONVEYANCE_PREFERENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWebAuthnPolicyPasswordlessAttestationConveyancePreference(String webAuthnPolicyPasswordlessAttestationConveyancePreference) {
    this.webAuthnPolicyPasswordlessAttestationConveyancePreference = webAuthnPolicyPasswordlessAttestationConveyancePreference;
  }


  public RealmRepresentationDto webAuthnPolicyPasswordlessAuthenticatorAttachment(String webAuthnPolicyPasswordlessAuthenticatorAttachment) {
    
    this.webAuthnPolicyPasswordlessAuthenticatorAttachment = webAuthnPolicyPasswordlessAuthenticatorAttachment;
    return this;
  }

   /**
   * Get webAuthnPolicyPasswordlessAuthenticatorAttachment
   * @return webAuthnPolicyPasswordlessAuthenticatorAttachment
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_WEB_AUTHN_POLICY_PASSWORDLESS_AUTHENTICATOR_ATTACHMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getWebAuthnPolicyPasswordlessAuthenticatorAttachment() {
    return webAuthnPolicyPasswordlessAuthenticatorAttachment;
  }


  @JsonProperty(JSON_PROPERTY_WEB_AUTHN_POLICY_PASSWORDLESS_AUTHENTICATOR_ATTACHMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWebAuthnPolicyPasswordlessAuthenticatorAttachment(String webAuthnPolicyPasswordlessAuthenticatorAttachment) {
    this.webAuthnPolicyPasswordlessAuthenticatorAttachment = webAuthnPolicyPasswordlessAuthenticatorAttachment;
  }


  public RealmRepresentationDto webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister(Boolean webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister) {
    
    this.webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister = webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister;
    return this;
  }

   /**
   * Get webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister
   * @return webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_WEB_AUTHN_POLICY_PASSWORDLESS_AVOID_SAME_AUTHENTICATOR_REGISTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getWebAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister() {
    return webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister;
  }


  @JsonProperty(JSON_PROPERTY_WEB_AUTHN_POLICY_PASSWORDLESS_AVOID_SAME_AUTHENTICATOR_REGISTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWebAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister(Boolean webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister) {
    this.webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister = webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister;
  }


  public RealmRepresentationDto webAuthnPolicyPasswordlessCreateTimeout(Integer webAuthnPolicyPasswordlessCreateTimeout) {
    
    this.webAuthnPolicyPasswordlessCreateTimeout = webAuthnPolicyPasswordlessCreateTimeout;
    return this;
  }

   /**
   * Get webAuthnPolicyPasswordlessCreateTimeout
   * @return webAuthnPolicyPasswordlessCreateTimeout
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_WEB_AUTHN_POLICY_PASSWORDLESS_CREATE_TIMEOUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getWebAuthnPolicyPasswordlessCreateTimeout() {
    return webAuthnPolicyPasswordlessCreateTimeout;
  }


  @JsonProperty(JSON_PROPERTY_WEB_AUTHN_POLICY_PASSWORDLESS_CREATE_TIMEOUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWebAuthnPolicyPasswordlessCreateTimeout(Integer webAuthnPolicyPasswordlessCreateTimeout) {
    this.webAuthnPolicyPasswordlessCreateTimeout = webAuthnPolicyPasswordlessCreateTimeout;
  }


  public RealmRepresentationDto webAuthnPolicyPasswordlessRequireResidentKey(String webAuthnPolicyPasswordlessRequireResidentKey) {
    
    this.webAuthnPolicyPasswordlessRequireResidentKey = webAuthnPolicyPasswordlessRequireResidentKey;
    return this;
  }

   /**
   * Get webAuthnPolicyPasswordlessRequireResidentKey
   * @return webAuthnPolicyPasswordlessRequireResidentKey
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_WEB_AUTHN_POLICY_PASSWORDLESS_REQUIRE_RESIDENT_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getWebAuthnPolicyPasswordlessRequireResidentKey() {
    return webAuthnPolicyPasswordlessRequireResidentKey;
  }


  @JsonProperty(JSON_PROPERTY_WEB_AUTHN_POLICY_PASSWORDLESS_REQUIRE_RESIDENT_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWebAuthnPolicyPasswordlessRequireResidentKey(String webAuthnPolicyPasswordlessRequireResidentKey) {
    this.webAuthnPolicyPasswordlessRequireResidentKey = webAuthnPolicyPasswordlessRequireResidentKey;
  }


  public RealmRepresentationDto webAuthnPolicyPasswordlessRpEntityName(String webAuthnPolicyPasswordlessRpEntityName) {
    
    this.webAuthnPolicyPasswordlessRpEntityName = webAuthnPolicyPasswordlessRpEntityName;
    return this;
  }

   /**
   * Get webAuthnPolicyPasswordlessRpEntityName
   * @return webAuthnPolicyPasswordlessRpEntityName
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_WEB_AUTHN_POLICY_PASSWORDLESS_RP_ENTITY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getWebAuthnPolicyPasswordlessRpEntityName() {
    return webAuthnPolicyPasswordlessRpEntityName;
  }


  @JsonProperty(JSON_PROPERTY_WEB_AUTHN_POLICY_PASSWORDLESS_RP_ENTITY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWebAuthnPolicyPasswordlessRpEntityName(String webAuthnPolicyPasswordlessRpEntityName) {
    this.webAuthnPolicyPasswordlessRpEntityName = webAuthnPolicyPasswordlessRpEntityName;
  }


  public RealmRepresentationDto webAuthnPolicyPasswordlessRpId(String webAuthnPolicyPasswordlessRpId) {
    
    this.webAuthnPolicyPasswordlessRpId = webAuthnPolicyPasswordlessRpId;
    return this;
  }

   /**
   * Get webAuthnPolicyPasswordlessRpId
   * @return webAuthnPolicyPasswordlessRpId
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_WEB_AUTHN_POLICY_PASSWORDLESS_RP_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getWebAuthnPolicyPasswordlessRpId() {
    return webAuthnPolicyPasswordlessRpId;
  }


  @JsonProperty(JSON_PROPERTY_WEB_AUTHN_POLICY_PASSWORDLESS_RP_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWebAuthnPolicyPasswordlessRpId(String webAuthnPolicyPasswordlessRpId) {
    this.webAuthnPolicyPasswordlessRpId = webAuthnPolicyPasswordlessRpId;
  }


  public RealmRepresentationDto webAuthnPolicyPasswordlessSignatureAlgorithms(List<String> webAuthnPolicyPasswordlessSignatureAlgorithms) {
    
    this.webAuthnPolicyPasswordlessSignatureAlgorithms = webAuthnPolicyPasswordlessSignatureAlgorithms;
    return this;
  }

  public RealmRepresentationDto addWebAuthnPolicyPasswordlessSignatureAlgorithmsItem(String webAuthnPolicyPasswordlessSignatureAlgorithmsItem) {
    if (this.webAuthnPolicyPasswordlessSignatureAlgorithms == null) {
      this.webAuthnPolicyPasswordlessSignatureAlgorithms = new ArrayList<>();
    }
    this.webAuthnPolicyPasswordlessSignatureAlgorithms.add(webAuthnPolicyPasswordlessSignatureAlgorithmsItem);
    return this;
  }

   /**
   * Get webAuthnPolicyPasswordlessSignatureAlgorithms
   * @return webAuthnPolicyPasswordlessSignatureAlgorithms
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_WEB_AUTHN_POLICY_PASSWORDLESS_SIGNATURE_ALGORITHMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getWebAuthnPolicyPasswordlessSignatureAlgorithms() {
    return webAuthnPolicyPasswordlessSignatureAlgorithms;
  }


  @JsonProperty(JSON_PROPERTY_WEB_AUTHN_POLICY_PASSWORDLESS_SIGNATURE_ALGORITHMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWebAuthnPolicyPasswordlessSignatureAlgorithms(List<String> webAuthnPolicyPasswordlessSignatureAlgorithms) {
    this.webAuthnPolicyPasswordlessSignatureAlgorithms = webAuthnPolicyPasswordlessSignatureAlgorithms;
  }


  public RealmRepresentationDto webAuthnPolicyPasswordlessUserVerificationRequirement(String webAuthnPolicyPasswordlessUserVerificationRequirement) {
    
    this.webAuthnPolicyPasswordlessUserVerificationRequirement = webAuthnPolicyPasswordlessUserVerificationRequirement;
    return this;
  }

   /**
   * Get webAuthnPolicyPasswordlessUserVerificationRequirement
   * @return webAuthnPolicyPasswordlessUserVerificationRequirement
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_WEB_AUTHN_POLICY_PASSWORDLESS_USER_VERIFICATION_REQUIREMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getWebAuthnPolicyPasswordlessUserVerificationRequirement() {
    return webAuthnPolicyPasswordlessUserVerificationRequirement;
  }


  @JsonProperty(JSON_PROPERTY_WEB_AUTHN_POLICY_PASSWORDLESS_USER_VERIFICATION_REQUIREMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWebAuthnPolicyPasswordlessUserVerificationRequirement(String webAuthnPolicyPasswordlessUserVerificationRequirement) {
    this.webAuthnPolicyPasswordlessUserVerificationRequirement = webAuthnPolicyPasswordlessUserVerificationRequirement;
  }


  public RealmRepresentationDto webAuthnPolicyRequireResidentKey(String webAuthnPolicyRequireResidentKey) {
    
    this.webAuthnPolicyRequireResidentKey = webAuthnPolicyRequireResidentKey;
    return this;
  }

   /**
   * Get webAuthnPolicyRequireResidentKey
   * @return webAuthnPolicyRequireResidentKey
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_WEB_AUTHN_POLICY_REQUIRE_RESIDENT_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getWebAuthnPolicyRequireResidentKey() {
    return webAuthnPolicyRequireResidentKey;
  }


  @JsonProperty(JSON_PROPERTY_WEB_AUTHN_POLICY_REQUIRE_RESIDENT_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWebAuthnPolicyRequireResidentKey(String webAuthnPolicyRequireResidentKey) {
    this.webAuthnPolicyRequireResidentKey = webAuthnPolicyRequireResidentKey;
  }


  public RealmRepresentationDto webAuthnPolicyRpEntityName(String webAuthnPolicyRpEntityName) {
    
    this.webAuthnPolicyRpEntityName = webAuthnPolicyRpEntityName;
    return this;
  }

   /**
   * Get webAuthnPolicyRpEntityName
   * @return webAuthnPolicyRpEntityName
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_WEB_AUTHN_POLICY_RP_ENTITY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getWebAuthnPolicyRpEntityName() {
    return webAuthnPolicyRpEntityName;
  }


  @JsonProperty(JSON_PROPERTY_WEB_AUTHN_POLICY_RP_ENTITY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWebAuthnPolicyRpEntityName(String webAuthnPolicyRpEntityName) {
    this.webAuthnPolicyRpEntityName = webAuthnPolicyRpEntityName;
  }


  public RealmRepresentationDto webAuthnPolicyRpId(String webAuthnPolicyRpId) {
    
    this.webAuthnPolicyRpId = webAuthnPolicyRpId;
    return this;
  }

   /**
   * Get webAuthnPolicyRpId
   * @return webAuthnPolicyRpId
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_WEB_AUTHN_POLICY_RP_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getWebAuthnPolicyRpId() {
    return webAuthnPolicyRpId;
  }


  @JsonProperty(JSON_PROPERTY_WEB_AUTHN_POLICY_RP_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWebAuthnPolicyRpId(String webAuthnPolicyRpId) {
    this.webAuthnPolicyRpId = webAuthnPolicyRpId;
  }


  public RealmRepresentationDto webAuthnPolicySignatureAlgorithms(List<String> webAuthnPolicySignatureAlgorithms) {
    
    this.webAuthnPolicySignatureAlgorithms = webAuthnPolicySignatureAlgorithms;
    return this;
  }

  public RealmRepresentationDto addWebAuthnPolicySignatureAlgorithmsItem(String webAuthnPolicySignatureAlgorithmsItem) {
    if (this.webAuthnPolicySignatureAlgorithms == null) {
      this.webAuthnPolicySignatureAlgorithms = new ArrayList<>();
    }
    this.webAuthnPolicySignatureAlgorithms.add(webAuthnPolicySignatureAlgorithmsItem);
    return this;
  }

   /**
   * Get webAuthnPolicySignatureAlgorithms
   * @return webAuthnPolicySignatureAlgorithms
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_WEB_AUTHN_POLICY_SIGNATURE_ALGORITHMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getWebAuthnPolicySignatureAlgorithms() {
    return webAuthnPolicySignatureAlgorithms;
  }


  @JsonProperty(JSON_PROPERTY_WEB_AUTHN_POLICY_SIGNATURE_ALGORITHMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWebAuthnPolicySignatureAlgorithms(List<String> webAuthnPolicySignatureAlgorithms) {
    this.webAuthnPolicySignatureAlgorithms = webAuthnPolicySignatureAlgorithms;
  }


  public RealmRepresentationDto webAuthnPolicyUserVerificationRequirement(String webAuthnPolicyUserVerificationRequirement) {
    
    this.webAuthnPolicyUserVerificationRequirement = webAuthnPolicyUserVerificationRequirement;
    return this;
  }

   /**
   * Get webAuthnPolicyUserVerificationRequirement
   * @return webAuthnPolicyUserVerificationRequirement
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_WEB_AUTHN_POLICY_USER_VERIFICATION_REQUIREMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getWebAuthnPolicyUserVerificationRequirement() {
    return webAuthnPolicyUserVerificationRequirement;
  }


  @JsonProperty(JSON_PROPERTY_WEB_AUTHN_POLICY_USER_VERIFICATION_REQUIREMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWebAuthnPolicyUserVerificationRequirement(String webAuthnPolicyUserVerificationRequirement) {
    this.webAuthnPolicyUserVerificationRequirement = webAuthnPolicyUserVerificationRequirement;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RealmRepresentationDto realmRepresentation = (RealmRepresentationDto) o;
    return Objects.equals(this.accessCodeLifespan, realmRepresentation.accessCodeLifespan) &&
        Objects.equals(this.accessCodeLifespanLogin, realmRepresentation.accessCodeLifespanLogin) &&
        Objects.equals(this.accessCodeLifespanUserAction, realmRepresentation.accessCodeLifespanUserAction) &&
        Objects.equals(this.accessTokenLifespan, realmRepresentation.accessTokenLifespan) &&
        Objects.equals(this.accessTokenLifespanForImplicitFlow, realmRepresentation.accessTokenLifespanForImplicitFlow) &&
        Objects.equals(this.accountTheme, realmRepresentation.accountTheme) &&
        Objects.equals(this.actionTokenGeneratedByAdminLifespan, realmRepresentation.actionTokenGeneratedByAdminLifespan) &&
        Objects.equals(this.actionTokenGeneratedByUserLifespan, realmRepresentation.actionTokenGeneratedByUserLifespan) &&
        Objects.equals(this.adminEventsDetailsEnabled, realmRepresentation.adminEventsDetailsEnabled) &&
        Objects.equals(this.adminEventsEnabled, realmRepresentation.adminEventsEnabled) &&
        Objects.equals(this.adminTheme, realmRepresentation.adminTheme) &&
        Objects.equals(this.attributes, realmRepresentation.attributes) &&
        Objects.equals(this.authenticationFlows, realmRepresentation.authenticationFlows) &&
        Objects.equals(this.authenticatorConfig, realmRepresentation.authenticatorConfig) &&
        Objects.equals(this.browserFlow, realmRepresentation.browserFlow) &&
        Objects.equals(this.browserSecurityHeaders, realmRepresentation.browserSecurityHeaders) &&
        Objects.equals(this.bruteForceProtected, realmRepresentation.bruteForceProtected) &&
        Objects.equals(this.clientAuthenticationFlow, realmRepresentation.clientAuthenticationFlow) &&
        Objects.equals(this.clientOfflineSessionIdleTimeout, realmRepresentation.clientOfflineSessionIdleTimeout) &&
        Objects.equals(this.clientOfflineSessionMaxLifespan, realmRepresentation.clientOfflineSessionMaxLifespan) &&
        Objects.equals(this.clientPolicies, realmRepresentation.clientPolicies) &&
        Objects.equals(this.clientProfiles, realmRepresentation.clientProfiles) &&
        Objects.equals(this.clientScopeMappings, realmRepresentation.clientScopeMappings) &&
        Objects.equals(this.clientScopes, realmRepresentation.clientScopes) &&
        Objects.equals(this.clientSessionIdleTimeout, realmRepresentation.clientSessionIdleTimeout) &&
        Objects.equals(this.clientSessionMaxLifespan, realmRepresentation.clientSessionMaxLifespan) &&
        Objects.equals(this.clients, realmRepresentation.clients) &&
        Objects.equals(this.components, realmRepresentation.components) &&
        Objects.equals(this.defaultDefaultClientScopes, realmRepresentation.defaultDefaultClientScopes) &&
        Objects.equals(this.defaultGroups, realmRepresentation.defaultGroups) &&
        Objects.equals(this.defaultLocale, realmRepresentation.defaultLocale) &&
        Objects.equals(this.defaultOptionalClientScopes, realmRepresentation.defaultOptionalClientScopes) &&
        Objects.equals(this.defaultRole, realmRepresentation.defaultRole) &&
        Objects.equals(this.defaultSignatureAlgorithm, realmRepresentation.defaultSignatureAlgorithm) &&
        Objects.equals(this.directGrantFlow, realmRepresentation.directGrantFlow) &&
        Objects.equals(this.displayName, realmRepresentation.displayName) &&
        Objects.equals(this.displayNameHtml, realmRepresentation.displayNameHtml) &&
        Objects.equals(this.dockerAuthenticationFlow, realmRepresentation.dockerAuthenticationFlow) &&
        Objects.equals(this.duplicateEmailsAllowed, realmRepresentation.duplicateEmailsAllowed) &&
        Objects.equals(this.editUsernameAllowed, realmRepresentation.editUsernameAllowed) &&
        Objects.equals(this.emailTheme, realmRepresentation.emailTheme) &&
        Objects.equals(this.enabled, realmRepresentation.enabled) &&
        Objects.equals(this.enabledEventTypes, realmRepresentation.enabledEventTypes) &&
        Objects.equals(this.eventsEnabled, realmRepresentation.eventsEnabled) &&
        Objects.equals(this.eventsExpiration, realmRepresentation.eventsExpiration) &&
        Objects.equals(this.eventsListeners, realmRepresentation.eventsListeners) &&
        Objects.equals(this.failureFactor, realmRepresentation.failureFactor) &&
        Objects.equals(this.federatedUsers, realmRepresentation.federatedUsers) &&
        Objects.equals(this.groups, realmRepresentation.groups) &&
        Objects.equals(this.id, realmRepresentation.id) &&
        Objects.equals(this.identityProviderMappers, realmRepresentation.identityProviderMappers) &&
        Objects.equals(this.identityProviders, realmRepresentation.identityProviders) &&
        Objects.equals(this.internationalizationEnabled, realmRepresentation.internationalizationEnabled) &&
        Objects.equals(this.keycloakVersion, realmRepresentation.keycloakVersion) &&
        Objects.equals(this.loginTheme, realmRepresentation.loginTheme) &&
        Objects.equals(this.loginWithEmailAllowed, realmRepresentation.loginWithEmailAllowed) &&
        Objects.equals(this.maxDeltaTimeSeconds, realmRepresentation.maxDeltaTimeSeconds) &&
        Objects.equals(this.maxFailureWaitSeconds, realmRepresentation.maxFailureWaitSeconds) &&
        Objects.equals(this.minimumQuickLoginWaitSeconds, realmRepresentation.minimumQuickLoginWaitSeconds) &&
        Objects.equals(this.notBefore, realmRepresentation.notBefore) &&
        Objects.equals(this.oAuth2DeviceCodeLifespan, realmRepresentation.oAuth2DeviceCodeLifespan) &&
        Objects.equals(this.oAuth2DevicePollingInterval, realmRepresentation.oAuth2DevicePollingInterval) &&
        Objects.equals(this.oauth2DeviceCodeLifespan, realmRepresentation.oauth2DeviceCodeLifespan) &&
        Objects.equals(this.oauth2DevicePollingInterval, realmRepresentation.oauth2DevicePollingInterval) &&
        Objects.equals(this.offlineSessionIdleTimeout, realmRepresentation.offlineSessionIdleTimeout) &&
        Objects.equals(this.offlineSessionMaxLifespan, realmRepresentation.offlineSessionMaxLifespan) &&
        Objects.equals(this.offlineSessionMaxLifespanEnabled, realmRepresentation.offlineSessionMaxLifespanEnabled) &&
        Objects.equals(this.otpPolicyAlgorithm, realmRepresentation.otpPolicyAlgorithm) &&
        Objects.equals(this.otpPolicyCodeReusable, realmRepresentation.otpPolicyCodeReusable) &&
        Objects.equals(this.otpPolicyDigits, realmRepresentation.otpPolicyDigits) &&
        Objects.equals(this.otpPolicyInitialCounter, realmRepresentation.otpPolicyInitialCounter) &&
        Objects.equals(this.otpPolicyLookAheadWindow, realmRepresentation.otpPolicyLookAheadWindow) &&
        Objects.equals(this.otpPolicyPeriod, realmRepresentation.otpPolicyPeriod) &&
        Objects.equals(this.otpPolicyType, realmRepresentation.otpPolicyType) &&
        Objects.equals(this.otpSupportedApplications, realmRepresentation.otpSupportedApplications) &&
        Objects.equals(this.passwordPolicy, realmRepresentation.passwordPolicy) &&
        Objects.equals(this.permanentLockout, realmRepresentation.permanentLockout) &&
        Objects.equals(this.protocolMappers, realmRepresentation.protocolMappers) &&
        Objects.equals(this.quickLoginCheckMilliSeconds, realmRepresentation.quickLoginCheckMilliSeconds) &&
        Objects.equals(this.realm, realmRepresentation.realm) &&
        Objects.equals(this.refreshTokenMaxReuse, realmRepresentation.refreshTokenMaxReuse) &&
        Objects.equals(this.registrationAllowed, realmRepresentation.registrationAllowed) &&
        Objects.equals(this.registrationEmailAsUsername, realmRepresentation.registrationEmailAsUsername) &&
        Objects.equals(this.registrationFlow, realmRepresentation.registrationFlow) &&
        Objects.equals(this.rememberMe, realmRepresentation.rememberMe) &&
        Objects.equals(this.requiredActions, realmRepresentation.requiredActions) &&
        Objects.equals(this.resetCredentialsFlow, realmRepresentation.resetCredentialsFlow) &&
        Objects.equals(this.resetPasswordAllowed, realmRepresentation.resetPasswordAllowed) &&
        Objects.equals(this.revokeRefreshToken, realmRepresentation.revokeRefreshToken) &&
        Objects.equals(this.roles, realmRepresentation.roles) &&
        Objects.equals(this.scopeMappings, realmRepresentation.scopeMappings) &&
        Objects.equals(this.smtpServer, realmRepresentation.smtpServer) &&
        Objects.equals(this.sslRequired, realmRepresentation.sslRequired) &&
        Objects.equals(this.ssoSessionIdleTimeout, realmRepresentation.ssoSessionIdleTimeout) &&
        Objects.equals(this.ssoSessionIdleTimeoutRememberMe, realmRepresentation.ssoSessionIdleTimeoutRememberMe) &&
        Objects.equals(this.ssoSessionMaxLifespan, realmRepresentation.ssoSessionMaxLifespan) &&
        Objects.equals(this.ssoSessionMaxLifespanRememberMe, realmRepresentation.ssoSessionMaxLifespanRememberMe) &&
        Objects.equals(this.supportedLocales, realmRepresentation.supportedLocales) &&
        Objects.equals(this.userFederationMappers, realmRepresentation.userFederationMappers) &&
        Objects.equals(this.userFederationProviders, realmRepresentation.userFederationProviders) &&
        Objects.equals(this.userManagedAccessAllowed, realmRepresentation.userManagedAccessAllowed) &&
        Objects.equals(this.users, realmRepresentation.users) &&
        Objects.equals(this.verifyEmail, realmRepresentation.verifyEmail) &&
        Objects.equals(this.waitIncrementSeconds, realmRepresentation.waitIncrementSeconds) &&
        Objects.equals(this.webAuthnPolicyAcceptableAaguids, realmRepresentation.webAuthnPolicyAcceptableAaguids) &&
        Objects.equals(this.webAuthnPolicyAttestationConveyancePreference, realmRepresentation.webAuthnPolicyAttestationConveyancePreference) &&
        Objects.equals(this.webAuthnPolicyAuthenticatorAttachment, realmRepresentation.webAuthnPolicyAuthenticatorAttachment) &&
        Objects.equals(this.webAuthnPolicyAvoidSameAuthenticatorRegister, realmRepresentation.webAuthnPolicyAvoidSameAuthenticatorRegister) &&
        Objects.equals(this.webAuthnPolicyCreateTimeout, realmRepresentation.webAuthnPolicyCreateTimeout) &&
        Objects.equals(this.webAuthnPolicyPasswordlessAcceptableAaguids, realmRepresentation.webAuthnPolicyPasswordlessAcceptableAaguids) &&
        Objects.equals(this.webAuthnPolicyPasswordlessAttestationConveyancePreference, realmRepresentation.webAuthnPolicyPasswordlessAttestationConveyancePreference) &&
        Objects.equals(this.webAuthnPolicyPasswordlessAuthenticatorAttachment, realmRepresentation.webAuthnPolicyPasswordlessAuthenticatorAttachment) &&
        Objects.equals(this.webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister, realmRepresentation.webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister) &&
        Objects.equals(this.webAuthnPolicyPasswordlessCreateTimeout, realmRepresentation.webAuthnPolicyPasswordlessCreateTimeout) &&
        Objects.equals(this.webAuthnPolicyPasswordlessRequireResidentKey, realmRepresentation.webAuthnPolicyPasswordlessRequireResidentKey) &&
        Objects.equals(this.webAuthnPolicyPasswordlessRpEntityName, realmRepresentation.webAuthnPolicyPasswordlessRpEntityName) &&
        Objects.equals(this.webAuthnPolicyPasswordlessRpId, realmRepresentation.webAuthnPolicyPasswordlessRpId) &&
        Objects.equals(this.webAuthnPolicyPasswordlessSignatureAlgorithms, realmRepresentation.webAuthnPolicyPasswordlessSignatureAlgorithms) &&
        Objects.equals(this.webAuthnPolicyPasswordlessUserVerificationRequirement, realmRepresentation.webAuthnPolicyPasswordlessUserVerificationRequirement) &&
        Objects.equals(this.webAuthnPolicyRequireResidentKey, realmRepresentation.webAuthnPolicyRequireResidentKey) &&
        Objects.equals(this.webAuthnPolicyRpEntityName, realmRepresentation.webAuthnPolicyRpEntityName) &&
        Objects.equals(this.webAuthnPolicyRpId, realmRepresentation.webAuthnPolicyRpId) &&
        Objects.equals(this.webAuthnPolicySignatureAlgorithms, realmRepresentation.webAuthnPolicySignatureAlgorithms) &&
        Objects.equals(this.webAuthnPolicyUserVerificationRequirement, realmRepresentation.webAuthnPolicyUserVerificationRequirement);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accessCodeLifespan, accessCodeLifespanLogin, accessCodeLifespanUserAction, accessTokenLifespan, accessTokenLifespanForImplicitFlow, accountTheme, actionTokenGeneratedByAdminLifespan, actionTokenGeneratedByUserLifespan, adminEventsDetailsEnabled, adminEventsEnabled, adminTheme, attributes, authenticationFlows, authenticatorConfig, browserFlow, browserSecurityHeaders, bruteForceProtected, clientAuthenticationFlow, clientOfflineSessionIdleTimeout, clientOfflineSessionMaxLifespan, clientPolicies, clientProfiles, clientScopeMappings, clientScopes, clientSessionIdleTimeout, clientSessionMaxLifespan, clients, components, defaultDefaultClientScopes, defaultGroups, defaultLocale, defaultOptionalClientScopes, defaultRole, defaultSignatureAlgorithm, directGrantFlow, displayName, displayNameHtml, dockerAuthenticationFlow, duplicateEmailsAllowed, editUsernameAllowed, emailTheme, enabled, enabledEventTypes, eventsEnabled, eventsExpiration, eventsListeners, failureFactor, federatedUsers, groups, id, identityProviderMappers, identityProviders, internationalizationEnabled, keycloakVersion, loginTheme, loginWithEmailAllowed, maxDeltaTimeSeconds, maxFailureWaitSeconds, minimumQuickLoginWaitSeconds, notBefore, oAuth2DeviceCodeLifespan, oAuth2DevicePollingInterval, oauth2DeviceCodeLifespan, oauth2DevicePollingInterval, offlineSessionIdleTimeout, offlineSessionMaxLifespan, offlineSessionMaxLifespanEnabled, otpPolicyAlgorithm, otpPolicyCodeReusable, otpPolicyDigits, otpPolicyInitialCounter, otpPolicyLookAheadWindow, otpPolicyPeriod, otpPolicyType, otpSupportedApplications, passwordPolicy, permanentLockout, protocolMappers, quickLoginCheckMilliSeconds, realm, refreshTokenMaxReuse, registrationAllowed, registrationEmailAsUsername, registrationFlow, rememberMe, requiredActions, resetCredentialsFlow, resetPasswordAllowed, revokeRefreshToken, roles, scopeMappings, smtpServer, sslRequired, ssoSessionIdleTimeout, ssoSessionIdleTimeoutRememberMe, ssoSessionMaxLifespan, ssoSessionMaxLifespanRememberMe, supportedLocales, userFederationMappers, userFederationProviders, userManagedAccessAllowed, users, verifyEmail, waitIncrementSeconds, webAuthnPolicyAcceptableAaguids, webAuthnPolicyAttestationConveyancePreference, webAuthnPolicyAuthenticatorAttachment, webAuthnPolicyAvoidSameAuthenticatorRegister, webAuthnPolicyCreateTimeout, webAuthnPolicyPasswordlessAcceptableAaguids, webAuthnPolicyPasswordlessAttestationConveyancePreference, webAuthnPolicyPasswordlessAuthenticatorAttachment, webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister, webAuthnPolicyPasswordlessCreateTimeout, webAuthnPolicyPasswordlessRequireResidentKey, webAuthnPolicyPasswordlessRpEntityName, webAuthnPolicyPasswordlessRpId, webAuthnPolicyPasswordlessSignatureAlgorithms, webAuthnPolicyPasswordlessUserVerificationRequirement, webAuthnPolicyRequireResidentKey, webAuthnPolicyRpEntityName, webAuthnPolicyRpId, webAuthnPolicySignatureAlgorithms, webAuthnPolicyUserVerificationRequirement);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RealmRepresentationDto {\n");
    sb.append("    accessCodeLifespan: ").append(toIndentedString(accessCodeLifespan)).append("\n");
    sb.append("    accessCodeLifespanLogin: ").append(toIndentedString(accessCodeLifespanLogin)).append("\n");
    sb.append("    accessCodeLifespanUserAction: ").append(toIndentedString(accessCodeLifespanUserAction)).append("\n");
    sb.append("    accessTokenLifespan: ").append(toIndentedString(accessTokenLifespan)).append("\n");
    sb.append("    accessTokenLifespanForImplicitFlow: ").append(toIndentedString(accessTokenLifespanForImplicitFlow)).append("\n");
    sb.append("    accountTheme: ").append(toIndentedString(accountTheme)).append("\n");
    sb.append("    actionTokenGeneratedByAdminLifespan: ").append(toIndentedString(actionTokenGeneratedByAdminLifespan)).append("\n");
    sb.append("    actionTokenGeneratedByUserLifespan: ").append(toIndentedString(actionTokenGeneratedByUserLifespan)).append("\n");
    sb.append("    adminEventsDetailsEnabled: ").append(toIndentedString(adminEventsDetailsEnabled)).append("\n");
    sb.append("    adminEventsEnabled: ").append(toIndentedString(adminEventsEnabled)).append("\n");
    sb.append("    adminTheme: ").append(toIndentedString(adminTheme)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    authenticationFlows: ").append(toIndentedString(authenticationFlows)).append("\n");
    sb.append("    authenticatorConfig: ").append(toIndentedString(authenticatorConfig)).append("\n");
    sb.append("    browserFlow: ").append(toIndentedString(browserFlow)).append("\n");
    sb.append("    browserSecurityHeaders: ").append(toIndentedString(browserSecurityHeaders)).append("\n");
    sb.append("    bruteForceProtected: ").append(toIndentedString(bruteForceProtected)).append("\n");
    sb.append("    clientAuthenticationFlow: ").append(toIndentedString(clientAuthenticationFlow)).append("\n");
    sb.append("    clientOfflineSessionIdleTimeout: ").append(toIndentedString(clientOfflineSessionIdleTimeout)).append("\n");
    sb.append("    clientOfflineSessionMaxLifespan: ").append(toIndentedString(clientOfflineSessionMaxLifespan)).append("\n");
    sb.append("    clientPolicies: ").append(toIndentedString(clientPolicies)).append("\n");
    sb.append("    clientProfiles: ").append(toIndentedString(clientProfiles)).append("\n");
    sb.append("    clientScopeMappings: ").append(toIndentedString(clientScopeMappings)).append("\n");
    sb.append("    clientScopes: ").append(toIndentedString(clientScopes)).append("\n");
    sb.append("    clientSessionIdleTimeout: ").append(toIndentedString(clientSessionIdleTimeout)).append("\n");
    sb.append("    clientSessionMaxLifespan: ").append(toIndentedString(clientSessionMaxLifespan)).append("\n");
    sb.append("    clients: ").append(toIndentedString(clients)).append("\n");
    sb.append("    components: ").append(toIndentedString(components)).append("\n");
    sb.append("    defaultDefaultClientScopes: ").append(toIndentedString(defaultDefaultClientScopes)).append("\n");
    sb.append("    defaultGroups: ").append(toIndentedString(defaultGroups)).append("\n");
    sb.append("    defaultLocale: ").append(toIndentedString(defaultLocale)).append("\n");
    sb.append("    defaultOptionalClientScopes: ").append(toIndentedString(defaultOptionalClientScopes)).append("\n");
    sb.append("    defaultRole: ").append(toIndentedString(defaultRole)).append("\n");
    sb.append("    defaultSignatureAlgorithm: ").append(toIndentedString(defaultSignatureAlgorithm)).append("\n");
    sb.append("    directGrantFlow: ").append(toIndentedString(directGrantFlow)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    displayNameHtml: ").append(toIndentedString(displayNameHtml)).append("\n");
    sb.append("    dockerAuthenticationFlow: ").append(toIndentedString(dockerAuthenticationFlow)).append("\n");
    sb.append("    duplicateEmailsAllowed: ").append(toIndentedString(duplicateEmailsAllowed)).append("\n");
    sb.append("    editUsernameAllowed: ").append(toIndentedString(editUsernameAllowed)).append("\n");
    sb.append("    emailTheme: ").append(toIndentedString(emailTheme)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    enabledEventTypes: ").append(toIndentedString(enabledEventTypes)).append("\n");
    sb.append("    eventsEnabled: ").append(toIndentedString(eventsEnabled)).append("\n");
    sb.append("    eventsExpiration: ").append(toIndentedString(eventsExpiration)).append("\n");
    sb.append("    eventsListeners: ").append(toIndentedString(eventsListeners)).append("\n");
    sb.append("    failureFactor: ").append(toIndentedString(failureFactor)).append("\n");
    sb.append("    federatedUsers: ").append(toIndentedString(federatedUsers)).append("\n");
    sb.append("    groups: ").append(toIndentedString(groups)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    identityProviderMappers: ").append(toIndentedString(identityProviderMappers)).append("\n");
    sb.append("    identityProviders: ").append(toIndentedString(identityProviders)).append("\n");
    sb.append("    internationalizationEnabled: ").append(toIndentedString(internationalizationEnabled)).append("\n");
    sb.append("    keycloakVersion: ").append(toIndentedString(keycloakVersion)).append("\n");
    sb.append("    loginTheme: ").append(toIndentedString(loginTheme)).append("\n");
    sb.append("    loginWithEmailAllowed: ").append(toIndentedString(loginWithEmailAllowed)).append("\n");
    sb.append("    maxDeltaTimeSeconds: ").append(toIndentedString(maxDeltaTimeSeconds)).append("\n");
    sb.append("    maxFailureWaitSeconds: ").append(toIndentedString(maxFailureWaitSeconds)).append("\n");
    sb.append("    minimumQuickLoginWaitSeconds: ").append(toIndentedString(minimumQuickLoginWaitSeconds)).append("\n");
    sb.append("    notBefore: ").append(toIndentedString(notBefore)).append("\n");
    sb.append("    oAuth2DeviceCodeLifespan: ").append(toIndentedString(oAuth2DeviceCodeLifespan)).append("\n");
    sb.append("    oAuth2DevicePollingInterval: ").append(toIndentedString(oAuth2DevicePollingInterval)).append("\n");
    sb.append("    oauth2DeviceCodeLifespan: ").append(toIndentedString(oauth2DeviceCodeLifespan)).append("\n");
    sb.append("    oauth2DevicePollingInterval: ").append(toIndentedString(oauth2DevicePollingInterval)).append("\n");
    sb.append("    offlineSessionIdleTimeout: ").append(toIndentedString(offlineSessionIdleTimeout)).append("\n");
    sb.append("    offlineSessionMaxLifespan: ").append(toIndentedString(offlineSessionMaxLifespan)).append("\n");
    sb.append("    offlineSessionMaxLifespanEnabled: ").append(toIndentedString(offlineSessionMaxLifespanEnabled)).append("\n");
    sb.append("    otpPolicyAlgorithm: ").append(toIndentedString(otpPolicyAlgorithm)).append("\n");
    sb.append("    otpPolicyCodeReusable: ").append(toIndentedString(otpPolicyCodeReusable)).append("\n");
    sb.append("    otpPolicyDigits: ").append(toIndentedString(otpPolicyDigits)).append("\n");
    sb.append("    otpPolicyInitialCounter: ").append(toIndentedString(otpPolicyInitialCounter)).append("\n");
    sb.append("    otpPolicyLookAheadWindow: ").append(toIndentedString(otpPolicyLookAheadWindow)).append("\n");
    sb.append("    otpPolicyPeriod: ").append(toIndentedString(otpPolicyPeriod)).append("\n");
    sb.append("    otpPolicyType: ").append(toIndentedString(otpPolicyType)).append("\n");
    sb.append("    otpSupportedApplications: ").append(toIndentedString(otpSupportedApplications)).append("\n");
    sb.append("    passwordPolicy: ").append(toIndentedString(passwordPolicy)).append("\n");
    sb.append("    permanentLockout: ").append(toIndentedString(permanentLockout)).append("\n");
    sb.append("    protocolMappers: ").append(toIndentedString(protocolMappers)).append("\n");
    sb.append("    quickLoginCheckMilliSeconds: ").append(toIndentedString(quickLoginCheckMilliSeconds)).append("\n");
    sb.append("    realm: ").append(toIndentedString(realm)).append("\n");
    sb.append("    refreshTokenMaxReuse: ").append(toIndentedString(refreshTokenMaxReuse)).append("\n");
    sb.append("    registrationAllowed: ").append(toIndentedString(registrationAllowed)).append("\n");
    sb.append("    registrationEmailAsUsername: ").append(toIndentedString(registrationEmailAsUsername)).append("\n");
    sb.append("    registrationFlow: ").append(toIndentedString(registrationFlow)).append("\n");
    sb.append("    rememberMe: ").append(toIndentedString(rememberMe)).append("\n");
    sb.append("    requiredActions: ").append(toIndentedString(requiredActions)).append("\n");
    sb.append("    resetCredentialsFlow: ").append(toIndentedString(resetCredentialsFlow)).append("\n");
    sb.append("    resetPasswordAllowed: ").append(toIndentedString(resetPasswordAllowed)).append("\n");
    sb.append("    revokeRefreshToken: ").append(toIndentedString(revokeRefreshToken)).append("\n");
    sb.append("    roles: ").append(toIndentedString(roles)).append("\n");
    sb.append("    scopeMappings: ").append(toIndentedString(scopeMappings)).append("\n");
    sb.append("    smtpServer: ").append(toIndentedString(smtpServer)).append("\n");
    sb.append("    sslRequired: ").append(toIndentedString(sslRequired)).append("\n");
    sb.append("    ssoSessionIdleTimeout: ").append(toIndentedString(ssoSessionIdleTimeout)).append("\n");
    sb.append("    ssoSessionIdleTimeoutRememberMe: ").append(toIndentedString(ssoSessionIdleTimeoutRememberMe)).append("\n");
    sb.append("    ssoSessionMaxLifespan: ").append(toIndentedString(ssoSessionMaxLifespan)).append("\n");
    sb.append("    ssoSessionMaxLifespanRememberMe: ").append(toIndentedString(ssoSessionMaxLifespanRememberMe)).append("\n");
    sb.append("    supportedLocales: ").append(toIndentedString(supportedLocales)).append("\n");
    sb.append("    userFederationMappers: ").append(toIndentedString(userFederationMappers)).append("\n");
    sb.append("    userFederationProviders: ").append(toIndentedString(userFederationProviders)).append("\n");
    sb.append("    userManagedAccessAllowed: ").append(toIndentedString(userManagedAccessAllowed)).append("\n");
    sb.append("    users: ").append(toIndentedString(users)).append("\n");
    sb.append("    verifyEmail: ").append(toIndentedString(verifyEmail)).append("\n");
    sb.append("    waitIncrementSeconds: ").append(toIndentedString(waitIncrementSeconds)).append("\n");
    sb.append("    webAuthnPolicyAcceptableAaguids: ").append(toIndentedString(webAuthnPolicyAcceptableAaguids)).append("\n");
    sb.append("    webAuthnPolicyAttestationConveyancePreference: ").append(toIndentedString(webAuthnPolicyAttestationConveyancePreference)).append("\n");
    sb.append("    webAuthnPolicyAuthenticatorAttachment: ").append(toIndentedString(webAuthnPolicyAuthenticatorAttachment)).append("\n");
    sb.append("    webAuthnPolicyAvoidSameAuthenticatorRegister: ").append(toIndentedString(webAuthnPolicyAvoidSameAuthenticatorRegister)).append("\n");
    sb.append("    webAuthnPolicyCreateTimeout: ").append(toIndentedString(webAuthnPolicyCreateTimeout)).append("\n");
    sb.append("    webAuthnPolicyPasswordlessAcceptableAaguids: ").append(toIndentedString(webAuthnPolicyPasswordlessAcceptableAaguids)).append("\n");
    sb.append("    webAuthnPolicyPasswordlessAttestationConveyancePreference: ").append(toIndentedString(webAuthnPolicyPasswordlessAttestationConveyancePreference)).append("\n");
    sb.append("    webAuthnPolicyPasswordlessAuthenticatorAttachment: ").append(toIndentedString(webAuthnPolicyPasswordlessAuthenticatorAttachment)).append("\n");
    sb.append("    webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister: ").append(toIndentedString(webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister)).append("\n");
    sb.append("    webAuthnPolicyPasswordlessCreateTimeout: ").append(toIndentedString(webAuthnPolicyPasswordlessCreateTimeout)).append("\n");
    sb.append("    webAuthnPolicyPasswordlessRequireResidentKey: ").append(toIndentedString(webAuthnPolicyPasswordlessRequireResidentKey)).append("\n");
    sb.append("    webAuthnPolicyPasswordlessRpEntityName: ").append(toIndentedString(webAuthnPolicyPasswordlessRpEntityName)).append("\n");
    sb.append("    webAuthnPolicyPasswordlessRpId: ").append(toIndentedString(webAuthnPolicyPasswordlessRpId)).append("\n");
    sb.append("    webAuthnPolicyPasswordlessSignatureAlgorithms: ").append(toIndentedString(webAuthnPolicyPasswordlessSignatureAlgorithms)).append("\n");
    sb.append("    webAuthnPolicyPasswordlessUserVerificationRequirement: ").append(toIndentedString(webAuthnPolicyPasswordlessUserVerificationRequirement)).append("\n");
    sb.append("    webAuthnPolicyRequireResidentKey: ").append(toIndentedString(webAuthnPolicyRequireResidentKey)).append("\n");
    sb.append("    webAuthnPolicyRpEntityName: ").append(toIndentedString(webAuthnPolicyRpEntityName)).append("\n");
    sb.append("    webAuthnPolicyRpId: ").append(toIndentedString(webAuthnPolicyRpId)).append("\n");
    sb.append("    webAuthnPolicySignatureAlgorithms: ").append(toIndentedString(webAuthnPolicySignatureAlgorithms)).append("\n");
    sb.append("    webAuthnPolicyUserVerificationRequirement: ").append(toIndentedString(webAuthnPolicyUserVerificationRequirement)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

