/*
 * ${product.name.full} Admin REST API
 * This is a REST API reference for the ${product.name.full} Admin REST API.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package dev.mbo.keycloak.admin.api.dto;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;

/**
 * KeyStoreConfigDto
 */
@JsonPropertyOrder({
  KeyStoreConfigDto.JSON_PROPERTY_FORMAT,
  KeyStoreConfigDto.JSON_PROPERTY_KEY_ALIAS,
  KeyStoreConfigDto.JSON_PROPERTY_KEY_PASSWORD,
  KeyStoreConfigDto.JSON_PROPERTY_REALM_ALIAS,
  KeyStoreConfigDto.JSON_PROPERTY_REALM_CERTIFICATE,
  KeyStoreConfigDto.JSON_PROPERTY_STORE_PASSWORD
})
@JsonTypeName("KeyStoreConfig")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class KeyStoreConfigDto {
  public static final String JSON_PROPERTY_FORMAT = "format";
  private String format;

  public static final String JSON_PROPERTY_KEY_ALIAS = "keyAlias";
  private String keyAlias;

  public static final String JSON_PROPERTY_KEY_PASSWORD = "keyPassword";
  private String keyPassword;

  public static final String JSON_PROPERTY_REALM_ALIAS = "realmAlias";
  private String realmAlias;

  public static final String JSON_PROPERTY_REALM_CERTIFICATE = "realmCertificate";
  private Boolean realmCertificate;

  public static final String JSON_PROPERTY_STORE_PASSWORD = "storePassword";
  private String storePassword;

  public KeyStoreConfigDto() {
  }

  public KeyStoreConfigDto format(String format) {
    
    this.format = format;
    return this;
  }

   /**
   * Get format
   * @return format
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_FORMAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFormat() {
    return format;
  }


  @JsonProperty(JSON_PROPERTY_FORMAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFormat(String format) {
    this.format = format;
  }


  public KeyStoreConfigDto keyAlias(String keyAlias) {
    
    this.keyAlias = keyAlias;
    return this;
  }

   /**
   * Get keyAlias
   * @return keyAlias
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_KEY_ALIAS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getKeyAlias() {
    return keyAlias;
  }


  @JsonProperty(JSON_PROPERTY_KEY_ALIAS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setKeyAlias(String keyAlias) {
    this.keyAlias = keyAlias;
  }


  public KeyStoreConfigDto keyPassword(String keyPassword) {
    
    this.keyPassword = keyPassword;
    return this;
  }

   /**
   * Get keyPassword
   * @return keyPassword
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_KEY_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getKeyPassword() {
    return keyPassword;
  }


  @JsonProperty(JSON_PROPERTY_KEY_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setKeyPassword(String keyPassword) {
    this.keyPassword = keyPassword;
  }


  public KeyStoreConfigDto realmAlias(String realmAlias) {
    
    this.realmAlias = realmAlias;
    return this;
  }

   /**
   * Get realmAlias
   * @return realmAlias
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_REALM_ALIAS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRealmAlias() {
    return realmAlias;
  }


  @JsonProperty(JSON_PROPERTY_REALM_ALIAS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRealmAlias(String realmAlias) {
    this.realmAlias = realmAlias;
  }


  public KeyStoreConfigDto realmCertificate(Boolean realmCertificate) {
    
    this.realmCertificate = realmCertificate;
    return this;
  }

   /**
   * Get realmCertificate
   * @return realmCertificate
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_REALM_CERTIFICATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getRealmCertificate() {
    return realmCertificate;
  }


  @JsonProperty(JSON_PROPERTY_REALM_CERTIFICATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRealmCertificate(Boolean realmCertificate) {
    this.realmCertificate = realmCertificate;
  }


  public KeyStoreConfigDto storePassword(String storePassword) {
    
    this.storePassword = storePassword;
    return this;
  }

   /**
   * Get storePassword
   * @return storePassword
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_STORE_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStorePassword() {
    return storePassword;
  }


  @JsonProperty(JSON_PROPERTY_STORE_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStorePassword(String storePassword) {
    this.storePassword = storePassword;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    KeyStoreConfigDto keyStoreConfig = (KeyStoreConfigDto) o;
    return Objects.equals(this.format, keyStoreConfig.format) &&
        Objects.equals(this.keyAlias, keyStoreConfig.keyAlias) &&
        Objects.equals(this.keyPassword, keyStoreConfig.keyPassword) &&
        Objects.equals(this.realmAlias, keyStoreConfig.realmAlias) &&
        Objects.equals(this.realmCertificate, keyStoreConfig.realmCertificate) &&
        Objects.equals(this.storePassword, keyStoreConfig.storePassword);
  }

  @Override
  public int hashCode() {
    return Objects.hash(format, keyAlias, keyPassword, realmAlias, realmCertificate, storePassword);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class KeyStoreConfigDto {\n");
    sb.append("    format: ").append(toIndentedString(format)).append("\n");
    sb.append("    keyAlias: ").append(toIndentedString(keyAlias)).append("\n");
    sb.append("    keyPassword: ").append(toIndentedString(keyPassword)).append("\n");
    sb.append("    realmAlias: ").append(toIndentedString(realmAlias)).append("\n");
    sb.append("    realmCertificate: ").append(toIndentedString(realmCertificate)).append("\n");
    sb.append("    storePassword: ").append(toIndentedString(storePassword)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

