/*
 * ${product.name.full} Admin REST API
 * This is a REST API reference for the ${product.name.full} Admin REST API.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package dev.mbo.keycloak.admin.api.dto;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;

/**
 * ProfileInfoRepresentationDto
 */
@JsonPropertyOrder({
  ProfileInfoRepresentationDto.JSON_PROPERTY_DISABLED_FEATURES,
  ProfileInfoRepresentationDto.JSON_PROPERTY_EXPERIMENTAL_FEATURES,
  ProfileInfoRepresentationDto.JSON_PROPERTY_NAME,
  ProfileInfoRepresentationDto.JSON_PROPERTY_PREVIEW_FEATURES
})
@JsonTypeName("ProfileInfoRepresentation")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ProfileInfoRepresentationDto {
  public static final String JSON_PROPERTY_DISABLED_FEATURES = "disabledFeatures";
  private List<String> disabledFeatures = null;

  public static final String JSON_PROPERTY_EXPERIMENTAL_FEATURES = "experimentalFeatures";
  private List<String> experimentalFeatures = null;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_PREVIEW_FEATURES = "previewFeatures";
  private List<String> previewFeatures = null;

  public ProfileInfoRepresentationDto() {
  }

  public ProfileInfoRepresentationDto disabledFeatures(List<String> disabledFeatures) {
    
    this.disabledFeatures = disabledFeatures;
    return this;
  }

  public ProfileInfoRepresentationDto addDisabledFeaturesItem(String disabledFeaturesItem) {
    if (this.disabledFeatures == null) {
      this.disabledFeatures = new ArrayList<>();
    }
    this.disabledFeatures.add(disabledFeaturesItem);
    return this;
  }

   /**
   * Get disabledFeatures
   * @return disabledFeatures
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_DISABLED_FEATURES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getDisabledFeatures() {
    return disabledFeatures;
  }


  @JsonProperty(JSON_PROPERTY_DISABLED_FEATURES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDisabledFeatures(List<String> disabledFeatures) {
    this.disabledFeatures = disabledFeatures;
  }


  public ProfileInfoRepresentationDto experimentalFeatures(List<String> experimentalFeatures) {
    
    this.experimentalFeatures = experimentalFeatures;
    return this;
  }

  public ProfileInfoRepresentationDto addExperimentalFeaturesItem(String experimentalFeaturesItem) {
    if (this.experimentalFeatures == null) {
      this.experimentalFeatures = new ArrayList<>();
    }
    this.experimentalFeatures.add(experimentalFeaturesItem);
    return this;
  }

   /**
   * Get experimentalFeatures
   * @return experimentalFeatures
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_EXPERIMENTAL_FEATURES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getExperimentalFeatures() {
    return experimentalFeatures;
  }


  @JsonProperty(JSON_PROPERTY_EXPERIMENTAL_FEATURES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExperimentalFeatures(List<String> experimentalFeatures) {
    this.experimentalFeatures = experimentalFeatures;
  }


  public ProfileInfoRepresentationDto name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public ProfileInfoRepresentationDto previewFeatures(List<String> previewFeatures) {
    
    this.previewFeatures = previewFeatures;
    return this;
  }

  public ProfileInfoRepresentationDto addPreviewFeaturesItem(String previewFeaturesItem) {
    if (this.previewFeatures == null) {
      this.previewFeatures = new ArrayList<>();
    }
    this.previewFeatures.add(previewFeaturesItem);
    return this;
  }

   /**
   * Get previewFeatures
   * @return previewFeatures
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_PREVIEW_FEATURES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getPreviewFeatures() {
    return previewFeatures;
  }


  @JsonProperty(JSON_PROPERTY_PREVIEW_FEATURES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPreviewFeatures(List<String> previewFeatures) {
    this.previewFeatures = previewFeatures;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProfileInfoRepresentationDto profileInfoRepresentation = (ProfileInfoRepresentationDto) o;
    return Objects.equals(this.disabledFeatures, profileInfoRepresentation.disabledFeatures) &&
        Objects.equals(this.experimentalFeatures, profileInfoRepresentation.experimentalFeatures) &&
        Objects.equals(this.name, profileInfoRepresentation.name) &&
        Objects.equals(this.previewFeatures, profileInfoRepresentation.previewFeatures);
  }

  @Override
  public int hashCode() {
    return Objects.hash(disabledFeatures, experimentalFeatures, name, previewFeatures);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProfileInfoRepresentationDto {\n");
    sb.append("    disabledFeatures: ").append(toIndentedString(disabledFeatures)).append("\n");
    sb.append("    experimentalFeatures: ").append(toIndentedString(experimentalFeatures)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    previewFeatures: ").append(toIndentedString(previewFeatures)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

