/*
 * ${product.name.full} Admin REST API
 * This is a REST API reference for the ${product.name.full} Admin REST API.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package dev.mbo.keycloak.admin.api.dto;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import dev.mbo.keycloak.admin.api.dto.CredentialRepresentationDto;
import dev.mbo.keycloak.admin.api.dto.FederatedIdentityRepresentationDto;
import dev.mbo.keycloak.admin.api.dto.UserConsentRepresentationDto;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;

/**
 * UserRepresentationDto
 */
@JsonPropertyOrder({
  UserRepresentationDto.JSON_PROPERTY_ACCESS,
  UserRepresentationDto.JSON_PROPERTY_ATTRIBUTES,
  UserRepresentationDto.JSON_PROPERTY_CLIENT_CONSENTS,
  UserRepresentationDto.JSON_PROPERTY_CLIENT_ROLES,
  UserRepresentationDto.JSON_PROPERTY_CREATED_TIMESTAMP,
  UserRepresentationDto.JSON_PROPERTY_CREDENTIALS,
  UserRepresentationDto.JSON_PROPERTY_DISABLEABLE_CREDENTIAL_TYPES,
  UserRepresentationDto.JSON_PROPERTY_EMAIL,
  UserRepresentationDto.JSON_PROPERTY_EMAIL_VERIFIED,
  UserRepresentationDto.JSON_PROPERTY_ENABLED,
  UserRepresentationDto.JSON_PROPERTY_FEDERATED_IDENTITIES,
  UserRepresentationDto.JSON_PROPERTY_FEDERATION_LINK,
  UserRepresentationDto.JSON_PROPERTY_FIRST_NAME,
  UserRepresentationDto.JSON_PROPERTY_GROUPS,
  UserRepresentationDto.JSON_PROPERTY_ID,
  UserRepresentationDto.JSON_PROPERTY_LAST_NAME,
  UserRepresentationDto.JSON_PROPERTY_NOT_BEFORE,
  UserRepresentationDto.JSON_PROPERTY_ORIGIN,
  UserRepresentationDto.JSON_PROPERTY_REALM_ROLES,
  UserRepresentationDto.JSON_PROPERTY_REQUIRED_ACTIONS,
  UserRepresentationDto.JSON_PROPERTY_SELF,
  UserRepresentationDto.JSON_PROPERTY_SERVICE_ACCOUNT_CLIENT_ID,
  UserRepresentationDto.JSON_PROPERTY_USERNAME
})
@JsonTypeName("UserRepresentation")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class UserRepresentationDto {
  public static final String JSON_PROPERTY_ACCESS = "access";
  private Map<String, Object> access = null;

  public static final String JSON_PROPERTY_ATTRIBUTES = "attributes";
  private Map<String, Object> attributes = null;

  public static final String JSON_PROPERTY_CLIENT_CONSENTS = "clientConsents";
  private List<UserConsentRepresentationDto> clientConsents = null;

  public static final String JSON_PROPERTY_CLIENT_ROLES = "clientRoles";
  private Map<String, Object> clientRoles = null;

  public static final String JSON_PROPERTY_CREATED_TIMESTAMP = "createdTimestamp";
  private Long createdTimestamp;

  public static final String JSON_PROPERTY_CREDENTIALS = "credentials";
  private List<CredentialRepresentationDto> credentials = null;

  public static final String JSON_PROPERTY_DISABLEABLE_CREDENTIAL_TYPES = "disableableCredentialTypes";
  private List<String> disableableCredentialTypes = null;

  public static final String JSON_PROPERTY_EMAIL = "email";
  private String email;

  public static final String JSON_PROPERTY_EMAIL_VERIFIED = "emailVerified";
  private Boolean emailVerified;

  public static final String JSON_PROPERTY_ENABLED = "enabled";
  private Boolean enabled;

  public static final String JSON_PROPERTY_FEDERATED_IDENTITIES = "federatedIdentities";
  private List<FederatedIdentityRepresentationDto> federatedIdentities = null;

  public static final String JSON_PROPERTY_FEDERATION_LINK = "federationLink";
  private String federationLink;

  public static final String JSON_PROPERTY_FIRST_NAME = "firstName";
  private String firstName;

  public static final String JSON_PROPERTY_GROUPS = "groups";
  private List<String> groups = null;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_LAST_NAME = "lastName";
  private String lastName;

  public static final String JSON_PROPERTY_NOT_BEFORE = "notBefore";
  private Integer notBefore;

  public static final String JSON_PROPERTY_ORIGIN = "origin";
  private String origin;

  public static final String JSON_PROPERTY_REALM_ROLES = "realmRoles";
  private List<String> realmRoles = null;

  public static final String JSON_PROPERTY_REQUIRED_ACTIONS = "requiredActions";
  private List<String> requiredActions = null;

  public static final String JSON_PROPERTY_SELF = "self";
  private String self;

  public static final String JSON_PROPERTY_SERVICE_ACCOUNT_CLIENT_ID = "serviceAccountClientId";
  private String serviceAccountClientId;

  public static final String JSON_PROPERTY_USERNAME = "username";
  private String username;

  public UserRepresentationDto() {
  }

  public UserRepresentationDto access(Map<String, Object> access) {
    
    this.access = access;
    return this;
  }

  public UserRepresentationDto putAccessItem(String key, Object accessItem) {
    if (this.access == null) {
      this.access = new HashMap<>();
    }
    this.access.put(key, accessItem);
    return this;
  }

   /**
   * Get access
   * @return access
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_ACCESS)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, Object> getAccess() {
    return access;
  }


  @JsonProperty(JSON_PROPERTY_ACCESS)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccess(Map<String, Object> access) {
    this.access = access;
  }


  public UserRepresentationDto attributes(Map<String, Object> attributes) {
    
    this.attributes = attributes;
    return this;
  }

  public UserRepresentationDto putAttributesItem(String key, Object attributesItem) {
    if (this.attributes == null) {
      this.attributes = new HashMap<>();
    }
    this.attributes.put(key, attributesItem);
    return this;
  }

   /**
   * Get attributes
   * @return attributes
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_ATTRIBUTES)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, Object> getAttributes() {
    return attributes;
  }


  @JsonProperty(JSON_PROPERTY_ATTRIBUTES)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)
  public void setAttributes(Map<String, Object> attributes) {
    this.attributes = attributes;
  }


  public UserRepresentationDto clientConsents(List<UserConsentRepresentationDto> clientConsents) {
    
    this.clientConsents = clientConsents;
    return this;
  }

  public UserRepresentationDto addClientConsentsItem(UserConsentRepresentationDto clientConsentsItem) {
    if (this.clientConsents == null) {
      this.clientConsents = new ArrayList<>();
    }
    this.clientConsents.add(clientConsentsItem);
    return this;
  }

   /**
   * Get clientConsents
   * @return clientConsents
  **/
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_CLIENT_CONSENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UserConsentRepresentationDto> getClientConsents() {
    return clientConsents;
  }


  @JsonProperty(JSON_PROPERTY_CLIENT_CONSENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setClientConsents(List<UserConsentRepresentationDto> clientConsents) {
    this.clientConsents = clientConsents;
  }


  public UserRepresentationDto clientRoles(Map<String, Object> clientRoles) {
    
    this.clientRoles = clientRoles;
    return this;
  }

  public UserRepresentationDto putClientRolesItem(String key, Object clientRolesItem) {
    if (this.clientRoles == null) {
      this.clientRoles = new HashMap<>();
    }
    this.clientRoles.put(key, clientRolesItem);
    return this;
  }

   /**
   * Get clientRoles
   * @return clientRoles
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_CLIENT_ROLES)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, Object> getClientRoles() {
    return clientRoles;
  }


  @JsonProperty(JSON_PROPERTY_CLIENT_ROLES)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)
  public void setClientRoles(Map<String, Object> clientRoles) {
    this.clientRoles = clientRoles;
  }


  public UserRepresentationDto createdTimestamp(Long createdTimestamp) {
    
    this.createdTimestamp = createdTimestamp;
    return this;
  }

   /**
   * Get createdTimestamp
   * @return createdTimestamp
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_CREATED_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getCreatedTimestamp() {
    return createdTimestamp;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreatedTimestamp(Long createdTimestamp) {
    this.createdTimestamp = createdTimestamp;
  }


  public UserRepresentationDto credentials(List<CredentialRepresentationDto> credentials) {
    
    this.credentials = credentials;
    return this;
  }

  public UserRepresentationDto addCredentialsItem(CredentialRepresentationDto credentialsItem) {
    if (this.credentials == null) {
      this.credentials = new ArrayList<>();
    }
    this.credentials.add(credentialsItem);
    return this;
  }

   /**
   * Get credentials
   * @return credentials
  **/
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_CREDENTIALS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<CredentialRepresentationDto> getCredentials() {
    return credentials;
  }


  @JsonProperty(JSON_PROPERTY_CREDENTIALS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCredentials(List<CredentialRepresentationDto> credentials) {
    this.credentials = credentials;
  }


  public UserRepresentationDto disableableCredentialTypes(List<String> disableableCredentialTypes) {
    
    this.disableableCredentialTypes = disableableCredentialTypes;
    return this;
  }

  public UserRepresentationDto addDisableableCredentialTypesItem(String disableableCredentialTypesItem) {
    if (this.disableableCredentialTypes == null) {
      this.disableableCredentialTypes = new ArrayList<>();
    }
    this.disableableCredentialTypes.add(disableableCredentialTypesItem);
    return this;
  }

   /**
   * Get disableableCredentialTypes
   * @return disableableCredentialTypes
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_DISABLEABLE_CREDENTIAL_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getDisableableCredentialTypes() {
    return disableableCredentialTypes;
  }


  @JsonProperty(JSON_PROPERTY_DISABLEABLE_CREDENTIAL_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDisableableCredentialTypes(List<String> disableableCredentialTypes) {
    this.disableableCredentialTypes = disableableCredentialTypes;
  }


  public UserRepresentationDto email(String email) {
    
    this.email = email;
    return this;
  }

   /**
   * Get email
   * @return email
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEmail() {
    return email;
  }


  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEmail(String email) {
    this.email = email;
  }


  public UserRepresentationDto emailVerified(Boolean emailVerified) {
    
    this.emailVerified = emailVerified;
    return this;
  }

   /**
   * Get emailVerified
   * @return emailVerified
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_EMAIL_VERIFIED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getEmailVerified() {
    return emailVerified;
  }


  @JsonProperty(JSON_PROPERTY_EMAIL_VERIFIED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEmailVerified(Boolean emailVerified) {
    this.emailVerified = emailVerified;
  }


  public UserRepresentationDto enabled(Boolean enabled) {
    
    this.enabled = enabled;
    return this;
  }

   /**
   * Get enabled
   * @return enabled
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getEnabled() {
    return enabled;
  }


  @JsonProperty(JSON_PROPERTY_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  public UserRepresentationDto federatedIdentities(List<FederatedIdentityRepresentationDto> federatedIdentities) {
    
    this.federatedIdentities = federatedIdentities;
    return this;
  }

  public UserRepresentationDto addFederatedIdentitiesItem(FederatedIdentityRepresentationDto federatedIdentitiesItem) {
    if (this.federatedIdentities == null) {
      this.federatedIdentities = new ArrayList<>();
    }
    this.federatedIdentities.add(federatedIdentitiesItem);
    return this;
  }

   /**
   * Get federatedIdentities
   * @return federatedIdentities
  **/
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_FEDERATED_IDENTITIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<FederatedIdentityRepresentationDto> getFederatedIdentities() {
    return federatedIdentities;
  }


  @JsonProperty(JSON_PROPERTY_FEDERATED_IDENTITIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFederatedIdentities(List<FederatedIdentityRepresentationDto> federatedIdentities) {
    this.federatedIdentities = federatedIdentities;
  }


  public UserRepresentationDto federationLink(String federationLink) {
    
    this.federationLink = federationLink;
    return this;
  }

   /**
   * Get federationLink
   * @return federationLink
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_FEDERATION_LINK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFederationLink() {
    return federationLink;
  }


  @JsonProperty(JSON_PROPERTY_FEDERATION_LINK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFederationLink(String federationLink) {
    this.federationLink = federationLink;
  }


  public UserRepresentationDto firstName(String firstName) {
    
    this.firstName = firstName;
    return this;
  }

   /**
   * Get firstName
   * @return firstName
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_FIRST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFirstName() {
    return firstName;
  }


  @JsonProperty(JSON_PROPERTY_FIRST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }


  public UserRepresentationDto groups(List<String> groups) {
    
    this.groups = groups;
    return this;
  }

  public UserRepresentationDto addGroupsItem(String groupsItem) {
    if (this.groups == null) {
      this.groups = new ArrayList<>();
    }
    this.groups.add(groupsItem);
    return this;
  }

   /**
   * Get groups
   * @return groups
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_GROUPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getGroups() {
    return groups;
  }


  @JsonProperty(JSON_PROPERTY_GROUPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGroups(List<String> groups) {
    this.groups = groups;
  }


  public UserRepresentationDto id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public UserRepresentationDto lastName(String lastName) {
    
    this.lastName = lastName;
    return this;
  }

   /**
   * Get lastName
   * @return lastName
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_LAST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLastName() {
    return lastName;
  }


  @JsonProperty(JSON_PROPERTY_LAST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastName(String lastName) {
    this.lastName = lastName;
  }


  public UserRepresentationDto notBefore(Integer notBefore) {
    
    this.notBefore = notBefore;
    return this;
  }

   /**
   * Get notBefore
   * @return notBefore
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_NOT_BEFORE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getNotBefore() {
    return notBefore;
  }


  @JsonProperty(JSON_PROPERTY_NOT_BEFORE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNotBefore(Integer notBefore) {
    this.notBefore = notBefore;
  }


  public UserRepresentationDto origin(String origin) {
    
    this.origin = origin;
    return this;
  }

   /**
   * Get origin
   * @return origin
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_ORIGIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOrigin() {
    return origin;
  }


  @JsonProperty(JSON_PROPERTY_ORIGIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOrigin(String origin) {
    this.origin = origin;
  }


  public UserRepresentationDto realmRoles(List<String> realmRoles) {
    
    this.realmRoles = realmRoles;
    return this;
  }

  public UserRepresentationDto addRealmRolesItem(String realmRolesItem) {
    if (this.realmRoles == null) {
      this.realmRoles = new ArrayList<>();
    }
    this.realmRoles.add(realmRolesItem);
    return this;
  }

   /**
   * Get realmRoles
   * @return realmRoles
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_REALM_ROLES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getRealmRoles() {
    return realmRoles;
  }


  @JsonProperty(JSON_PROPERTY_REALM_ROLES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRealmRoles(List<String> realmRoles) {
    this.realmRoles = realmRoles;
  }


  public UserRepresentationDto requiredActions(List<String> requiredActions) {
    
    this.requiredActions = requiredActions;
    return this;
  }

  public UserRepresentationDto addRequiredActionsItem(String requiredActionsItem) {
    if (this.requiredActions == null) {
      this.requiredActions = new ArrayList<>();
    }
    this.requiredActions.add(requiredActionsItem);
    return this;
  }

   /**
   * Get requiredActions
   * @return requiredActions
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_REQUIRED_ACTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getRequiredActions() {
    return requiredActions;
  }


  @JsonProperty(JSON_PROPERTY_REQUIRED_ACTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRequiredActions(List<String> requiredActions) {
    this.requiredActions = requiredActions;
  }


  public UserRepresentationDto self(String self) {
    
    this.self = self;
    return this;
  }

   /**
   * Get self
   * @return self
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_SELF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSelf() {
    return self;
  }


  @JsonProperty(JSON_PROPERTY_SELF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSelf(String self) {
    this.self = self;
  }


  public UserRepresentationDto serviceAccountClientId(String serviceAccountClientId) {
    
    this.serviceAccountClientId = serviceAccountClientId;
    return this;
  }

   /**
   * Get serviceAccountClientId
   * @return serviceAccountClientId
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_SERVICE_ACCOUNT_CLIENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getServiceAccountClientId() {
    return serviceAccountClientId;
  }


  @JsonProperty(JSON_PROPERTY_SERVICE_ACCOUNT_CLIENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setServiceAccountClientId(String serviceAccountClientId) {
    this.serviceAccountClientId = serviceAccountClientId;
  }


  public UserRepresentationDto username(String username) {
    
    this.username = username;
    return this;
  }

   /**
   * Get username
   * @return username
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_USERNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUsername() {
    return username;
  }


  @JsonProperty(JSON_PROPERTY_USERNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUsername(String username) {
    this.username = username;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserRepresentationDto userRepresentation = (UserRepresentationDto) o;
    return Objects.equals(this.access, userRepresentation.access) &&
        Objects.equals(this.attributes, userRepresentation.attributes) &&
        Objects.equals(this.clientConsents, userRepresentation.clientConsents) &&
        Objects.equals(this.clientRoles, userRepresentation.clientRoles) &&
        Objects.equals(this.createdTimestamp, userRepresentation.createdTimestamp) &&
        Objects.equals(this.credentials, userRepresentation.credentials) &&
        Objects.equals(this.disableableCredentialTypes, userRepresentation.disableableCredentialTypes) &&
        Objects.equals(this.email, userRepresentation.email) &&
        Objects.equals(this.emailVerified, userRepresentation.emailVerified) &&
        Objects.equals(this.enabled, userRepresentation.enabled) &&
        Objects.equals(this.federatedIdentities, userRepresentation.federatedIdentities) &&
        Objects.equals(this.federationLink, userRepresentation.federationLink) &&
        Objects.equals(this.firstName, userRepresentation.firstName) &&
        Objects.equals(this.groups, userRepresentation.groups) &&
        Objects.equals(this.id, userRepresentation.id) &&
        Objects.equals(this.lastName, userRepresentation.lastName) &&
        Objects.equals(this.notBefore, userRepresentation.notBefore) &&
        Objects.equals(this.origin, userRepresentation.origin) &&
        Objects.equals(this.realmRoles, userRepresentation.realmRoles) &&
        Objects.equals(this.requiredActions, userRepresentation.requiredActions) &&
        Objects.equals(this.self, userRepresentation.self) &&
        Objects.equals(this.serviceAccountClientId, userRepresentation.serviceAccountClientId) &&
        Objects.equals(this.username, userRepresentation.username);
  }

  @Override
  public int hashCode() {
    return Objects.hash(access, attributes, clientConsents, clientRoles, createdTimestamp, credentials, disableableCredentialTypes, email, emailVerified, enabled, federatedIdentities, federationLink, firstName, groups, id, lastName, notBefore, origin, realmRoles, requiredActions, self, serviceAccountClientId, username);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserRepresentationDto {\n");
    sb.append("    access: ").append(toIndentedString(access)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    clientConsents: ").append(toIndentedString(clientConsents)).append("\n");
    sb.append("    clientRoles: ").append(toIndentedString(clientRoles)).append("\n");
    sb.append("    createdTimestamp: ").append(toIndentedString(createdTimestamp)).append("\n");
    sb.append("    credentials: ").append(toIndentedString(credentials)).append("\n");
    sb.append("    disableableCredentialTypes: ").append(toIndentedString(disableableCredentialTypes)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    emailVerified: ").append(toIndentedString(emailVerified)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    federatedIdentities: ").append(toIndentedString(federatedIdentities)).append("\n");
    sb.append("    federationLink: ").append(toIndentedString(federationLink)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    groups: ").append(toIndentedString(groups)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    notBefore: ").append(toIndentedString(notBefore)).append("\n");
    sb.append("    origin: ").append(toIndentedString(origin)).append("\n");
    sb.append("    realmRoles: ").append(toIndentedString(realmRoles)).append("\n");
    sb.append("    requiredActions: ").append(toIndentedString(requiredActions)).append("\n");
    sb.append("    self: ").append(toIndentedString(self)).append("\n");
    sb.append("    serviceAccountClientId: ").append(toIndentedString(serviceAccountClientId)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

