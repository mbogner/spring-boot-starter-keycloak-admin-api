/*
 * ${product.name.full} Admin REST API
 * This is a REST API reference for the ${product.name.full} Admin REST API.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package dev.mbo.keycloak.admin.api.dto;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.HashMap;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;

/**
 * IdentityProviderRepresentationDto
 */
@JsonPropertyOrder({
  IdentityProviderRepresentationDto.JSON_PROPERTY_ADD_READ_TOKEN_ROLE_ON_CREATE,
  IdentityProviderRepresentationDto.JSON_PROPERTY_ALIAS,
  IdentityProviderRepresentationDto.JSON_PROPERTY_CONFIG,
  IdentityProviderRepresentationDto.JSON_PROPERTY_DISPLAY_NAME,
  IdentityProviderRepresentationDto.JSON_PROPERTY_ENABLED,
  IdentityProviderRepresentationDto.JSON_PROPERTY_FIRST_BROKER_LOGIN_FLOW_ALIAS,
  IdentityProviderRepresentationDto.JSON_PROPERTY_INTERNAL_ID,
  IdentityProviderRepresentationDto.JSON_PROPERTY_LINK_ONLY,
  IdentityProviderRepresentationDto.JSON_PROPERTY_POST_BROKER_LOGIN_FLOW_ALIAS,
  IdentityProviderRepresentationDto.JSON_PROPERTY_PROVIDER_ID,
  IdentityProviderRepresentationDto.JSON_PROPERTY_STORE_TOKEN,
  IdentityProviderRepresentationDto.JSON_PROPERTY_TRUST_EMAIL
})
@JsonTypeName("IdentityProviderRepresentation")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class IdentityProviderRepresentationDto {
  public static final String JSON_PROPERTY_ADD_READ_TOKEN_ROLE_ON_CREATE = "addReadTokenRoleOnCreate";
  private Boolean addReadTokenRoleOnCreate;

  public static final String JSON_PROPERTY_ALIAS = "alias";
  private String alias;

  public static final String JSON_PROPERTY_CONFIG = "config";
  private Map<String, Object> config = null;

  public static final String JSON_PROPERTY_DISPLAY_NAME = "displayName";
  private String displayName;

  public static final String JSON_PROPERTY_ENABLED = "enabled";
  private Boolean enabled;

  public static final String JSON_PROPERTY_FIRST_BROKER_LOGIN_FLOW_ALIAS = "firstBrokerLoginFlowAlias";
  private String firstBrokerLoginFlowAlias;

  public static final String JSON_PROPERTY_INTERNAL_ID = "internalId";
  private String internalId;

  public static final String JSON_PROPERTY_LINK_ONLY = "linkOnly";
  private Boolean linkOnly;

  public static final String JSON_PROPERTY_POST_BROKER_LOGIN_FLOW_ALIAS = "postBrokerLoginFlowAlias";
  private String postBrokerLoginFlowAlias;

  public static final String JSON_PROPERTY_PROVIDER_ID = "providerId";
  private String providerId;

  public static final String JSON_PROPERTY_STORE_TOKEN = "storeToken";
  private Boolean storeToken;

  public static final String JSON_PROPERTY_TRUST_EMAIL = "trustEmail";
  private Boolean trustEmail;

  public IdentityProviderRepresentationDto() {
  }

  public IdentityProviderRepresentationDto addReadTokenRoleOnCreate(Boolean addReadTokenRoleOnCreate) {
    
    this.addReadTokenRoleOnCreate = addReadTokenRoleOnCreate;
    return this;
  }

   /**
   * Get addReadTokenRoleOnCreate
   * @return addReadTokenRoleOnCreate
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_ADD_READ_TOKEN_ROLE_ON_CREATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getAddReadTokenRoleOnCreate() {
    return addReadTokenRoleOnCreate;
  }


  @JsonProperty(JSON_PROPERTY_ADD_READ_TOKEN_ROLE_ON_CREATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddReadTokenRoleOnCreate(Boolean addReadTokenRoleOnCreate) {
    this.addReadTokenRoleOnCreate = addReadTokenRoleOnCreate;
  }


  public IdentityProviderRepresentationDto alias(String alias) {
    
    this.alias = alias;
    return this;
  }

   /**
   * Get alias
   * @return alias
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_ALIAS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAlias() {
    return alias;
  }


  @JsonProperty(JSON_PROPERTY_ALIAS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAlias(String alias) {
    this.alias = alias;
  }


  public IdentityProviderRepresentationDto config(Map<String, Object> config) {
    
    this.config = config;
    return this;
  }

  public IdentityProviderRepresentationDto putConfigItem(String key, Object configItem) {
    if (this.config == null) {
      this.config = new HashMap<>();
    }
    this.config.put(key, configItem);
    return this;
  }

   /**
   * Get config
   * @return config
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_CONFIG)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, Object> getConfig() {
    return config;
  }


  @JsonProperty(JSON_PROPERTY_CONFIG)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)
  public void setConfig(Map<String, Object> config) {
    this.config = config;
  }


  public IdentityProviderRepresentationDto displayName(String displayName) {
    
    this.displayName = displayName;
    return this;
  }

   /**
   * Get displayName
   * @return displayName
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDisplayName() {
    return displayName;
  }


  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public IdentityProviderRepresentationDto enabled(Boolean enabled) {
    
    this.enabled = enabled;
    return this;
  }

   /**
   * Get enabled
   * @return enabled
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getEnabled() {
    return enabled;
  }


  @JsonProperty(JSON_PROPERTY_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  public IdentityProviderRepresentationDto firstBrokerLoginFlowAlias(String firstBrokerLoginFlowAlias) {
    
    this.firstBrokerLoginFlowAlias = firstBrokerLoginFlowAlias;
    return this;
  }

   /**
   * Get firstBrokerLoginFlowAlias
   * @return firstBrokerLoginFlowAlias
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_FIRST_BROKER_LOGIN_FLOW_ALIAS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFirstBrokerLoginFlowAlias() {
    return firstBrokerLoginFlowAlias;
  }


  @JsonProperty(JSON_PROPERTY_FIRST_BROKER_LOGIN_FLOW_ALIAS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFirstBrokerLoginFlowAlias(String firstBrokerLoginFlowAlias) {
    this.firstBrokerLoginFlowAlias = firstBrokerLoginFlowAlias;
  }


  public IdentityProviderRepresentationDto internalId(String internalId) {
    
    this.internalId = internalId;
    return this;
  }

   /**
   * Get internalId
   * @return internalId
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_INTERNAL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getInternalId() {
    return internalId;
  }


  @JsonProperty(JSON_PROPERTY_INTERNAL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInternalId(String internalId) {
    this.internalId = internalId;
  }


  public IdentityProviderRepresentationDto linkOnly(Boolean linkOnly) {
    
    this.linkOnly = linkOnly;
    return this;
  }

   /**
   * Get linkOnly
   * @return linkOnly
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_LINK_ONLY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getLinkOnly() {
    return linkOnly;
  }


  @JsonProperty(JSON_PROPERTY_LINK_ONLY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLinkOnly(Boolean linkOnly) {
    this.linkOnly = linkOnly;
  }


  public IdentityProviderRepresentationDto postBrokerLoginFlowAlias(String postBrokerLoginFlowAlias) {
    
    this.postBrokerLoginFlowAlias = postBrokerLoginFlowAlias;
    return this;
  }

   /**
   * Get postBrokerLoginFlowAlias
   * @return postBrokerLoginFlowAlias
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_POST_BROKER_LOGIN_FLOW_ALIAS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPostBrokerLoginFlowAlias() {
    return postBrokerLoginFlowAlias;
  }


  @JsonProperty(JSON_PROPERTY_POST_BROKER_LOGIN_FLOW_ALIAS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPostBrokerLoginFlowAlias(String postBrokerLoginFlowAlias) {
    this.postBrokerLoginFlowAlias = postBrokerLoginFlowAlias;
  }


  public IdentityProviderRepresentationDto providerId(String providerId) {
    
    this.providerId = providerId;
    return this;
  }

   /**
   * Get providerId
   * @return providerId
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_PROVIDER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProviderId() {
    return providerId;
  }


  @JsonProperty(JSON_PROPERTY_PROVIDER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProviderId(String providerId) {
    this.providerId = providerId;
  }


  public IdentityProviderRepresentationDto storeToken(Boolean storeToken) {
    
    this.storeToken = storeToken;
    return this;
  }

   /**
   * Get storeToken
   * @return storeToken
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_STORE_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getStoreToken() {
    return storeToken;
  }


  @JsonProperty(JSON_PROPERTY_STORE_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStoreToken(Boolean storeToken) {
    this.storeToken = storeToken;
  }


  public IdentityProviderRepresentationDto trustEmail(Boolean trustEmail) {
    
    this.trustEmail = trustEmail;
    return this;
  }

   /**
   * Get trustEmail
   * @return trustEmail
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_TRUST_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getTrustEmail() {
    return trustEmail;
  }


  @JsonProperty(JSON_PROPERTY_TRUST_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTrustEmail(Boolean trustEmail) {
    this.trustEmail = trustEmail;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IdentityProviderRepresentationDto identityProviderRepresentation = (IdentityProviderRepresentationDto) o;
    return Objects.equals(this.addReadTokenRoleOnCreate, identityProviderRepresentation.addReadTokenRoleOnCreate) &&
        Objects.equals(this.alias, identityProviderRepresentation.alias) &&
        Objects.equals(this.config, identityProviderRepresentation.config) &&
        Objects.equals(this.displayName, identityProviderRepresentation.displayName) &&
        Objects.equals(this.enabled, identityProviderRepresentation.enabled) &&
        Objects.equals(this.firstBrokerLoginFlowAlias, identityProviderRepresentation.firstBrokerLoginFlowAlias) &&
        Objects.equals(this.internalId, identityProviderRepresentation.internalId) &&
        Objects.equals(this.linkOnly, identityProviderRepresentation.linkOnly) &&
        Objects.equals(this.postBrokerLoginFlowAlias, identityProviderRepresentation.postBrokerLoginFlowAlias) &&
        Objects.equals(this.providerId, identityProviderRepresentation.providerId) &&
        Objects.equals(this.storeToken, identityProviderRepresentation.storeToken) &&
        Objects.equals(this.trustEmail, identityProviderRepresentation.trustEmail);
  }

  @Override
  public int hashCode() {
    return Objects.hash(addReadTokenRoleOnCreate, alias, config, displayName, enabled, firstBrokerLoginFlowAlias, internalId, linkOnly, postBrokerLoginFlowAlias, providerId, storeToken, trustEmail);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IdentityProviderRepresentationDto {\n");
    sb.append("    addReadTokenRoleOnCreate: ").append(toIndentedString(addReadTokenRoleOnCreate)).append("\n");
    sb.append("    alias: ").append(toIndentedString(alias)).append("\n");
    sb.append("    config: ").append(toIndentedString(config)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    firstBrokerLoginFlowAlias: ").append(toIndentedString(firstBrokerLoginFlowAlias)).append("\n");
    sb.append("    internalId: ").append(toIndentedString(internalId)).append("\n");
    sb.append("    linkOnly: ").append(toIndentedString(linkOnly)).append("\n");
    sb.append("    postBrokerLoginFlowAlias: ").append(toIndentedString(postBrokerLoginFlowAlias)).append("\n");
    sb.append("    providerId: ").append(toIndentedString(providerId)).append("\n");
    sb.append("    storeToken: ").append(toIndentedString(storeToken)).append("\n");
    sb.append("    trustEmail: ").append(toIndentedString(trustEmail)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

