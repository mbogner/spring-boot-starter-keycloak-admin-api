/*
 * ${product.name.full} Admin REST API
 * This is a REST API reference for the ${product.name.full} Admin REST API.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package dev.mbo.keycloak.admin.api.dto;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import dev.mbo.keycloak.admin.api.dto.ProtocolMapperRepresentationDto;
import dev.mbo.keycloak.admin.api.dto.ResourceServerRepresentationDto;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;

/**
 * ClientRepresentationDto
 */
@JsonPropertyOrder({
  ClientRepresentationDto.JSON_PROPERTY_ACCESS,
  ClientRepresentationDto.JSON_PROPERTY_ADMIN_URL,
  ClientRepresentationDto.JSON_PROPERTY_ALWAYS_DISPLAY_IN_CONSOLE,
  ClientRepresentationDto.JSON_PROPERTY_ATTRIBUTES,
  ClientRepresentationDto.JSON_PROPERTY_AUTHENTICATION_FLOW_BINDING_OVERRIDES,
  ClientRepresentationDto.JSON_PROPERTY_AUTHORIZATION_SERVICES_ENABLED,
  ClientRepresentationDto.JSON_PROPERTY_AUTHORIZATION_SETTINGS,
  ClientRepresentationDto.JSON_PROPERTY_BASE_URL,
  ClientRepresentationDto.JSON_PROPERTY_BEARER_ONLY,
  ClientRepresentationDto.JSON_PROPERTY_CLIENT_AUTHENTICATOR_TYPE,
  ClientRepresentationDto.JSON_PROPERTY_CLIENT_ID,
  ClientRepresentationDto.JSON_PROPERTY_CONSENT_REQUIRED,
  ClientRepresentationDto.JSON_PROPERTY_DEFAULT_CLIENT_SCOPES,
  ClientRepresentationDto.JSON_PROPERTY_DESCRIPTION,
  ClientRepresentationDto.JSON_PROPERTY_DIRECT_ACCESS_GRANTS_ENABLED,
  ClientRepresentationDto.JSON_PROPERTY_ENABLED,
  ClientRepresentationDto.JSON_PROPERTY_FRONTCHANNEL_LOGOUT,
  ClientRepresentationDto.JSON_PROPERTY_FULL_SCOPE_ALLOWED,
  ClientRepresentationDto.JSON_PROPERTY_ID,
  ClientRepresentationDto.JSON_PROPERTY_IMPLICIT_FLOW_ENABLED,
  ClientRepresentationDto.JSON_PROPERTY_NAME,
  ClientRepresentationDto.JSON_PROPERTY_NODE_RE_REGISTRATION_TIMEOUT,
  ClientRepresentationDto.JSON_PROPERTY_NOT_BEFORE,
  ClientRepresentationDto.JSON_PROPERTY_OAUTH2_DEVICE_AUTHORIZATION_GRANT_ENABLED,
  ClientRepresentationDto.JSON_PROPERTY_OPTIONAL_CLIENT_SCOPES,
  ClientRepresentationDto.JSON_PROPERTY_ORIGIN,
  ClientRepresentationDto.JSON_PROPERTY_PROTOCOL,
  ClientRepresentationDto.JSON_PROPERTY_PROTOCOL_MAPPERS,
  ClientRepresentationDto.JSON_PROPERTY_PUBLIC_CLIENT,
  ClientRepresentationDto.JSON_PROPERTY_REDIRECT_URIS,
  ClientRepresentationDto.JSON_PROPERTY_REGISTERED_NODES,
  ClientRepresentationDto.JSON_PROPERTY_REGISTRATION_ACCESS_TOKEN,
  ClientRepresentationDto.JSON_PROPERTY_ROOT_URL,
  ClientRepresentationDto.JSON_PROPERTY_SECRET,
  ClientRepresentationDto.JSON_PROPERTY_SERVICE_ACCOUNTS_ENABLED,
  ClientRepresentationDto.JSON_PROPERTY_STANDARD_FLOW_ENABLED,
  ClientRepresentationDto.JSON_PROPERTY_SURROGATE_AUTH_REQUIRED,
  ClientRepresentationDto.JSON_PROPERTY_WEB_ORIGINS
})
@JsonTypeName("ClientRepresentation")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ClientRepresentationDto {
  public static final String JSON_PROPERTY_ACCESS = "access";
  private Map<String, Object> access = null;

  public static final String JSON_PROPERTY_ADMIN_URL = "adminUrl";
  private String adminUrl;

  public static final String JSON_PROPERTY_ALWAYS_DISPLAY_IN_CONSOLE = "alwaysDisplayInConsole";
  private Boolean alwaysDisplayInConsole;

  public static final String JSON_PROPERTY_ATTRIBUTES = "attributes";
  private Map<String, Object> attributes = null;

  public static final String JSON_PROPERTY_AUTHENTICATION_FLOW_BINDING_OVERRIDES = "authenticationFlowBindingOverrides";
  private Map<String, Object> authenticationFlowBindingOverrides = null;

  public static final String JSON_PROPERTY_AUTHORIZATION_SERVICES_ENABLED = "authorizationServicesEnabled";
  private Boolean authorizationServicesEnabled;

  public static final String JSON_PROPERTY_AUTHORIZATION_SETTINGS = "authorizationSettings";
  private ResourceServerRepresentationDto authorizationSettings;

  public static final String JSON_PROPERTY_BASE_URL = "baseUrl";
  private String baseUrl;

  public static final String JSON_PROPERTY_BEARER_ONLY = "bearerOnly";
  private Boolean bearerOnly;

  public static final String JSON_PROPERTY_CLIENT_AUTHENTICATOR_TYPE = "clientAuthenticatorType";
  private String clientAuthenticatorType;

  public static final String JSON_PROPERTY_CLIENT_ID = "clientId";
  private String clientId;

  public static final String JSON_PROPERTY_CONSENT_REQUIRED = "consentRequired";
  private Boolean consentRequired;

  public static final String JSON_PROPERTY_DEFAULT_CLIENT_SCOPES = "defaultClientScopes";
  private List<String> defaultClientScopes = null;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_DIRECT_ACCESS_GRANTS_ENABLED = "directAccessGrantsEnabled";
  private Boolean directAccessGrantsEnabled;

  public static final String JSON_PROPERTY_ENABLED = "enabled";
  private Boolean enabled;

  public static final String JSON_PROPERTY_FRONTCHANNEL_LOGOUT = "frontchannelLogout";
  private Boolean frontchannelLogout;

  public static final String JSON_PROPERTY_FULL_SCOPE_ALLOWED = "fullScopeAllowed";
  private Boolean fullScopeAllowed;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_IMPLICIT_FLOW_ENABLED = "implicitFlowEnabled";
  private Boolean implicitFlowEnabled;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_NODE_RE_REGISTRATION_TIMEOUT = "nodeReRegistrationTimeout";
  private Integer nodeReRegistrationTimeout;

  public static final String JSON_PROPERTY_NOT_BEFORE = "notBefore";
  private Integer notBefore;

  public static final String JSON_PROPERTY_OAUTH2_DEVICE_AUTHORIZATION_GRANT_ENABLED = "oauth2DeviceAuthorizationGrantEnabled";
  private Boolean oauth2DeviceAuthorizationGrantEnabled;

  public static final String JSON_PROPERTY_OPTIONAL_CLIENT_SCOPES = "optionalClientScopes";
  private List<String> optionalClientScopes = null;

  public static final String JSON_PROPERTY_ORIGIN = "origin";
  private String origin;

  public static final String JSON_PROPERTY_PROTOCOL = "protocol";
  private String protocol;

  public static final String JSON_PROPERTY_PROTOCOL_MAPPERS = "protocolMappers";
  private List<ProtocolMapperRepresentationDto> protocolMappers = null;

  public static final String JSON_PROPERTY_PUBLIC_CLIENT = "publicClient";
  private Boolean publicClient;

  public static final String JSON_PROPERTY_REDIRECT_URIS = "redirectUris";
  private List<String> redirectUris = null;

  public static final String JSON_PROPERTY_REGISTERED_NODES = "registeredNodes";
  private Map<String, Object> registeredNodes = null;

  public static final String JSON_PROPERTY_REGISTRATION_ACCESS_TOKEN = "registrationAccessToken";
  private String registrationAccessToken;

  public static final String JSON_PROPERTY_ROOT_URL = "rootUrl";
  private String rootUrl;

  public static final String JSON_PROPERTY_SECRET = "secret";
  private String secret;

  public static final String JSON_PROPERTY_SERVICE_ACCOUNTS_ENABLED = "serviceAccountsEnabled";
  private Boolean serviceAccountsEnabled;

  public static final String JSON_PROPERTY_STANDARD_FLOW_ENABLED = "standardFlowEnabled";
  private Boolean standardFlowEnabled;

  public static final String JSON_PROPERTY_SURROGATE_AUTH_REQUIRED = "surrogateAuthRequired";
  private Boolean surrogateAuthRequired;

  public static final String JSON_PROPERTY_WEB_ORIGINS = "webOrigins";
  private List<String> webOrigins = null;

  public ClientRepresentationDto() {
  }

  public ClientRepresentationDto access(Map<String, Object> access) {
    
    this.access = access;
    return this;
  }

  public ClientRepresentationDto putAccessItem(String key, Object accessItem) {
    if (this.access == null) {
      this.access = new HashMap<>();
    }
    this.access.put(key, accessItem);
    return this;
  }

   /**
   * Get access
   * @return access
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_ACCESS)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, Object> getAccess() {
    return access;
  }


  @JsonProperty(JSON_PROPERTY_ACCESS)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccess(Map<String, Object> access) {
    this.access = access;
  }


  public ClientRepresentationDto adminUrl(String adminUrl) {
    
    this.adminUrl = adminUrl;
    return this;
  }

   /**
   * Get adminUrl
   * @return adminUrl
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_ADMIN_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAdminUrl() {
    return adminUrl;
  }


  @JsonProperty(JSON_PROPERTY_ADMIN_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAdminUrl(String adminUrl) {
    this.adminUrl = adminUrl;
  }


  public ClientRepresentationDto alwaysDisplayInConsole(Boolean alwaysDisplayInConsole) {
    
    this.alwaysDisplayInConsole = alwaysDisplayInConsole;
    return this;
  }

   /**
   * Get alwaysDisplayInConsole
   * @return alwaysDisplayInConsole
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_ALWAYS_DISPLAY_IN_CONSOLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getAlwaysDisplayInConsole() {
    return alwaysDisplayInConsole;
  }


  @JsonProperty(JSON_PROPERTY_ALWAYS_DISPLAY_IN_CONSOLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAlwaysDisplayInConsole(Boolean alwaysDisplayInConsole) {
    this.alwaysDisplayInConsole = alwaysDisplayInConsole;
  }


  public ClientRepresentationDto attributes(Map<String, Object> attributes) {
    
    this.attributes = attributes;
    return this;
  }

  public ClientRepresentationDto putAttributesItem(String key, Object attributesItem) {
    if (this.attributes == null) {
      this.attributes = new HashMap<>();
    }
    this.attributes.put(key, attributesItem);
    return this;
  }

   /**
   * Get attributes
   * @return attributes
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_ATTRIBUTES)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, Object> getAttributes() {
    return attributes;
  }


  @JsonProperty(JSON_PROPERTY_ATTRIBUTES)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)
  public void setAttributes(Map<String, Object> attributes) {
    this.attributes = attributes;
  }


  public ClientRepresentationDto authenticationFlowBindingOverrides(Map<String, Object> authenticationFlowBindingOverrides) {
    
    this.authenticationFlowBindingOverrides = authenticationFlowBindingOverrides;
    return this;
  }

  public ClientRepresentationDto putAuthenticationFlowBindingOverridesItem(String key, Object authenticationFlowBindingOverridesItem) {
    if (this.authenticationFlowBindingOverrides == null) {
      this.authenticationFlowBindingOverrides = new HashMap<>();
    }
    this.authenticationFlowBindingOverrides.put(key, authenticationFlowBindingOverridesItem);
    return this;
  }

   /**
   * Get authenticationFlowBindingOverrides
   * @return authenticationFlowBindingOverrides
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_AUTHENTICATION_FLOW_BINDING_OVERRIDES)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, Object> getAuthenticationFlowBindingOverrides() {
    return authenticationFlowBindingOverrides;
  }


  @JsonProperty(JSON_PROPERTY_AUTHENTICATION_FLOW_BINDING_OVERRIDES)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)
  public void setAuthenticationFlowBindingOverrides(Map<String, Object> authenticationFlowBindingOverrides) {
    this.authenticationFlowBindingOverrides = authenticationFlowBindingOverrides;
  }


  public ClientRepresentationDto authorizationServicesEnabled(Boolean authorizationServicesEnabled) {
    
    this.authorizationServicesEnabled = authorizationServicesEnabled;
    return this;
  }

   /**
   * Get authorizationServicesEnabled
   * @return authorizationServicesEnabled
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_AUTHORIZATION_SERVICES_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getAuthorizationServicesEnabled() {
    return authorizationServicesEnabled;
  }


  @JsonProperty(JSON_PROPERTY_AUTHORIZATION_SERVICES_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAuthorizationServicesEnabled(Boolean authorizationServicesEnabled) {
    this.authorizationServicesEnabled = authorizationServicesEnabled;
  }


  public ClientRepresentationDto authorizationSettings(ResourceServerRepresentationDto authorizationSettings) {
    
    this.authorizationSettings = authorizationSettings;
    return this;
  }

   /**
   * Get authorizationSettings
   * @return authorizationSettings
  **/
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_AUTHORIZATION_SETTINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ResourceServerRepresentationDto getAuthorizationSettings() {
    return authorizationSettings;
  }


  @JsonProperty(JSON_PROPERTY_AUTHORIZATION_SETTINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAuthorizationSettings(ResourceServerRepresentationDto authorizationSettings) {
    this.authorizationSettings = authorizationSettings;
  }


  public ClientRepresentationDto baseUrl(String baseUrl) {
    
    this.baseUrl = baseUrl;
    return this;
  }

   /**
   * Get baseUrl
   * @return baseUrl
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_BASE_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBaseUrl() {
    return baseUrl;
  }


  @JsonProperty(JSON_PROPERTY_BASE_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBaseUrl(String baseUrl) {
    this.baseUrl = baseUrl;
  }


  public ClientRepresentationDto bearerOnly(Boolean bearerOnly) {
    
    this.bearerOnly = bearerOnly;
    return this;
  }

   /**
   * Get bearerOnly
   * @return bearerOnly
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_BEARER_ONLY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getBearerOnly() {
    return bearerOnly;
  }


  @JsonProperty(JSON_PROPERTY_BEARER_ONLY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBearerOnly(Boolean bearerOnly) {
    this.bearerOnly = bearerOnly;
  }


  public ClientRepresentationDto clientAuthenticatorType(String clientAuthenticatorType) {
    
    this.clientAuthenticatorType = clientAuthenticatorType;
    return this;
  }

   /**
   * Get clientAuthenticatorType
   * @return clientAuthenticatorType
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_CLIENT_AUTHENTICATOR_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getClientAuthenticatorType() {
    return clientAuthenticatorType;
  }


  @JsonProperty(JSON_PROPERTY_CLIENT_AUTHENTICATOR_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setClientAuthenticatorType(String clientAuthenticatorType) {
    this.clientAuthenticatorType = clientAuthenticatorType;
  }


  public ClientRepresentationDto clientId(String clientId) {
    
    this.clientId = clientId;
    return this;
  }

   /**
   * Get clientId
   * @return clientId
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_CLIENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getClientId() {
    return clientId;
  }


  @JsonProperty(JSON_PROPERTY_CLIENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setClientId(String clientId) {
    this.clientId = clientId;
  }


  public ClientRepresentationDto consentRequired(Boolean consentRequired) {
    
    this.consentRequired = consentRequired;
    return this;
  }

   /**
   * Get consentRequired
   * @return consentRequired
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_CONSENT_REQUIRED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getConsentRequired() {
    return consentRequired;
  }


  @JsonProperty(JSON_PROPERTY_CONSENT_REQUIRED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConsentRequired(Boolean consentRequired) {
    this.consentRequired = consentRequired;
  }


  public ClientRepresentationDto defaultClientScopes(List<String> defaultClientScopes) {
    
    this.defaultClientScopes = defaultClientScopes;
    return this;
  }

  public ClientRepresentationDto addDefaultClientScopesItem(String defaultClientScopesItem) {
    if (this.defaultClientScopes == null) {
      this.defaultClientScopes = new ArrayList<>();
    }
    this.defaultClientScopes.add(defaultClientScopesItem);
    return this;
  }

   /**
   * Get defaultClientScopes
   * @return defaultClientScopes
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_DEFAULT_CLIENT_SCOPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getDefaultClientScopes() {
    return defaultClientScopes;
  }


  @JsonProperty(JSON_PROPERTY_DEFAULT_CLIENT_SCOPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDefaultClientScopes(List<String> defaultClientScopes) {
    this.defaultClientScopes = defaultClientScopes;
  }


  public ClientRepresentationDto description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public ClientRepresentationDto directAccessGrantsEnabled(Boolean directAccessGrantsEnabled) {
    
    this.directAccessGrantsEnabled = directAccessGrantsEnabled;
    return this;
  }

   /**
   * Get directAccessGrantsEnabled
   * @return directAccessGrantsEnabled
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_DIRECT_ACCESS_GRANTS_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDirectAccessGrantsEnabled() {
    return directAccessGrantsEnabled;
  }


  @JsonProperty(JSON_PROPERTY_DIRECT_ACCESS_GRANTS_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDirectAccessGrantsEnabled(Boolean directAccessGrantsEnabled) {
    this.directAccessGrantsEnabled = directAccessGrantsEnabled;
  }


  public ClientRepresentationDto enabled(Boolean enabled) {
    
    this.enabled = enabled;
    return this;
  }

   /**
   * Get enabled
   * @return enabled
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getEnabled() {
    return enabled;
  }


  @JsonProperty(JSON_PROPERTY_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  public ClientRepresentationDto frontchannelLogout(Boolean frontchannelLogout) {
    
    this.frontchannelLogout = frontchannelLogout;
    return this;
  }

   /**
   * Get frontchannelLogout
   * @return frontchannelLogout
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_FRONTCHANNEL_LOGOUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getFrontchannelLogout() {
    return frontchannelLogout;
  }


  @JsonProperty(JSON_PROPERTY_FRONTCHANNEL_LOGOUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFrontchannelLogout(Boolean frontchannelLogout) {
    this.frontchannelLogout = frontchannelLogout;
  }


  public ClientRepresentationDto fullScopeAllowed(Boolean fullScopeAllowed) {
    
    this.fullScopeAllowed = fullScopeAllowed;
    return this;
  }

   /**
   * Get fullScopeAllowed
   * @return fullScopeAllowed
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_FULL_SCOPE_ALLOWED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getFullScopeAllowed() {
    return fullScopeAllowed;
  }


  @JsonProperty(JSON_PROPERTY_FULL_SCOPE_ALLOWED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFullScopeAllowed(Boolean fullScopeAllowed) {
    this.fullScopeAllowed = fullScopeAllowed;
  }


  public ClientRepresentationDto id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public ClientRepresentationDto implicitFlowEnabled(Boolean implicitFlowEnabled) {
    
    this.implicitFlowEnabled = implicitFlowEnabled;
    return this;
  }

   /**
   * Get implicitFlowEnabled
   * @return implicitFlowEnabled
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_IMPLICIT_FLOW_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getImplicitFlowEnabled() {
    return implicitFlowEnabled;
  }


  @JsonProperty(JSON_PROPERTY_IMPLICIT_FLOW_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setImplicitFlowEnabled(Boolean implicitFlowEnabled) {
    this.implicitFlowEnabled = implicitFlowEnabled;
  }


  public ClientRepresentationDto name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public ClientRepresentationDto nodeReRegistrationTimeout(Integer nodeReRegistrationTimeout) {
    
    this.nodeReRegistrationTimeout = nodeReRegistrationTimeout;
    return this;
  }

   /**
   * Get nodeReRegistrationTimeout
   * @return nodeReRegistrationTimeout
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_NODE_RE_REGISTRATION_TIMEOUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getNodeReRegistrationTimeout() {
    return nodeReRegistrationTimeout;
  }


  @JsonProperty(JSON_PROPERTY_NODE_RE_REGISTRATION_TIMEOUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNodeReRegistrationTimeout(Integer nodeReRegistrationTimeout) {
    this.nodeReRegistrationTimeout = nodeReRegistrationTimeout;
  }


  public ClientRepresentationDto notBefore(Integer notBefore) {
    
    this.notBefore = notBefore;
    return this;
  }

   /**
   * Get notBefore
   * @return notBefore
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_NOT_BEFORE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getNotBefore() {
    return notBefore;
  }


  @JsonProperty(JSON_PROPERTY_NOT_BEFORE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNotBefore(Integer notBefore) {
    this.notBefore = notBefore;
  }


  public ClientRepresentationDto oauth2DeviceAuthorizationGrantEnabled(Boolean oauth2DeviceAuthorizationGrantEnabled) {
    
    this.oauth2DeviceAuthorizationGrantEnabled = oauth2DeviceAuthorizationGrantEnabled;
    return this;
  }

   /**
   * Get oauth2DeviceAuthorizationGrantEnabled
   * @return oauth2DeviceAuthorizationGrantEnabled
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_OAUTH2_DEVICE_AUTHORIZATION_GRANT_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getOauth2DeviceAuthorizationGrantEnabled() {
    return oauth2DeviceAuthorizationGrantEnabled;
  }


  @JsonProperty(JSON_PROPERTY_OAUTH2_DEVICE_AUTHORIZATION_GRANT_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOauth2DeviceAuthorizationGrantEnabled(Boolean oauth2DeviceAuthorizationGrantEnabled) {
    this.oauth2DeviceAuthorizationGrantEnabled = oauth2DeviceAuthorizationGrantEnabled;
  }


  public ClientRepresentationDto optionalClientScopes(List<String> optionalClientScopes) {
    
    this.optionalClientScopes = optionalClientScopes;
    return this;
  }

  public ClientRepresentationDto addOptionalClientScopesItem(String optionalClientScopesItem) {
    if (this.optionalClientScopes == null) {
      this.optionalClientScopes = new ArrayList<>();
    }
    this.optionalClientScopes.add(optionalClientScopesItem);
    return this;
  }

   /**
   * Get optionalClientScopes
   * @return optionalClientScopes
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_OPTIONAL_CLIENT_SCOPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getOptionalClientScopes() {
    return optionalClientScopes;
  }


  @JsonProperty(JSON_PROPERTY_OPTIONAL_CLIENT_SCOPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOptionalClientScopes(List<String> optionalClientScopes) {
    this.optionalClientScopes = optionalClientScopes;
  }


  public ClientRepresentationDto origin(String origin) {
    
    this.origin = origin;
    return this;
  }

   /**
   * Get origin
   * @return origin
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_ORIGIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOrigin() {
    return origin;
  }


  @JsonProperty(JSON_PROPERTY_ORIGIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOrigin(String origin) {
    this.origin = origin;
  }


  public ClientRepresentationDto protocol(String protocol) {
    
    this.protocol = protocol;
    return this;
  }

   /**
   * Get protocol
   * @return protocol
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_PROTOCOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProtocol() {
    return protocol;
  }


  @JsonProperty(JSON_PROPERTY_PROTOCOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProtocol(String protocol) {
    this.protocol = protocol;
  }


  public ClientRepresentationDto protocolMappers(List<ProtocolMapperRepresentationDto> protocolMappers) {
    
    this.protocolMappers = protocolMappers;
    return this;
  }

  public ClientRepresentationDto addProtocolMappersItem(ProtocolMapperRepresentationDto protocolMappersItem) {
    if (this.protocolMappers == null) {
      this.protocolMappers = new ArrayList<>();
    }
    this.protocolMappers.add(protocolMappersItem);
    return this;
  }

   /**
   * Get protocolMappers
   * @return protocolMappers
  **/
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_PROTOCOL_MAPPERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ProtocolMapperRepresentationDto> getProtocolMappers() {
    return protocolMappers;
  }


  @JsonProperty(JSON_PROPERTY_PROTOCOL_MAPPERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProtocolMappers(List<ProtocolMapperRepresentationDto> protocolMappers) {
    this.protocolMappers = protocolMappers;
  }


  public ClientRepresentationDto publicClient(Boolean publicClient) {
    
    this.publicClient = publicClient;
    return this;
  }

   /**
   * Get publicClient
   * @return publicClient
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_PUBLIC_CLIENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getPublicClient() {
    return publicClient;
  }


  @JsonProperty(JSON_PROPERTY_PUBLIC_CLIENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPublicClient(Boolean publicClient) {
    this.publicClient = publicClient;
  }


  public ClientRepresentationDto redirectUris(List<String> redirectUris) {
    
    this.redirectUris = redirectUris;
    return this;
  }

  public ClientRepresentationDto addRedirectUrisItem(String redirectUrisItem) {
    if (this.redirectUris == null) {
      this.redirectUris = new ArrayList<>();
    }
    this.redirectUris.add(redirectUrisItem);
    return this;
  }

   /**
   * Get redirectUris
   * @return redirectUris
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_REDIRECT_URIS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getRedirectUris() {
    return redirectUris;
  }


  @JsonProperty(JSON_PROPERTY_REDIRECT_URIS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRedirectUris(List<String> redirectUris) {
    this.redirectUris = redirectUris;
  }


  public ClientRepresentationDto registeredNodes(Map<String, Object> registeredNodes) {
    
    this.registeredNodes = registeredNodes;
    return this;
  }

  public ClientRepresentationDto putRegisteredNodesItem(String key, Object registeredNodesItem) {
    if (this.registeredNodes == null) {
      this.registeredNodes = new HashMap<>();
    }
    this.registeredNodes.put(key, registeredNodesItem);
    return this;
  }

   /**
   * Get registeredNodes
   * @return registeredNodes
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_REGISTERED_NODES)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, Object> getRegisteredNodes() {
    return registeredNodes;
  }


  @JsonProperty(JSON_PROPERTY_REGISTERED_NODES)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)
  public void setRegisteredNodes(Map<String, Object> registeredNodes) {
    this.registeredNodes = registeredNodes;
  }


  public ClientRepresentationDto registrationAccessToken(String registrationAccessToken) {
    
    this.registrationAccessToken = registrationAccessToken;
    return this;
  }

   /**
   * Get registrationAccessToken
   * @return registrationAccessToken
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_REGISTRATION_ACCESS_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRegistrationAccessToken() {
    return registrationAccessToken;
  }


  @JsonProperty(JSON_PROPERTY_REGISTRATION_ACCESS_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRegistrationAccessToken(String registrationAccessToken) {
    this.registrationAccessToken = registrationAccessToken;
  }


  public ClientRepresentationDto rootUrl(String rootUrl) {
    
    this.rootUrl = rootUrl;
    return this;
  }

   /**
   * Get rootUrl
   * @return rootUrl
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_ROOT_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRootUrl() {
    return rootUrl;
  }


  @JsonProperty(JSON_PROPERTY_ROOT_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRootUrl(String rootUrl) {
    this.rootUrl = rootUrl;
  }


  public ClientRepresentationDto secret(String secret) {
    
    this.secret = secret;
    return this;
  }

   /**
   * Get secret
   * @return secret
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_SECRET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSecret() {
    return secret;
  }


  @JsonProperty(JSON_PROPERTY_SECRET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSecret(String secret) {
    this.secret = secret;
  }


  public ClientRepresentationDto serviceAccountsEnabled(Boolean serviceAccountsEnabled) {
    
    this.serviceAccountsEnabled = serviceAccountsEnabled;
    return this;
  }

   /**
   * Get serviceAccountsEnabled
   * @return serviceAccountsEnabled
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_SERVICE_ACCOUNTS_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getServiceAccountsEnabled() {
    return serviceAccountsEnabled;
  }


  @JsonProperty(JSON_PROPERTY_SERVICE_ACCOUNTS_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setServiceAccountsEnabled(Boolean serviceAccountsEnabled) {
    this.serviceAccountsEnabled = serviceAccountsEnabled;
  }


  public ClientRepresentationDto standardFlowEnabled(Boolean standardFlowEnabled) {
    
    this.standardFlowEnabled = standardFlowEnabled;
    return this;
  }

   /**
   * Get standardFlowEnabled
   * @return standardFlowEnabled
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_STANDARD_FLOW_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getStandardFlowEnabled() {
    return standardFlowEnabled;
  }


  @JsonProperty(JSON_PROPERTY_STANDARD_FLOW_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStandardFlowEnabled(Boolean standardFlowEnabled) {
    this.standardFlowEnabled = standardFlowEnabled;
  }


  public ClientRepresentationDto surrogateAuthRequired(Boolean surrogateAuthRequired) {
    
    this.surrogateAuthRequired = surrogateAuthRequired;
    return this;
  }

   /**
   * Get surrogateAuthRequired
   * @return surrogateAuthRequired
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_SURROGATE_AUTH_REQUIRED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSurrogateAuthRequired() {
    return surrogateAuthRequired;
  }


  @JsonProperty(JSON_PROPERTY_SURROGATE_AUTH_REQUIRED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSurrogateAuthRequired(Boolean surrogateAuthRequired) {
    this.surrogateAuthRequired = surrogateAuthRequired;
  }


  public ClientRepresentationDto webOrigins(List<String> webOrigins) {
    
    this.webOrigins = webOrigins;
    return this;
  }

  public ClientRepresentationDto addWebOriginsItem(String webOriginsItem) {
    if (this.webOrigins == null) {
      this.webOrigins = new ArrayList<>();
    }
    this.webOrigins.add(webOriginsItem);
    return this;
  }

   /**
   * Get webOrigins
   * @return webOrigins
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_WEB_ORIGINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getWebOrigins() {
    return webOrigins;
  }


  @JsonProperty(JSON_PROPERTY_WEB_ORIGINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWebOrigins(List<String> webOrigins) {
    this.webOrigins = webOrigins;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ClientRepresentationDto clientRepresentation = (ClientRepresentationDto) o;
    return Objects.equals(this.access, clientRepresentation.access) &&
        Objects.equals(this.adminUrl, clientRepresentation.adminUrl) &&
        Objects.equals(this.alwaysDisplayInConsole, clientRepresentation.alwaysDisplayInConsole) &&
        Objects.equals(this.attributes, clientRepresentation.attributes) &&
        Objects.equals(this.authenticationFlowBindingOverrides, clientRepresentation.authenticationFlowBindingOverrides) &&
        Objects.equals(this.authorizationServicesEnabled, clientRepresentation.authorizationServicesEnabled) &&
        Objects.equals(this.authorizationSettings, clientRepresentation.authorizationSettings) &&
        Objects.equals(this.baseUrl, clientRepresentation.baseUrl) &&
        Objects.equals(this.bearerOnly, clientRepresentation.bearerOnly) &&
        Objects.equals(this.clientAuthenticatorType, clientRepresentation.clientAuthenticatorType) &&
        Objects.equals(this.clientId, clientRepresentation.clientId) &&
        Objects.equals(this.consentRequired, clientRepresentation.consentRequired) &&
        Objects.equals(this.defaultClientScopes, clientRepresentation.defaultClientScopes) &&
        Objects.equals(this.description, clientRepresentation.description) &&
        Objects.equals(this.directAccessGrantsEnabled, clientRepresentation.directAccessGrantsEnabled) &&
        Objects.equals(this.enabled, clientRepresentation.enabled) &&
        Objects.equals(this.frontchannelLogout, clientRepresentation.frontchannelLogout) &&
        Objects.equals(this.fullScopeAllowed, clientRepresentation.fullScopeAllowed) &&
        Objects.equals(this.id, clientRepresentation.id) &&
        Objects.equals(this.implicitFlowEnabled, clientRepresentation.implicitFlowEnabled) &&
        Objects.equals(this.name, clientRepresentation.name) &&
        Objects.equals(this.nodeReRegistrationTimeout, clientRepresentation.nodeReRegistrationTimeout) &&
        Objects.equals(this.notBefore, clientRepresentation.notBefore) &&
        Objects.equals(this.oauth2DeviceAuthorizationGrantEnabled, clientRepresentation.oauth2DeviceAuthorizationGrantEnabled) &&
        Objects.equals(this.optionalClientScopes, clientRepresentation.optionalClientScopes) &&
        Objects.equals(this.origin, clientRepresentation.origin) &&
        Objects.equals(this.protocol, clientRepresentation.protocol) &&
        Objects.equals(this.protocolMappers, clientRepresentation.protocolMappers) &&
        Objects.equals(this.publicClient, clientRepresentation.publicClient) &&
        Objects.equals(this.redirectUris, clientRepresentation.redirectUris) &&
        Objects.equals(this.registeredNodes, clientRepresentation.registeredNodes) &&
        Objects.equals(this.registrationAccessToken, clientRepresentation.registrationAccessToken) &&
        Objects.equals(this.rootUrl, clientRepresentation.rootUrl) &&
        Objects.equals(this.secret, clientRepresentation.secret) &&
        Objects.equals(this.serviceAccountsEnabled, clientRepresentation.serviceAccountsEnabled) &&
        Objects.equals(this.standardFlowEnabled, clientRepresentation.standardFlowEnabled) &&
        Objects.equals(this.surrogateAuthRequired, clientRepresentation.surrogateAuthRequired) &&
        Objects.equals(this.webOrigins, clientRepresentation.webOrigins);
  }

  @Override
  public int hashCode() {
    return Objects.hash(access, adminUrl, alwaysDisplayInConsole, attributes, authenticationFlowBindingOverrides, authorizationServicesEnabled, authorizationSettings, baseUrl, bearerOnly, clientAuthenticatorType, clientId, consentRequired, defaultClientScopes, description, directAccessGrantsEnabled, enabled, frontchannelLogout, fullScopeAllowed, id, implicitFlowEnabled, name, nodeReRegistrationTimeout, notBefore, oauth2DeviceAuthorizationGrantEnabled, optionalClientScopes, origin, protocol, protocolMappers, publicClient, redirectUris, registeredNodes, registrationAccessToken, rootUrl, secret, serviceAccountsEnabled, standardFlowEnabled, surrogateAuthRequired, webOrigins);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ClientRepresentationDto {\n");
    sb.append("    access: ").append(toIndentedString(access)).append("\n");
    sb.append("    adminUrl: ").append(toIndentedString(adminUrl)).append("\n");
    sb.append("    alwaysDisplayInConsole: ").append(toIndentedString(alwaysDisplayInConsole)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    authenticationFlowBindingOverrides: ").append(toIndentedString(authenticationFlowBindingOverrides)).append("\n");
    sb.append("    authorizationServicesEnabled: ").append(toIndentedString(authorizationServicesEnabled)).append("\n");
    sb.append("    authorizationSettings: ").append(toIndentedString(authorizationSettings)).append("\n");
    sb.append("    baseUrl: ").append(toIndentedString(baseUrl)).append("\n");
    sb.append("    bearerOnly: ").append(toIndentedString(bearerOnly)).append("\n");
    sb.append("    clientAuthenticatorType: ").append(toIndentedString(clientAuthenticatorType)).append("\n");
    sb.append("    clientId: ").append(toIndentedString(clientId)).append("\n");
    sb.append("    consentRequired: ").append(toIndentedString(consentRequired)).append("\n");
    sb.append("    defaultClientScopes: ").append(toIndentedString(defaultClientScopes)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    directAccessGrantsEnabled: ").append(toIndentedString(directAccessGrantsEnabled)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    frontchannelLogout: ").append(toIndentedString(frontchannelLogout)).append("\n");
    sb.append("    fullScopeAllowed: ").append(toIndentedString(fullScopeAllowed)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    implicitFlowEnabled: ").append(toIndentedString(implicitFlowEnabled)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nodeReRegistrationTimeout: ").append(toIndentedString(nodeReRegistrationTimeout)).append("\n");
    sb.append("    notBefore: ").append(toIndentedString(notBefore)).append("\n");
    sb.append("    oauth2DeviceAuthorizationGrantEnabled: ").append(toIndentedString(oauth2DeviceAuthorizationGrantEnabled)).append("\n");
    sb.append("    optionalClientScopes: ").append(toIndentedString(optionalClientScopes)).append("\n");
    sb.append("    origin: ").append(toIndentedString(origin)).append("\n");
    sb.append("    protocol: ").append(toIndentedString(protocol)).append("\n");
    sb.append("    protocolMappers: ").append(toIndentedString(protocolMappers)).append("\n");
    sb.append("    publicClient: ").append(toIndentedString(publicClient)).append("\n");
    sb.append("    redirectUris: ").append(toIndentedString(redirectUris)).append("\n");
    sb.append("    registeredNodes: ").append(toIndentedString(registeredNodes)).append("\n");
    sb.append("    registrationAccessToken: ").append(toIndentedString(registrationAccessToken)).append("\n");
    sb.append("    rootUrl: ").append(toIndentedString(rootUrl)).append("\n");
    sb.append("    secret: ").append(toIndentedString(secret)).append("\n");
    sb.append("    serviceAccountsEnabled: ").append(toIndentedString(serviceAccountsEnabled)).append("\n");
    sb.append("    standardFlowEnabled: ").append(toIndentedString(standardFlowEnabled)).append("\n");
    sb.append("    surrogateAuthRequired: ").append(toIndentedString(surrogateAuthRequired)).append("\n");
    sb.append("    webOrigins: ").append(toIndentedString(webOrigins)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

