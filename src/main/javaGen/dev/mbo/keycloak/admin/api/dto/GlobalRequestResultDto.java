/*
 * ${product.name.full} Admin REST API
 * This is a REST API reference for the ${product.name.full} Admin REST API.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package dev.mbo.keycloak.admin.api.dto;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;

/**
 * GlobalRequestResultDto
 */
@JsonPropertyOrder({
  GlobalRequestResultDto.JSON_PROPERTY_FAILED_REQUESTS,
  GlobalRequestResultDto.JSON_PROPERTY_SUCCESS_REQUESTS
})
@JsonTypeName("GlobalRequestResult")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class GlobalRequestResultDto {
  public static final String JSON_PROPERTY_FAILED_REQUESTS = "failedRequests";
  private List<String> failedRequests = null;

  public static final String JSON_PROPERTY_SUCCESS_REQUESTS = "successRequests";
  private List<String> successRequests = null;

  public GlobalRequestResultDto() {
  }

  public GlobalRequestResultDto failedRequests(List<String> failedRequests) {
    
    this.failedRequests = failedRequests;
    return this;
  }

  public GlobalRequestResultDto addFailedRequestsItem(String failedRequestsItem) {
    if (this.failedRequests == null) {
      this.failedRequests = new ArrayList<>();
    }
    this.failedRequests.add(failedRequestsItem);
    return this;
  }

   /**
   * Get failedRequests
   * @return failedRequests
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_FAILED_REQUESTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getFailedRequests() {
    return failedRequests;
  }


  @JsonProperty(JSON_PROPERTY_FAILED_REQUESTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFailedRequests(List<String> failedRequests) {
    this.failedRequests = failedRequests;
  }


  public GlobalRequestResultDto successRequests(List<String> successRequests) {
    
    this.successRequests = successRequests;
    return this;
  }

  public GlobalRequestResultDto addSuccessRequestsItem(String successRequestsItem) {
    if (this.successRequests == null) {
      this.successRequests = new ArrayList<>();
    }
    this.successRequests.add(successRequestsItem);
    return this;
  }

   /**
   * Get successRequests
   * @return successRequests
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_SUCCESS_REQUESTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getSuccessRequests() {
    return successRequests;
  }


  @JsonProperty(JSON_PROPERTY_SUCCESS_REQUESTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSuccessRequests(List<String> successRequests) {
    this.successRequests = successRequests;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GlobalRequestResultDto globalRequestResult = (GlobalRequestResultDto) o;
    return Objects.equals(this.failedRequests, globalRequestResult.failedRequests) &&
        Objects.equals(this.successRequests, globalRequestResult.successRequests);
  }

  @Override
  public int hashCode() {
    return Objects.hash(failedRequests, successRequests);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GlobalRequestResultDto {\n");
    sb.append("    failedRequests: ").append(toIndentedString(failedRequests)).append("\n");
    sb.append("    successRequests: ").append(toIndentedString(successRequests)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

