/*
 * ${product.name.full} Admin REST API
 * This is a REST API reference for the ${product.name.full} Admin REST API.
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package dev.mbo.keycloak.admin.api.dto;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import dev.mbo.keycloak.admin.api.dto.CryptoInfoRepresentationDto;
import dev.mbo.keycloak.admin.api.dto.MemoryInfoRepresentationDto;
import dev.mbo.keycloak.admin.api.dto.PasswordPolicyTypeRepresentationDto;
import dev.mbo.keycloak.admin.api.dto.ProfileInfoRepresentationDto;
import dev.mbo.keycloak.admin.api.dto.SystemInfoRepresentationDto;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;

/**
 * ServerInfoRepresentationDto
 */
@JsonPropertyOrder({
  ServerInfoRepresentationDto.JSON_PROPERTY_BUILTIN_PROTOCOL_MAPPERS,
  ServerInfoRepresentationDto.JSON_PROPERTY_CLIENT_IMPORTERS,
  ServerInfoRepresentationDto.JSON_PROPERTY_CLIENT_INSTALLATIONS,
  ServerInfoRepresentationDto.JSON_PROPERTY_COMPONENT_TYPES,
  ServerInfoRepresentationDto.JSON_PROPERTY_CRYPTO_INFO,
  ServerInfoRepresentationDto.JSON_PROPERTY_ENUMS,
  ServerInfoRepresentationDto.JSON_PROPERTY_IDENTITY_PROVIDERS,
  ServerInfoRepresentationDto.JSON_PROPERTY_MEMORY_INFO,
  ServerInfoRepresentationDto.JSON_PROPERTY_PASSWORD_POLICIES,
  ServerInfoRepresentationDto.JSON_PROPERTY_PROFILE_INFO,
  ServerInfoRepresentationDto.JSON_PROPERTY_PROTOCOL_MAPPER_TYPES,
  ServerInfoRepresentationDto.JSON_PROPERTY_PROVIDERS,
  ServerInfoRepresentationDto.JSON_PROPERTY_SOCIAL_PROVIDERS,
  ServerInfoRepresentationDto.JSON_PROPERTY_SYSTEM_INFO,
  ServerInfoRepresentationDto.JSON_PROPERTY_THEMES
})
@JsonTypeName("ServerInfoRepresentation")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ServerInfoRepresentationDto {
  public static final String JSON_PROPERTY_BUILTIN_PROTOCOL_MAPPERS = "builtinProtocolMappers";
  private Map<String, Object> builtinProtocolMappers = null;

  public static final String JSON_PROPERTY_CLIENT_IMPORTERS = "clientImporters";
  private List<Map<String, Object>> clientImporters = null;

  public static final String JSON_PROPERTY_CLIENT_INSTALLATIONS = "clientInstallations";
  private Map<String, Object> clientInstallations = null;

  public static final String JSON_PROPERTY_COMPONENT_TYPES = "componentTypes";
  private Map<String, Object> componentTypes = null;

  public static final String JSON_PROPERTY_CRYPTO_INFO = "cryptoInfo";
  private CryptoInfoRepresentationDto cryptoInfo;

  public static final String JSON_PROPERTY_ENUMS = "enums";
  private Map<String, Object> enums = null;

  public static final String JSON_PROPERTY_IDENTITY_PROVIDERS = "identityProviders";
  private List<Map<String, Object>> identityProviders = null;

  public static final String JSON_PROPERTY_MEMORY_INFO = "memoryInfo";
  private MemoryInfoRepresentationDto memoryInfo;

  public static final String JSON_PROPERTY_PASSWORD_POLICIES = "passwordPolicies";
  private List<PasswordPolicyTypeRepresentationDto> passwordPolicies = null;

  public static final String JSON_PROPERTY_PROFILE_INFO = "profileInfo";
  private ProfileInfoRepresentationDto profileInfo;

  public static final String JSON_PROPERTY_PROTOCOL_MAPPER_TYPES = "protocolMapperTypes";
  private Map<String, Object> protocolMapperTypes = null;

  public static final String JSON_PROPERTY_PROVIDERS = "providers";
  private Map<String, Object> providers = null;

  public static final String JSON_PROPERTY_SOCIAL_PROVIDERS = "socialProviders";
  private List<Map<String, Object>> socialProviders = null;

  public static final String JSON_PROPERTY_SYSTEM_INFO = "systemInfo";
  private SystemInfoRepresentationDto systemInfo;

  public static final String JSON_PROPERTY_THEMES = "themes";
  private Map<String, Object> themes = null;

  public ServerInfoRepresentationDto() {
  }

  public ServerInfoRepresentationDto builtinProtocolMappers(Map<String, Object> builtinProtocolMappers) {
    
    this.builtinProtocolMappers = builtinProtocolMappers;
    return this;
  }

  public ServerInfoRepresentationDto putBuiltinProtocolMappersItem(String key, Object builtinProtocolMappersItem) {
    if (this.builtinProtocolMappers == null) {
      this.builtinProtocolMappers = new HashMap<>();
    }
    this.builtinProtocolMappers.put(key, builtinProtocolMappersItem);
    return this;
  }

   /**
   * Get builtinProtocolMappers
   * @return builtinProtocolMappers
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_BUILTIN_PROTOCOL_MAPPERS)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, Object> getBuiltinProtocolMappers() {
    return builtinProtocolMappers;
  }


  @JsonProperty(JSON_PROPERTY_BUILTIN_PROTOCOL_MAPPERS)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)
  public void setBuiltinProtocolMappers(Map<String, Object> builtinProtocolMappers) {
    this.builtinProtocolMappers = builtinProtocolMappers;
  }


  public ServerInfoRepresentationDto clientImporters(List<Map<String, Object>> clientImporters) {
    
    this.clientImporters = clientImporters;
    return this;
  }

  public ServerInfoRepresentationDto addClientImportersItem(Map<String, Object> clientImportersItem) {
    if (this.clientImporters == null) {
      this.clientImporters = new ArrayList<>();
    }
    this.clientImporters.add(clientImportersItem);
    return this;
  }

   /**
   * Get clientImporters
   * @return clientImporters
  **/
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_CLIENT_IMPORTERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Map<String, Object>> getClientImporters() {
    return clientImporters;
  }


  @JsonProperty(JSON_PROPERTY_CLIENT_IMPORTERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setClientImporters(List<Map<String, Object>> clientImporters) {
    this.clientImporters = clientImporters;
  }


  public ServerInfoRepresentationDto clientInstallations(Map<String, Object> clientInstallations) {
    
    this.clientInstallations = clientInstallations;
    return this;
  }

  public ServerInfoRepresentationDto putClientInstallationsItem(String key, Object clientInstallationsItem) {
    if (this.clientInstallations == null) {
      this.clientInstallations = new HashMap<>();
    }
    this.clientInstallations.put(key, clientInstallationsItem);
    return this;
  }

   /**
   * Get clientInstallations
   * @return clientInstallations
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_CLIENT_INSTALLATIONS)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, Object> getClientInstallations() {
    return clientInstallations;
  }


  @JsonProperty(JSON_PROPERTY_CLIENT_INSTALLATIONS)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)
  public void setClientInstallations(Map<String, Object> clientInstallations) {
    this.clientInstallations = clientInstallations;
  }


  public ServerInfoRepresentationDto componentTypes(Map<String, Object> componentTypes) {
    
    this.componentTypes = componentTypes;
    return this;
  }

  public ServerInfoRepresentationDto putComponentTypesItem(String key, Object componentTypesItem) {
    if (this.componentTypes == null) {
      this.componentTypes = new HashMap<>();
    }
    this.componentTypes.put(key, componentTypesItem);
    return this;
  }

   /**
   * Get componentTypes
   * @return componentTypes
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_COMPONENT_TYPES)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, Object> getComponentTypes() {
    return componentTypes;
  }


  @JsonProperty(JSON_PROPERTY_COMPONENT_TYPES)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)
  public void setComponentTypes(Map<String, Object> componentTypes) {
    this.componentTypes = componentTypes;
  }


  public ServerInfoRepresentationDto cryptoInfo(CryptoInfoRepresentationDto cryptoInfo) {
    
    this.cryptoInfo = cryptoInfo;
    return this;
  }

   /**
   * Get cryptoInfo
   * @return cryptoInfo
  **/
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_CRYPTO_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CryptoInfoRepresentationDto getCryptoInfo() {
    return cryptoInfo;
  }


  @JsonProperty(JSON_PROPERTY_CRYPTO_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCryptoInfo(CryptoInfoRepresentationDto cryptoInfo) {
    this.cryptoInfo = cryptoInfo;
  }


  public ServerInfoRepresentationDto enums(Map<String, Object> enums) {
    
    this.enums = enums;
    return this;
  }

  public ServerInfoRepresentationDto putEnumsItem(String key, Object enumsItem) {
    if (this.enums == null) {
      this.enums = new HashMap<>();
    }
    this.enums.put(key, enumsItem);
    return this;
  }

   /**
   * Get enums
   * @return enums
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_ENUMS)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, Object> getEnums() {
    return enums;
  }


  @JsonProperty(JSON_PROPERTY_ENUMS)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnums(Map<String, Object> enums) {
    this.enums = enums;
  }


  public ServerInfoRepresentationDto identityProviders(List<Map<String, Object>> identityProviders) {
    
    this.identityProviders = identityProviders;
    return this;
  }

  public ServerInfoRepresentationDto addIdentityProvidersItem(Map<String, Object> identityProvidersItem) {
    if (this.identityProviders == null) {
      this.identityProviders = new ArrayList<>();
    }
    this.identityProviders.add(identityProvidersItem);
    return this;
  }

   /**
   * Get identityProviders
   * @return identityProviders
  **/
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_IDENTITY_PROVIDERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Map<String, Object>> getIdentityProviders() {
    return identityProviders;
  }


  @JsonProperty(JSON_PROPERTY_IDENTITY_PROVIDERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIdentityProviders(List<Map<String, Object>> identityProviders) {
    this.identityProviders = identityProviders;
  }


  public ServerInfoRepresentationDto memoryInfo(MemoryInfoRepresentationDto memoryInfo) {
    
    this.memoryInfo = memoryInfo;
    return this;
  }

   /**
   * Get memoryInfo
   * @return memoryInfo
  **/
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_MEMORY_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public MemoryInfoRepresentationDto getMemoryInfo() {
    return memoryInfo;
  }


  @JsonProperty(JSON_PROPERTY_MEMORY_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMemoryInfo(MemoryInfoRepresentationDto memoryInfo) {
    this.memoryInfo = memoryInfo;
  }


  public ServerInfoRepresentationDto passwordPolicies(List<PasswordPolicyTypeRepresentationDto> passwordPolicies) {
    
    this.passwordPolicies = passwordPolicies;
    return this;
  }

  public ServerInfoRepresentationDto addPasswordPoliciesItem(PasswordPolicyTypeRepresentationDto passwordPoliciesItem) {
    if (this.passwordPolicies == null) {
      this.passwordPolicies = new ArrayList<>();
    }
    this.passwordPolicies.add(passwordPoliciesItem);
    return this;
  }

   /**
   * Get passwordPolicies
   * @return passwordPolicies
  **/
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_PASSWORD_POLICIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<PasswordPolicyTypeRepresentationDto> getPasswordPolicies() {
    return passwordPolicies;
  }


  @JsonProperty(JSON_PROPERTY_PASSWORD_POLICIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPasswordPolicies(List<PasswordPolicyTypeRepresentationDto> passwordPolicies) {
    this.passwordPolicies = passwordPolicies;
  }


  public ServerInfoRepresentationDto profileInfo(ProfileInfoRepresentationDto profileInfo) {
    
    this.profileInfo = profileInfo;
    return this;
  }

   /**
   * Get profileInfo
   * @return profileInfo
  **/
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_PROFILE_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ProfileInfoRepresentationDto getProfileInfo() {
    return profileInfo;
  }


  @JsonProperty(JSON_PROPERTY_PROFILE_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProfileInfo(ProfileInfoRepresentationDto profileInfo) {
    this.profileInfo = profileInfo;
  }


  public ServerInfoRepresentationDto protocolMapperTypes(Map<String, Object> protocolMapperTypes) {
    
    this.protocolMapperTypes = protocolMapperTypes;
    return this;
  }

  public ServerInfoRepresentationDto putProtocolMapperTypesItem(String key, Object protocolMapperTypesItem) {
    if (this.protocolMapperTypes == null) {
      this.protocolMapperTypes = new HashMap<>();
    }
    this.protocolMapperTypes.put(key, protocolMapperTypesItem);
    return this;
  }

   /**
   * Get protocolMapperTypes
   * @return protocolMapperTypes
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_PROTOCOL_MAPPER_TYPES)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, Object> getProtocolMapperTypes() {
    return protocolMapperTypes;
  }


  @JsonProperty(JSON_PROPERTY_PROTOCOL_MAPPER_TYPES)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)
  public void setProtocolMapperTypes(Map<String, Object> protocolMapperTypes) {
    this.protocolMapperTypes = protocolMapperTypes;
  }


  public ServerInfoRepresentationDto providers(Map<String, Object> providers) {
    
    this.providers = providers;
    return this;
  }

  public ServerInfoRepresentationDto putProvidersItem(String key, Object providersItem) {
    if (this.providers == null) {
      this.providers = new HashMap<>();
    }
    this.providers.put(key, providersItem);
    return this;
  }

   /**
   * Get providers
   * @return providers
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_PROVIDERS)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, Object> getProviders() {
    return providers;
  }


  @JsonProperty(JSON_PROPERTY_PROVIDERS)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)
  public void setProviders(Map<String, Object> providers) {
    this.providers = providers;
  }


  public ServerInfoRepresentationDto socialProviders(List<Map<String, Object>> socialProviders) {
    
    this.socialProviders = socialProviders;
    return this;
  }

  public ServerInfoRepresentationDto addSocialProvidersItem(Map<String, Object> socialProvidersItem) {
    if (this.socialProviders == null) {
      this.socialProviders = new ArrayList<>();
    }
    this.socialProviders.add(socialProvidersItem);
    return this;
  }

   /**
   * Get socialProviders
   * @return socialProviders
  **/
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_SOCIAL_PROVIDERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Map<String, Object>> getSocialProviders() {
    return socialProviders;
  }


  @JsonProperty(JSON_PROPERTY_SOCIAL_PROVIDERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSocialProviders(List<Map<String, Object>> socialProviders) {
    this.socialProviders = socialProviders;
  }


  public ServerInfoRepresentationDto systemInfo(SystemInfoRepresentationDto systemInfo) {
    
    this.systemInfo = systemInfo;
    return this;
  }

   /**
   * Get systemInfo
   * @return systemInfo
  **/
  @jakarta.annotation.Nullable
  @Valid

  @JsonProperty(JSON_PROPERTY_SYSTEM_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SystemInfoRepresentationDto getSystemInfo() {
    return systemInfo;
  }


  @JsonProperty(JSON_PROPERTY_SYSTEM_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSystemInfo(SystemInfoRepresentationDto systemInfo) {
    this.systemInfo = systemInfo;
  }


  public ServerInfoRepresentationDto themes(Map<String, Object> themes) {
    
    this.themes = themes;
    return this;
  }

  public ServerInfoRepresentationDto putThemesItem(String key, Object themesItem) {
    if (this.themes == null) {
      this.themes = new HashMap<>();
    }
    this.themes.put(key, themesItem);
    return this;
  }

   /**
   * Get themes
   * @return themes
  **/
  @jakarta.annotation.Nullable

  @JsonProperty(JSON_PROPERTY_THEMES)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, Object> getThemes() {
    return themes;
  }


  @JsonProperty(JSON_PROPERTY_THEMES)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)
  public void setThemes(Map<String, Object> themes) {
    this.themes = themes;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServerInfoRepresentationDto serverInfoRepresentation = (ServerInfoRepresentationDto) o;
    return Objects.equals(this.builtinProtocolMappers, serverInfoRepresentation.builtinProtocolMappers) &&
        Objects.equals(this.clientImporters, serverInfoRepresentation.clientImporters) &&
        Objects.equals(this.clientInstallations, serverInfoRepresentation.clientInstallations) &&
        Objects.equals(this.componentTypes, serverInfoRepresentation.componentTypes) &&
        Objects.equals(this.cryptoInfo, serverInfoRepresentation.cryptoInfo) &&
        Objects.equals(this.enums, serverInfoRepresentation.enums) &&
        Objects.equals(this.identityProviders, serverInfoRepresentation.identityProviders) &&
        Objects.equals(this.memoryInfo, serverInfoRepresentation.memoryInfo) &&
        Objects.equals(this.passwordPolicies, serverInfoRepresentation.passwordPolicies) &&
        Objects.equals(this.profileInfo, serverInfoRepresentation.profileInfo) &&
        Objects.equals(this.protocolMapperTypes, serverInfoRepresentation.protocolMapperTypes) &&
        Objects.equals(this.providers, serverInfoRepresentation.providers) &&
        Objects.equals(this.socialProviders, serverInfoRepresentation.socialProviders) &&
        Objects.equals(this.systemInfo, serverInfoRepresentation.systemInfo) &&
        Objects.equals(this.themes, serverInfoRepresentation.themes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(builtinProtocolMappers, clientImporters, clientInstallations, componentTypes, cryptoInfo, enums, identityProviders, memoryInfo, passwordPolicies, profileInfo, protocolMapperTypes, providers, socialProviders, systemInfo, themes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServerInfoRepresentationDto {\n");
    sb.append("    builtinProtocolMappers: ").append(toIndentedString(builtinProtocolMappers)).append("\n");
    sb.append("    clientImporters: ").append(toIndentedString(clientImporters)).append("\n");
    sb.append("    clientInstallations: ").append(toIndentedString(clientInstallations)).append("\n");
    sb.append("    componentTypes: ").append(toIndentedString(componentTypes)).append("\n");
    sb.append("    cryptoInfo: ").append(toIndentedString(cryptoInfo)).append("\n");
    sb.append("    enums: ").append(toIndentedString(enums)).append("\n");
    sb.append("    identityProviders: ").append(toIndentedString(identityProviders)).append("\n");
    sb.append("    memoryInfo: ").append(toIndentedString(memoryInfo)).append("\n");
    sb.append("    passwordPolicies: ").append(toIndentedString(passwordPolicies)).append("\n");
    sb.append("    profileInfo: ").append(toIndentedString(profileInfo)).append("\n");
    sb.append("    protocolMapperTypes: ").append(toIndentedString(protocolMapperTypes)).append("\n");
    sb.append("    providers: ").append(toIndentedString(providers)).append("\n");
    sb.append("    socialProviders: ").append(toIndentedString(socialProviders)).append("\n");
    sb.append("    systemInfo: ").append(toIndentedString(systemInfo)).append("\n");
    sb.append("    themes: ").append(toIndentedString(themes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

